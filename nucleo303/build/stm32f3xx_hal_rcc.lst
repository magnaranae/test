ARM GAS  /tmp/ccyrAJeC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	aPLLMULFactorTable
  18              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
  19              		.align	2
  22              	aPLLMULFactorTable:
  23 0000 02       		.byte	2
  24 0001 03       		.byte	3
  25 0002 04       		.byte	4
  26 0003 05       		.byte	5
  27 0004 06       		.byte	6
  28 0005 07       		.byte	7
  29 0006 08       		.byte	8
  30 0007 09       		.byte	9
  31 0008 0A       		.byte	10
  32 0009 0B       		.byte	11
  33 000a 0C       		.byte	12
  34 000b 0D       		.byte	13
  35 000c 0E       		.byte	14
  36 000d 0F       		.byte	15
  37 000e 10       		.byte	16
  38 000f 10       		.byte	16
  39              		.global	aPredivFactorTable
  40              		.section	.rodata.aPredivFactorTable,"a",%progbits
  41              		.align	2
  44              	aPredivFactorTable:
  45 0000 01       		.byte	1
  46 0001 02       		.byte	2
  47 0002 03       		.byte	3
  48 0003 04       		.byte	4
  49 0004 05       		.byte	5
  50 0005 06       		.byte	6
  51 0006 07       		.byte	7
  52 0007 08       		.byte	8
  53 0008 09       		.byte	9
  54 0009 0A       		.byte	10
  55 000a 0B       		.byte	11
  56 000b 0C       		.byte	12
  57 000c 0D       		.byte	13
  58 000d 0E       		.byte	14
  59 000e 0F       		.byte	15
  60 000f 10       		.byte	16
  61              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
ARM GAS  /tmp/ccyrAJeC.s 			page 2


  62              		.align	1
  63              		.global	HAL_RCC_DeInit
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	HAL_RCC_DeInit:
  70              	.LFB123:
  71              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
ARM GAS  /tmp/ccyrAJeC.s 			page 3


  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
ARM GAS  /tmp/ccyrAJeC.s 			page 4


 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
ARM GAS  /tmp/ccyrAJeC.s 			page 5


 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  72              		.loc 1 217 0
  73              		.cfi_startproc
ARM GAS  /tmp/ccyrAJeC.s 			page 6


  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 84B0     		sub	sp, sp, #16
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 24
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI2:
  86              		.cfi_def_cfa_register 7
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0;
  87              		.loc 1 218 0
  88 0006 0023     		movs	r3, #0
  89 0008 FB60     		str	r3, [r7, #12]
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit */
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  90              		.loc 1 221 0
  91 000a 494B     		ldr	r3, .L11
  92 000c 1B68     		ldr	r3, [r3]
  93 000e 484A     		ldr	r2, .L11
  94 0010 43F00103 		orr	r3, r3, #1
  95 0014 1360     		str	r3, [r2]
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSIRDY bit is set before writing default HSITRIM value */
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  96              		.loc 1 225 0
  97 0016 FFF7FEFF 		bl	HAL_GetTick
  98 001a F860     		str	r0, [r7, #12]
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till HSI is ready */
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  99              		.loc 1 228 0
 100 001c 08E0     		b	.L2
 101              	.L4:
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 102              		.loc 1 230 0
 103 001e FFF7FEFF 		bl	HAL_GetTick
 104 0022 0246     		mov	r2, r0
 105 0024 FB68     		ldr	r3, [r7, #12]
 106 0026 D31A     		subs	r3, r2, r3
 107 0028 022B     		cmp	r3, #2
 108 002a 01D9     		bls	.L2
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 109              		.loc 1 232 0
 110 002c 0323     		movs	r3, #3
 111 002e 7BE0     		b	.L3
 112              	.L2:
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 113              		.loc 1 228 0
 114 0030 3F4B     		ldr	r3, .L11
ARM GAS  /tmp/ccyrAJeC.s 			page 7


 115 0032 1B68     		ldr	r3, [r3]
 116 0034 03F00203 		and	r3, r3, #2
 117 0038 002B     		cmp	r3, #0
 118 003a F0D0     		beq	.L4
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSITRIM default value */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, RCC_CR_HSITRIM_4);
 119              		.loc 1 237 0
 120 003c 3C4B     		ldr	r3, .L11
 121 003e 1B68     		ldr	r3, [r3]
 122 0040 23F0F803 		bic	r3, r3, #248
 123 0044 3A4A     		ldr	r2, .L11
 124 0046 43F08003 		orr	r3, r3, #128
 125 004a 1360     		str	r3, [r2]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
 126              		.loc 1 240 0
 127 004c 384B     		ldr	r3, .L11
 128 004e 5A68     		ldr	r2, [r3, #4]
 129 0050 3749     		ldr	r1, .L11
 130 0052 384B     		ldr	r3, .L11+4
 131 0054 1340     		ands	r3, r3, r2
 132 0056 4B60     		str	r3, [r1, #4]
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSI selected as system clock source */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 133              		.loc 1 244 0
 134 0058 FFF7FEFF 		bl	HAL_GetTick
 135 005c F860     		str	r0, [r7, #12]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 136              		.loc 1 247 0
 137 005e 0AE0     		b	.L5
 138              	.L6:
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 139              		.loc 1 249 0
 140 0060 FFF7FEFF 		bl	HAL_GetTick
 141 0064 0246     		mov	r2, r0
 142 0066 FB68     		ldr	r3, [r7, #12]
 143 0068 D31A     		subs	r3, r2, r3
 144 006a 41F28832 		movw	r2, #5000
 145 006e 9342     		cmp	r3, r2
 146 0070 01D9     		bls	.L5
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 147              		.loc 1 251 0
 148 0072 0323     		movs	r3, #3
 149 0074 58E0     		b	.L3
 150              	.L5:
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 151              		.loc 1 247 0
ARM GAS  /tmp/ccyrAJeC.s 			page 8


 152 0076 2E4B     		ldr	r3, .L11
 153 0078 5B68     		ldr	r3, [r3, #4]
 154 007a 03F00C03 		and	r3, r3, #12
 155 007e 002B     		cmp	r3, #0
 156 0080 EED1     		bne	.L6
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 157              		.loc 1 256 0
 158 0082 2D4B     		ldr	r3, .L11+8
 159 0084 2D4A     		ldr	r2, .L11+12
 160 0086 1A60     		str	r2, [r3]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 161              		.loc 1 259 0
 162 0088 2D4B     		ldr	r3, .L11+16
 163 008a 1B68     		ldr	r3, [r3]
 164 008c 1846     		mov	r0, r3
 165 008e FFF7FEFF 		bl	HAL_InitTick
 166 0092 0346     		mov	r3, r0
 167 0094 002B     		cmp	r3, #0
 168 0096 01D0     		beq	.L7
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 169              		.loc 1 261 0
 170 0098 0123     		movs	r3, #1
 171 009a 45E0     		b	.L3
 172              	.L7:
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 173              		.loc 1 265 0
 174 009c 244B     		ldr	r3, .L11
 175 009e 1B68     		ldr	r3, [r3]
 176 00a0 234A     		ldr	r2, .L11
 177 00a2 23F08473 		bic	r3, r3, #17301504
 178 00a6 23F48033 		bic	r3, r3, #65536
 179 00aa 1360     		str	r3, [r2]
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 180              		.loc 1 268 0
 181 00ac 204B     		ldr	r3, .L11
 182 00ae 1B68     		ldr	r3, [r3]
 183 00b0 1F4A     		ldr	r2, .L11
 184 00b2 23F48023 		bic	r3, r3, #262144
 185 00b6 1360     		str	r3, [r2]
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure PLLRDY is reset */
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 186              		.loc 1 272 0
 187 00b8 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccyrAJeC.s 			page 9


 188 00bc F860     		str	r0, [r7, #12]
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 189              		.loc 1 273 0
 190 00be 08E0     		b	.L8
 191              	.L9:
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 192              		.loc 1 275 0
 193 00c0 FFF7FEFF 		bl	HAL_GetTick
 194 00c4 0246     		mov	r2, r0
 195 00c6 FB68     		ldr	r3, [r7, #12]
 196 00c8 D31A     		subs	r3, r2, r3
 197 00ca 022B     		cmp	r3, #2
 198 00cc 01D9     		bls	.L8
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 199              		.loc 1 277 0
 200 00ce 0323     		movs	r3, #3
 201 00d0 2AE0     		b	.L3
 202              	.L8:
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 203              		.loc 1 273 0
 204 00d2 174B     		ldr	r3, .L11
 205 00d4 1B68     		ldr	r3, [r3]
 206 00d6 03F00073 		and	r3, r3, #33554432
 207 00da 002B     		cmp	r3, #0
 208 00dc F0D1     		bne	.L9
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 209              		.loc 1 282 0
 210 00de 144B     		ldr	r3, .L11
 211 00e0 0022     		movs	r2, #0
 212 00e2 5A60     		str	r2, [r3, #4]
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 213              		.loc 1 285 0
 214 00e4 124B     		ldr	r3, .L11
 215 00e6 0022     		movs	r2, #0
 216 00e8 DA62     		str	r2, [r3, #44]
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 217              		.loc 1 288 0
 218 00ea 114B     		ldr	r3, .L11
 219 00ec 0022     		movs	r2, #0
 220 00ee 1A63     		str	r2, [r3, #48]
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Clear all interrupt flags */
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 221              		.loc 1 291 0
 222 00f0 0F4B     		ldr	r3, .L11
 223 00f2 9B68     		ldr	r3, [r3, #8]
 224 00f4 0E4A     		ldr	r2, .L11
ARM GAS  /tmp/ccyrAJeC.s 			page 10


 225 00f6 43F41F03 		orr	r3, r3, #10420224
 226 00fa 9360     		str	r3, [r2, #8]
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 227              		.loc 1 294 0
 228 00fc 0C4B     		ldr	r3, .L11
 229 00fe 0022     		movs	r2, #0
 230 0100 9A60     		str	r2, [r3, #8]
 231 0102 4FF08073 		mov	r3, #16777216
 232 0106 BB60     		str	r3, [r7, #8]
 233              	.LBB168:
 234              	.LBB169:
 235              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccyrAJeC.s 			page 11


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccyrAJeC.s 			page 12


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccyrAJeC.s 			page 13


 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccyrAJeC.s 			page 14


 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyrAJeC.s 			page 15


 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
ARM GAS  /tmp/ccyrAJeC.s 			page 16


 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyrAJeC.s 			page 17


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccyrAJeC.s 			page 18


 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
ARM GAS  /tmp/ccyrAJeC.s 			page 19


 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyrAJeC.s 			page 20


 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyrAJeC.s 			page 21


 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccyrAJeC.s 			page 22


 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /tmp/ccyrAJeC.s 			page 23


 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccyrAJeC.s 			page 24


 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyrAJeC.s 			page 25


 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/ccyrAJeC.s 			page 26


 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccyrAJeC.s 			page 27


 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 236              		.loc 2 988 0
 237 0108 BB68     		ldr	r3, [r7, #8]
 238              		.syntax unified
 239              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 240 010a 93FAA3F3 		rbit r3, r3
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244 010e 7B60     		str	r3, [r7, #4]
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 245              		.loc 2 1001 0
 246 0110 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccyrAJeC.s 			page 28


 247              	.LBE169:
 248              	.LBE168:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset all CSR flags */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 249              		.loc 1 297 0
 250 0112 B3FA83F3 		clz	r3, r3
 251 0116 DBB2     		uxtb	r3, r3
 252 0118 1A46     		mov	r2, r3
 253 011a 0A4B     		ldr	r3, .L11+20
 254 011c 1344     		add	r3, r3, r2
 255 011e 9B00     		lsls	r3, r3, #2
 256 0120 1A46     		mov	r2, r3
 257 0122 0123     		movs	r3, #1
 258 0124 1360     		str	r3, [r2]
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 259              		.loc 1 299 0
 260 0126 0023     		movs	r3, #0
 261              	.L3:
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 262              		.loc 1 300 0
 263 0128 1846     		mov	r0, r3
 264 012a 1037     		adds	r7, r7, #16
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 267 012c BD46     		mov	sp, r7
 268              	.LCFI4:
 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 012e 80BD     		pop	{r7, pc}
 272              	.L12:
 273              		.align	2
 274              	.L11:
 275 0130 00100240 		.word	1073876992
 276 0134 0CC0FFF8 		.word	-117456884
 277 0138 00000000 		.word	SystemCoreClock
 278 013c 00127A00 		.word	8000000
 279 0140 00000000 		.word	uwTickPrio
 280 0144 20819010 		.word	277905696
 281              		.cfi_endproc
 282              	.LFE123:
 284              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 285              		.align	1
 286              		.global	HAL_RCC_OscConfig
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	HAL_RCC_OscConfig:
 293              	.LFB124:
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
ARM GAS  /tmp/ccyrAJeC.s 			page 29


 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 294              		.loc 1 317 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 512
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              	.LCFI5:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 ADF5007D 		sub	sp, sp, #512
 304              	.LCFI6:
 305              		.cfi_def_cfa_offset 520
 306 0006 00AF     		add	r7, sp, #0
 307              	.LCFI7:
 308              		.cfi_def_cfa_register 7
 309 0008 3B1D     		adds	r3, r7, #4
 310 000a 1860     		str	r0, [r3]
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t pll_config;
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t pll_config2;
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 311              		.loc 1 325 0
 312 000c 3B1D     		adds	r3, r7, #4
 313 000e 1B68     		ldr	r3, [r3]
 314 0010 002B     		cmp	r3, #0
 315 0012 02D1     		bne	.L14
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 316              		.loc 1 327 0
 317 0014 0123     		movs	r3, #1
 318 0016 00F0F4BE 		b	.L15
 319              	.L14:
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 320              		.loc 1 334 0
 321 001a 3B1D     		adds	r3, r7, #4
 322 001c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccyrAJeC.s 			page 30


 323 001e 1B68     		ldr	r3, [r3]
 324 0020 03F00103 		and	r3, r3, #1
 325 0024 002B     		cmp	r3, #0
 326 0026 00F06A81 		beq	.L16
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 327              		.loc 1 340 0
 328 002a B34B     		ldr	r3, .L154
 329 002c 5B68     		ldr	r3, [r3, #4]
 330 002e 03F00C03 		and	r3, r3, #12
 331 0032 042B     		cmp	r3, #4
 332 0034 0CD0     		beq	.L17
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 333              		.loc 1 341 0
 334 0036 B04B     		ldr	r3, .L154
 335 0038 5B68     		ldr	r3, [r3, #4]
 336 003a 03F00C03 		and	r3, r3, #12
 337 003e 082B     		cmp	r3, #8
 338 0040 59D1     		bne	.L18
 339              		.loc 1 341 0 is_stmt 0 discriminator 1
 340 0042 AD4B     		ldr	r3, .L154
 341 0044 5B68     		ldr	r3, [r3, #4]
 342 0046 03F48033 		and	r3, r3, #65536
 343 004a B3F5803F 		cmp	r3, #65536
 344 004e 52D1     		bne	.L18
 345              	.L17:
 346 0050 4FF40033 		mov	r3, #131072
 347 0054 C7F8F031 		str	r3, [r7, #496]
 348              	.LBB170:
 349              	.LBB171:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 350              		.loc 2 988 0 is_stmt 1
 351 0058 D7F8F031 		ldr	r3, [r7, #496]
 352              		.syntax unified
 353              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 354 005c 93FAA3F3 		rbit r3, r3
 355              	@ 0 "" 2
 356              		.thumb
 357              		.syntax unified
 358 0060 C7F8EC31 		str	r3, [r7, #492]
 359              		.loc 2 1001 0
 360 0064 D7F8EC31 		ldr	r3, [r7, #492]
 361              	.LBE171:
 362              	.LBE170:
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 363              		.loc 1 343 0
 364 0068 B3FA83F3 		clz	r3, r3
 365 006c DBB2     		uxtb	r3, r3
 366 006e 5B09     		lsrs	r3, r3, #5
 367 0070 DBB2     		uxtb	r3, r3
 368 0072 43F00103 		orr	r3, r3, #1
 369 0076 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccyrAJeC.s 			page 31


 370 0078 012B     		cmp	r3, #1
 371 007a 02D1     		bne	.L20
 372              		.loc 1 343 0 is_stmt 0 discriminator 1
 373 007c 9E4B     		ldr	r3, .L154
 374 007e 1B68     		ldr	r3, [r3]
 375 0080 15E0     		b	.L21
 376              	.L20:
 377 0082 4FF40033 		mov	r3, #131072
 378 0086 C7F8E831 		str	r3, [r7, #488]
 379              	.LBB172:
 380              	.LBB173:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 381              		.loc 2 988 0 is_stmt 1 discriminator 2
 382 008a D7F8E831 		ldr	r3, [r7, #488]
 383              		.syntax unified
 384              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 385 008e 93FAA3F3 		rbit r3, r3
 386              	@ 0 "" 2
 387              		.thumb
 388              		.syntax unified
 389 0092 C7F8E431 		str	r3, [r7, #484]
 390 0096 4FF40033 		mov	r3, #131072
 391 009a C7F8E031 		str	r3, [r7, #480]
 392              	.LBE173:
 393              	.LBE172:
 394              	.LBB174:
 395              	.LBB175:
 396 009e D7F8E031 		ldr	r3, [r7, #480]
 397              		.syntax unified
 398              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 399 00a2 93FAA3F3 		rbit r3, r3
 400              	@ 0 "" 2
 401              		.thumb
 402              		.syntax unified
 403 00a6 C7F8DC31 		str	r3, [r7, #476]
 404              	.LBE175:
 405              	.LBE174:
 406              		.loc 1 343 0 discriminator 2
 407 00aa 934B     		ldr	r3, .L154
 408 00ac 5B6A     		ldr	r3, [r3, #36]
 409              	.L21:
 410 00ae 4FF40032 		mov	r2, #131072
 411 00b2 C7F8D821 		str	r2, [r7, #472]
 412              	.LBB176:
 413              	.LBB177:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 414              		.loc 2 988 0 discriminator 12
 415 00b6 D7F8D821 		ldr	r2, [r7, #472]
 416              		.syntax unified
 417              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 418 00ba 92FAA2F2 		rbit r2, r2
 419              	@ 0 "" 2
 420              		.thumb
 421              		.syntax unified
 422 00be C7F8D421 		str	r2, [r7, #468]
 423              		.loc 2 1001 0 discriminator 12
 424 00c2 D7F8D421 		ldr	r2, [r7, #468]
ARM GAS  /tmp/ccyrAJeC.s 			page 32


 425              	.LBE177:
 426              	.LBE176:
 427              		.loc 1 343 0 discriminator 12
 428 00c6 B2FA82F2 		clz	r2, r2
 429 00ca D2B2     		uxtb	r2, r2
 430 00cc 42F02002 		orr	r2, r2, #32
 431 00d0 D2B2     		uxtb	r2, r2
 432 00d2 02F01F02 		and	r2, r2, #31
 433 00d6 0121     		movs	r1, #1
 434 00d8 01FA02F2 		lsl	r2, r1, r2
 435 00dc 1340     		ands	r3, r3, r2
 436 00de 002B     		cmp	r3, #0
 437 00e0 00F00C81 		beq	.L153
 438              		.loc 1 343 0 is_stmt 0 discriminator 13
 439 00e4 3B1D     		adds	r3, r7, #4
 440 00e6 1B68     		ldr	r3, [r3]
 441 00e8 5B68     		ldr	r3, [r3, #4]
 442 00ea 002B     		cmp	r3, #0
 443 00ec 40F00681 		bne	.L153
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 444              		.loc 1 345 0 is_stmt 1
 445 00f0 0123     		movs	r3, #1
 446 00f2 00F086BE 		b	.L15
 447              	.L18:
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 448              		.loc 1 351 0
 449 00f6 3B1D     		adds	r3, r7, #4
 450 00f8 1B68     		ldr	r3, [r3]
 451 00fa 5B68     		ldr	r3, [r3, #4]
 452 00fc B3F5803F 		cmp	r3, #65536
 453 0100 06D1     		bne	.L26
 454              		.loc 1 351 0 is_stmt 0 discriminator 1
 455 0102 7D4B     		ldr	r3, .L154
 456 0104 1B68     		ldr	r3, [r3]
 457 0106 7C4A     		ldr	r2, .L154
 458 0108 43F48033 		orr	r3, r3, #65536
 459 010c 1360     		str	r3, [r2]
 460 010e 30E0     		b	.L27
 461              	.L26:
 462              		.loc 1 351 0 discriminator 2
 463 0110 3B1D     		adds	r3, r7, #4
 464 0112 1B68     		ldr	r3, [r3]
 465 0114 5B68     		ldr	r3, [r3, #4]
 466 0116 002B     		cmp	r3, #0
 467 0118 0CD1     		bne	.L28
 468              		.loc 1 351 0 discriminator 3
 469 011a 774B     		ldr	r3, .L154
 470 011c 1B68     		ldr	r3, [r3]
 471 011e 764A     		ldr	r2, .L154
 472 0120 23F48033 		bic	r3, r3, #65536
 473 0124 1360     		str	r3, [r2]
ARM GAS  /tmp/ccyrAJeC.s 			page 33


 474 0126 744B     		ldr	r3, .L154
 475 0128 1B68     		ldr	r3, [r3]
 476 012a 734A     		ldr	r2, .L154
 477 012c 23F48023 		bic	r3, r3, #262144
 478 0130 1360     		str	r3, [r2]
 479 0132 1EE0     		b	.L27
 480              	.L28:
 481              		.loc 1 351 0 discriminator 4
 482 0134 3B1D     		adds	r3, r7, #4
 483 0136 1B68     		ldr	r3, [r3]
 484 0138 5B68     		ldr	r3, [r3, #4]
 485 013a B3F5A02F 		cmp	r3, #327680
 486 013e 0CD1     		bne	.L29
 487              		.loc 1 351 0 discriminator 5
 488 0140 6D4B     		ldr	r3, .L154
 489 0142 1B68     		ldr	r3, [r3]
 490 0144 6C4A     		ldr	r2, .L154
 491 0146 43F48023 		orr	r3, r3, #262144
 492 014a 1360     		str	r3, [r2]
 493 014c 6A4B     		ldr	r3, .L154
 494 014e 1B68     		ldr	r3, [r3]
 495 0150 694A     		ldr	r2, .L154
 496 0152 43F48033 		orr	r3, r3, #65536
 497 0156 1360     		str	r3, [r2]
 498 0158 0BE0     		b	.L27
 499              	.L29:
 500              		.loc 1 351 0 discriminator 6
 501 015a 674B     		ldr	r3, .L154
 502 015c 1B68     		ldr	r3, [r3]
 503 015e 664A     		ldr	r2, .L154
 504 0160 23F48033 		bic	r3, r3, #65536
 505 0164 1360     		str	r3, [r2]
 506 0166 644B     		ldr	r3, .L154
 507 0168 1B68     		ldr	r3, [r3]
 508 016a 634A     		ldr	r2, .L154
 509 016c 23F48023 		bic	r3, r3, #262144
 510 0170 1360     		str	r3, [r2]
 511              	.L27:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 512              		.loc 1 355 0 is_stmt 1
 513 0172 614B     		ldr	r3, .L154
 514 0174 DB6A     		ldr	r3, [r3, #44]
 515 0176 23F00F02 		bic	r2, r3, #15
 516 017a 3B1D     		adds	r3, r7, #4
 517 017c 1B68     		ldr	r3, [r3]
 518 017e 9B68     		ldr	r3, [r3, #8]
 519 0180 5D49     		ldr	r1, .L154
 520 0182 1343     		orrs	r3, r3, r2
 521 0184 CB62     		str	r3, [r1, #44]
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 522              		.loc 1 359 0
ARM GAS  /tmp/ccyrAJeC.s 			page 34


 523 0186 3B1D     		adds	r3, r7, #4
 524 0188 1B68     		ldr	r3, [r3]
 525 018a 5B68     		ldr	r3, [r3, #4]
 526 018c 002B     		cmp	r3, #0
 527 018e 59D0     		beq	.L30
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 528              		.loc 1 362 0
 529 0190 FFF7FEFF 		bl	HAL_GetTick
 530 0194 C7F8F801 		str	r0, [r7, #504]
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 531              		.loc 1 365 0
 532 0198 0AE0     		b	.L31
 533              	.L38:
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 534              		.loc 1 367 0
 535 019a FFF7FEFF 		bl	HAL_GetTick
 536 019e 0246     		mov	r2, r0
 537 01a0 D7F8F831 		ldr	r3, [r7, #504]
 538 01a4 D31A     		subs	r3, r2, r3
 539 01a6 642B     		cmp	r3, #100
 540 01a8 02D9     		bls	.L31
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 541              		.loc 1 369 0
 542 01aa 0323     		movs	r3, #3
 543 01ac 00F029BE 		b	.L15
 544              	.L31:
 545 01b0 4FF40033 		mov	r3, #131072
 546 01b4 C7F8D031 		str	r3, [r7, #464]
 547              	.LBB178:
 548              	.LBB179:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 549              		.loc 2 988 0
 550 01b8 D7F8D031 		ldr	r3, [r7, #464]
 551              		.syntax unified
 552              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 553 01bc 93FAA3F3 		rbit r3, r3
 554              	@ 0 "" 2
 555              		.thumb
 556              		.syntax unified
 557 01c0 C7F8CC31 		str	r3, [r7, #460]
 558              		.loc 2 1001 0
 559 01c4 D7F8CC31 		ldr	r3, [r7, #460]
 560              	.LBE179:
 561              	.LBE178:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 562              		.loc 1 365 0
 563 01c8 B3FA83F3 		clz	r3, r3
 564 01cc DBB2     		uxtb	r3, r3
 565 01ce 5B09     		lsrs	r3, r3, #5
 566 01d0 DBB2     		uxtb	r3, r3
 567 01d2 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccyrAJeC.s 			page 35


 568 01d6 DBB2     		uxtb	r3, r3
 569 01d8 012B     		cmp	r3, #1
 570 01da 02D1     		bne	.L33
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 571              		.loc 1 365 0 is_stmt 0 discriminator 1
 572 01dc 464B     		ldr	r3, .L154
 573 01de 1B68     		ldr	r3, [r3]
 574 01e0 15E0     		b	.L34
 575              	.L33:
 576 01e2 4FF40033 		mov	r3, #131072
 577 01e6 C7F8C831 		str	r3, [r7, #456]
 578              	.LBB180:
 579              	.LBB181:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 580              		.loc 2 988 0 is_stmt 1 discriminator 2
 581 01ea D7F8C831 		ldr	r3, [r7, #456]
 582              		.syntax unified
 583              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 584 01ee 93FAA3F3 		rbit r3, r3
 585              	@ 0 "" 2
 586              		.thumb
 587              		.syntax unified
 588 01f2 C7F8C431 		str	r3, [r7, #452]
 589 01f6 4FF40033 		mov	r3, #131072
 590 01fa C7F8C031 		str	r3, [r7, #448]
 591              	.LBE181:
 592              	.LBE180:
 593              	.LBB182:
 594              	.LBB183:
 595 01fe D7F8C031 		ldr	r3, [r7, #448]
 596              		.syntax unified
 597              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 598 0202 93FAA3F3 		rbit r3, r3
 599              	@ 0 "" 2
 600              		.thumb
 601              		.syntax unified
 602 0206 C7F8BC31 		str	r3, [r7, #444]
 603              	.LBE183:
 604              	.LBE182:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 605              		.loc 1 365 0 discriminator 2
 606 020a 3B4B     		ldr	r3, .L154
 607 020c 5B6A     		ldr	r3, [r3, #36]
 608              	.L34:
 609 020e 4FF40032 		mov	r2, #131072
 610 0212 C7F8B821 		str	r2, [r7, #440]
 611              	.LBB184:
 612              	.LBB185:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 613              		.loc 2 988 0 discriminator 12
 614 0216 D7F8B821 		ldr	r2, [r7, #440]
 615              		.syntax unified
 616              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 617 021a 92FAA2F2 		rbit r2, r2
 618              	@ 0 "" 2
 619              		.thumb
 620              		.syntax unified
ARM GAS  /tmp/ccyrAJeC.s 			page 36


 621 021e C7F8B421 		str	r2, [r7, #436]
 622              		.loc 2 1001 0 discriminator 12
 623 0222 D7F8B421 		ldr	r2, [r7, #436]
 624              	.LBE185:
 625              	.LBE184:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 626              		.loc 1 365 0 discriminator 12
 627 0226 B2FA82F2 		clz	r2, r2
 628 022a D2B2     		uxtb	r2, r2
 629 022c 42F02002 		orr	r2, r2, #32
 630 0230 D2B2     		uxtb	r2, r2
 631 0232 02F01F02 		and	r2, r2, #31
 632 0236 0121     		movs	r1, #1
 633 0238 01FA02F2 		lsl	r2, r1, r2
 634 023c 1340     		ands	r3, r3, r2
 635 023e 002B     		cmp	r3, #0
 636 0240 ABD0     		beq	.L38
 637 0242 5CE0     		b	.L16
 638              	.L30:
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 639              		.loc 1 376 0
 640 0244 FFF7FEFF 		bl	HAL_GetTick
 641 0248 C7F8F801 		str	r0, [r7, #504]
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 642              		.loc 1 379 0
 643 024c 0AE0     		b	.L39
 644              	.L46:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 645              		.loc 1 381 0
 646 024e FFF7FEFF 		bl	HAL_GetTick
 647 0252 0246     		mov	r2, r0
 648 0254 D7F8F831 		ldr	r3, [r7, #504]
 649 0258 D31A     		subs	r3, r2, r3
 650 025a 642B     		cmp	r3, #100
 651 025c 02D9     		bls	.L39
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 652              		.loc 1 383 0
 653 025e 0323     		movs	r3, #3
 654 0260 00F0CFBD 		b	.L15
 655              	.L39:
 656 0264 4FF40033 		mov	r3, #131072
 657 0268 C7F8B031 		str	r3, [r7, #432]
 658              	.LBB186:
 659              	.LBB187:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 660              		.loc 2 988 0
 661 026c D7F8B031 		ldr	r3, [r7, #432]
ARM GAS  /tmp/ccyrAJeC.s 			page 37


 662              		.syntax unified
 663              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 664 0270 93FAA3F3 		rbit r3, r3
 665              	@ 0 "" 2
 666              		.thumb
 667              		.syntax unified
 668 0274 C7F8AC31 		str	r3, [r7, #428]
 669              		.loc 2 1001 0
 670 0278 D7F8AC31 		ldr	r3, [r7, #428]
 671              	.LBE187:
 672              	.LBE186:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 673              		.loc 1 379 0
 674 027c B3FA83F3 		clz	r3, r3
 675 0280 DBB2     		uxtb	r3, r3
 676 0282 5B09     		lsrs	r3, r3, #5
 677 0284 DBB2     		uxtb	r3, r3
 678 0286 43F00103 		orr	r3, r3, #1
 679 028a DBB2     		uxtb	r3, r3
 680 028c 012B     		cmp	r3, #1
 681 028e 02D1     		bne	.L41
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 682              		.loc 1 379 0 is_stmt 0 discriminator 1
 683 0290 194B     		ldr	r3, .L154
 684 0292 1B68     		ldr	r3, [r3]
 685 0294 15E0     		b	.L42
 686              	.L41:
 687 0296 4FF40033 		mov	r3, #131072
 688 029a C7F8A831 		str	r3, [r7, #424]
 689              	.LBB188:
 690              	.LBB189:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 691              		.loc 2 988 0 is_stmt 1 discriminator 2
 692 029e D7F8A831 		ldr	r3, [r7, #424]
 693              		.syntax unified
 694              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 695 02a2 93FAA3F3 		rbit r3, r3
 696              	@ 0 "" 2
 697              		.thumb
 698              		.syntax unified
 699 02a6 C7F8A431 		str	r3, [r7, #420]
 700 02aa 4FF40033 		mov	r3, #131072
 701 02ae C7F8A031 		str	r3, [r7, #416]
 702              	.LBE189:
 703              	.LBE188:
 704              	.LBB190:
 705              	.LBB191:
 706 02b2 D7F8A031 		ldr	r3, [r7, #416]
 707              		.syntax unified
 708              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 709 02b6 93FAA3F3 		rbit r3, r3
 710              	@ 0 "" 2
 711              		.thumb
 712              		.syntax unified
 713 02ba C7F89C31 		str	r3, [r7, #412]
 714              	.LBE191:
 715              	.LBE190:
ARM GAS  /tmp/ccyrAJeC.s 			page 38


 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 716              		.loc 1 379 0 discriminator 2
 717 02be 0E4B     		ldr	r3, .L154
 718 02c0 5B6A     		ldr	r3, [r3, #36]
 719              	.L42:
 720 02c2 4FF40032 		mov	r2, #131072
 721 02c6 C7F89821 		str	r2, [r7, #408]
 722              	.LBB192:
 723              	.LBB193:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 724              		.loc 2 988 0 discriminator 12
 725 02ca D7F89821 		ldr	r2, [r7, #408]
 726              		.syntax unified
 727              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 728 02ce 92FAA2F2 		rbit r2, r2
 729              	@ 0 "" 2
 730              		.thumb
 731              		.syntax unified
 732 02d2 C7F89421 		str	r2, [r7, #404]
 733              		.loc 2 1001 0 discriminator 12
 734 02d6 D7F89421 		ldr	r2, [r7, #404]
 735              	.LBE193:
 736              	.LBE192:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 737              		.loc 1 379 0 discriminator 12
 738 02da B2FA82F2 		clz	r2, r2
 739 02de D2B2     		uxtb	r2, r2
 740 02e0 42F02002 		orr	r2, r2, #32
 741 02e4 D2B2     		uxtb	r2, r2
 742 02e6 02F01F02 		and	r2, r2, #31
 743 02ea 0121     		movs	r1, #1
 744 02ec 01FA02F2 		lsl	r2, r1, r2
 745 02f0 1340     		ands	r3, r3, r2
 746 02f2 002B     		cmp	r3, #0
 747 02f4 ABD1     		bne	.L46
 748 02f6 02E0     		b	.L16
 749              	.L155:
 750              		.align	2
 751              	.L154:
 752 02f8 00100240 		.word	1073876992
 753              	.L153:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 754              		.loc 1 343 0
 755 02fc 00BF     		nop
 756              	.L16:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 757              		.loc 1 390 0
 758 02fe 3B1D     		adds	r3, r7, #4
 759 0300 1B68     		ldr	r3, [r3]
 760 0302 1B68     		ldr	r3, [r3]
 761 0304 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccyrAJeC.s 			page 39


 762 0308 002B     		cmp	r3, #0
 763 030a 00F06F81 		beq	.L47
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 764              		.loc 1 397 0
 765 030e D04B     		ldr	r3, .L156
 766 0310 5B68     		ldr	r3, [r3, #4]
 767 0312 03F00C03 		and	r3, r3, #12
 768 0316 002B     		cmp	r3, #0
 769 0318 0BD0     		beq	.L48
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 770              		.loc 1 398 0
 771 031a CD4B     		ldr	r3, .L156
 772 031c 5B68     		ldr	r3, [r3, #4]
 773 031e 03F00C03 		and	r3, r3, #12
 774 0322 082B     		cmp	r3, #8
 775 0324 6CD1     		bne	.L49
 776              		.loc 1 398 0 is_stmt 0 discriminator 1
 777 0326 CA4B     		ldr	r3, .L156
 778 0328 5B68     		ldr	r3, [r3, #4]
 779 032a 03F48033 		and	r3, r3, #65536
 780 032e 002B     		cmp	r3, #0
 781 0330 66D1     		bne	.L49
 782              	.L48:
 783 0332 0223     		movs	r3, #2
 784 0334 C7F89031 		str	r3, [r7, #400]
 785              	.LBB194:
 786              	.LBB195:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 787              		.loc 2 988 0 is_stmt 1
 788 0338 D7F89031 		ldr	r3, [r7, #400]
 789              		.syntax unified
 790              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 791 033c 93FAA3F3 		rbit r3, r3
 792              	@ 0 "" 2
 793              		.thumb
 794              		.syntax unified
 795 0340 C7F88C31 		str	r3, [r7, #396]
 796              		.loc 2 1001 0
 797 0344 D7F88C31 		ldr	r3, [r7, #396]
 798              	.LBE195:
 799              	.LBE194:
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 800              		.loc 1 401 0
 801 0348 B3FA83F3 		clz	r3, r3
 802 034c DBB2     		uxtb	r3, r3
 803 034e 5B09     		lsrs	r3, r3, #5
 804 0350 DBB2     		uxtb	r3, r3
 805 0352 43F00103 		orr	r3, r3, #1
 806 0356 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccyrAJeC.s 			page 40


 807 0358 012B     		cmp	r3, #1
 808 035a 02D1     		bne	.L51
 809              		.loc 1 401 0 is_stmt 0 discriminator 1
 810 035c BC4B     		ldr	r3, .L156
 811 035e 1B68     		ldr	r3, [r3]
 812 0360 13E0     		b	.L52
 813              	.L51:
 814 0362 0223     		movs	r3, #2
 815 0364 C7F88831 		str	r3, [r7, #392]
 816              	.LBB196:
 817              	.LBB197:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 818              		.loc 2 988 0 is_stmt 1 discriminator 2
 819 0368 D7F88831 		ldr	r3, [r7, #392]
 820              		.syntax unified
 821              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 822 036c 93FAA3F3 		rbit r3, r3
 823              	@ 0 "" 2
 824              		.thumb
 825              		.syntax unified
 826 0370 C7F88431 		str	r3, [r7, #388]
 827 0374 0223     		movs	r3, #2
 828 0376 C7F88031 		str	r3, [r7, #384]
 829              	.LBE197:
 830              	.LBE196:
 831              	.LBB198:
 832              	.LBB199:
 833 037a D7F88031 		ldr	r3, [r7, #384]
 834              		.syntax unified
 835              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 836 037e 93FAA3F3 		rbit r3, r3
 837              	@ 0 "" 2
 838              		.thumb
 839              		.syntax unified
 840 0382 C7F87C31 		str	r3, [r7, #380]
 841              	.LBE199:
 842              	.LBE198:
 843              		.loc 1 401 0 discriminator 2
 844 0386 B24B     		ldr	r3, .L156
 845 0388 5B6A     		ldr	r3, [r3, #36]
 846              	.L52:
 847 038a 0222     		movs	r2, #2
 848 038c C7F87821 		str	r2, [r7, #376]
 849              	.LBB200:
 850              	.LBB201:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 851              		.loc 2 988 0 discriminator 12
 852 0390 D7F87821 		ldr	r2, [r7, #376]
 853              		.syntax unified
 854              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 855 0394 92FAA2F2 		rbit r2, r2
 856              	@ 0 "" 2
 857              		.thumb
 858              		.syntax unified
 859 0398 C7F87421 		str	r2, [r7, #372]
 860              		.loc 2 1001 0 discriminator 12
 861 039c D7F87421 		ldr	r2, [r7, #372]
ARM GAS  /tmp/ccyrAJeC.s 			page 41


 862              	.LBE201:
 863              	.LBE200:
 864              		.loc 1 401 0 discriminator 12
 865 03a0 B2FA82F2 		clz	r2, r2
 866 03a4 D2B2     		uxtb	r2, r2
 867 03a6 42F02002 		orr	r2, r2, #32
 868 03aa D2B2     		uxtb	r2, r2
 869 03ac 02F01F02 		and	r2, r2, #31
 870 03b0 0121     		movs	r1, #1
 871 03b2 01FA02F2 		lsl	r2, r1, r2
 872 03b6 1340     		ands	r3, r3, r2
 873 03b8 002B     		cmp	r3, #0
 874 03ba 07D0     		beq	.L56
 875              		.loc 1 401 0 is_stmt 0 discriminator 13
 876 03bc 3B1D     		adds	r3, r7, #4
 877 03be 1B68     		ldr	r3, [r3]
 878 03c0 1B69     		ldr	r3, [r3, #16]
 879 03c2 012B     		cmp	r3, #1
 880 03c4 02D0     		beq	.L56
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 881              		.loc 1 403 0 is_stmt 1
 882 03c6 0123     		movs	r3, #1
 883 03c8 00F01BBD 		b	.L15
 884              	.L56:
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 885              		.loc 1 409 0
 886 03cc A04B     		ldr	r3, .L156
 887 03ce 1B68     		ldr	r3, [r3]
 888 03d0 23F0F802 		bic	r2, r3, #248
 889 03d4 3B1D     		adds	r3, r7, #4
 890 03d6 1B68     		ldr	r3, [r3]
 891 03d8 5B69     		ldr	r3, [r3, #20]
 892 03da F821     		movs	r1, #248
 893 03dc C7F87011 		str	r1, [r7, #368]
 894              	.LBB202:
 895              	.LBB203:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 896              		.loc 2 988 0
 897 03e0 D7F87011 		ldr	r1, [r7, #368]
 898              		.syntax unified
 899              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 900 03e4 91FAA1F1 		rbit r1, r1
 901              	@ 0 "" 2
 902              		.thumb
 903              		.syntax unified
 904 03e8 C7F86C11 		str	r1, [r7, #364]
 905              		.loc 2 1001 0
 906 03ec D7F86C11 		ldr	r1, [r7, #364]
 907              	.LBE203:
 908              	.LBE202:
 909              		.loc 1 409 0
ARM GAS  /tmp/ccyrAJeC.s 			page 42


 910 03f0 B1FA81F1 		clz	r1, r1
 911 03f4 C9B2     		uxtb	r1, r1
 912 03f6 8B40     		lsls	r3, r3, r1
 913 03f8 9549     		ldr	r1, .L156
 914 03fa 1343     		orrs	r3, r3, r2
 915 03fc 0B60     		str	r3, [r1]
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 916              		.loc 1 401 0
 917 03fe F5E0     		b	.L47
 918              	.L49:
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 919              		.loc 1 415 0
 920 0400 3B1D     		adds	r3, r7, #4
 921 0402 1B68     		ldr	r3, [r3]
 922 0404 1B69     		ldr	r3, [r3, #16]
 923 0406 002B     		cmp	r3, #0
 924 0408 00F08580 		beq	.L58
 925 040c 0123     		movs	r3, #1
 926 040e C7F86831 		str	r3, [r7, #360]
 927              	.LBB204:
 928              	.LBB205:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 929              		.loc 2 988 0
 930 0412 D7F86831 		ldr	r3, [r7, #360]
 931              		.syntax unified
 932              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 933 0416 93FAA3F3 		rbit r3, r3
 934              	@ 0 "" 2
 935              		.thumb
 936              		.syntax unified
 937 041a C7F86431 		str	r3, [r7, #356]
 938              		.loc 2 1001 0
 939 041e D7F86431 		ldr	r3, [r7, #356]
 940              	.LBE205:
 941              	.LBE204:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 942              		.loc 1 418 0
 943 0422 B3FA83F3 		clz	r3, r3
 944 0426 DBB2     		uxtb	r3, r3
 945 0428 03F18453 		add	r3, r3, #276824064
 946 042c 03F58413 		add	r3, r3, #1081344
 947 0430 9B00     		lsls	r3, r3, #2
 948 0432 1A46     		mov	r2, r3
 949 0434 0123     		movs	r3, #1
 950 0436 1360     		str	r3, [r2]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 951              		.loc 1 421 0
 952 0438 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccyrAJeC.s 			page 43


 953 043c C7F8F801 		str	r0, [r7, #504]
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 954              		.loc 1 424 0
 955 0440 0AE0     		b	.L60
 956              	.L67:
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 957              		.loc 1 426 0
 958 0442 FFF7FEFF 		bl	HAL_GetTick
 959 0446 0246     		mov	r2, r0
 960 0448 D7F8F831 		ldr	r3, [r7, #504]
 961 044c D31A     		subs	r3, r2, r3
 962 044e 022B     		cmp	r3, #2
 963 0450 02D9     		bls	.L60
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 964              		.loc 1 428 0
 965 0452 0323     		movs	r3, #3
 966 0454 00F0D5BC 		b	.L15
 967              	.L60:
 968 0458 0223     		movs	r3, #2
 969 045a C7F86031 		str	r3, [r7, #352]
 970              	.LBB206:
 971              	.LBB207:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972              		.loc 2 988 0
 973 045e D7F86031 		ldr	r3, [r7, #352]
 974              		.syntax unified
 975              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 976 0462 93FAA3F3 		rbit r3, r3
 977              	@ 0 "" 2
 978              		.thumb
 979              		.syntax unified
 980 0466 C7F85C31 		str	r3, [r7, #348]
 981              		.loc 2 1001 0
 982 046a D7F85C31 		ldr	r3, [r7, #348]
 983              	.LBE207:
 984              	.LBE206:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 985              		.loc 1 424 0
 986 046e B3FA83F3 		clz	r3, r3
 987 0472 DBB2     		uxtb	r3, r3
 988 0474 5B09     		lsrs	r3, r3, #5
 989 0476 DBB2     		uxtb	r3, r3
 990 0478 43F00103 		orr	r3, r3, #1
 991 047c DBB2     		uxtb	r3, r3
 992 047e 012B     		cmp	r3, #1
 993 0480 02D1     		bne	.L62
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 994              		.loc 1 424 0 is_stmt 0 discriminator 1
 995 0482 734B     		ldr	r3, .L156
 996 0484 1B68     		ldr	r3, [r3]
 997 0486 13E0     		b	.L63
 998              	.L62:
 999 0488 0223     		movs	r3, #2
ARM GAS  /tmp/ccyrAJeC.s 			page 44


 1000 048a C7F85831 		str	r3, [r7, #344]
 1001              	.LBB208:
 1002              	.LBB209:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1003              		.loc 2 988 0 is_stmt 1 discriminator 2
 1004 048e D7F85831 		ldr	r3, [r7, #344]
 1005              		.syntax unified
 1006              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1007 0492 93FAA3F3 		rbit r3, r3
 1008              	@ 0 "" 2
 1009              		.thumb
 1010              		.syntax unified
 1011 0496 C7F85431 		str	r3, [r7, #340]
 1012 049a 0223     		movs	r3, #2
 1013 049c C7F85031 		str	r3, [r7, #336]
 1014              	.LBE209:
 1015              	.LBE208:
 1016              	.LBB210:
 1017              	.LBB211:
 1018 04a0 D7F85031 		ldr	r3, [r7, #336]
 1019              		.syntax unified
 1020              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1021 04a4 93FAA3F3 		rbit r3, r3
 1022              	@ 0 "" 2
 1023              		.thumb
 1024              		.syntax unified
 1025 04a8 C7F84C31 		str	r3, [r7, #332]
 1026              	.LBE211:
 1027              	.LBE210:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1028              		.loc 1 424 0 discriminator 2
 1029 04ac 684B     		ldr	r3, .L156
 1030 04ae 5B6A     		ldr	r3, [r3, #36]
 1031              	.L63:
 1032 04b0 0222     		movs	r2, #2
 1033 04b2 C7F84821 		str	r2, [r7, #328]
 1034              	.LBB212:
 1035              	.LBB213:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1036              		.loc 2 988 0 discriminator 12
 1037 04b6 D7F84821 		ldr	r2, [r7, #328]
 1038              		.syntax unified
 1039              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1040 04ba 92FAA2F2 		rbit r2, r2
 1041              	@ 0 "" 2
 1042              		.thumb
 1043              		.syntax unified
 1044 04be C7F84421 		str	r2, [r7, #324]
 1045              		.loc 2 1001 0 discriminator 12
 1046 04c2 D7F84421 		ldr	r2, [r7, #324]
 1047              	.LBE213:
 1048              	.LBE212:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1049              		.loc 1 424 0 discriminator 12
 1050 04c6 B2FA82F2 		clz	r2, r2
 1051 04ca D2B2     		uxtb	r2, r2
 1052 04cc 42F02002 		orr	r2, r2, #32
ARM GAS  /tmp/ccyrAJeC.s 			page 45


 1053 04d0 D2B2     		uxtb	r2, r2
 1054 04d2 02F01F02 		and	r2, r2, #31
 1055 04d6 0121     		movs	r1, #1
 1056 04d8 01FA02F2 		lsl	r2, r1, r2
 1057 04dc 1340     		ands	r3, r3, r2
 1058 04de 002B     		cmp	r3, #0
 1059 04e0 AFD0     		beq	.L67
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 1060              		.loc 1 433 0
 1061 04e2 5B4B     		ldr	r3, .L156
 1062 04e4 1B68     		ldr	r3, [r3]
 1063 04e6 23F0F802 		bic	r2, r3, #248
 1064 04ea 3B1D     		adds	r3, r7, #4
 1065 04ec 1B68     		ldr	r3, [r3]
 1066 04ee 5B69     		ldr	r3, [r3, #20]
 1067 04f0 F821     		movs	r1, #248
 1068 04f2 C7F84011 		str	r1, [r7, #320]
 1069              	.LBB214:
 1070              	.LBB215:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1071              		.loc 2 988 0
 1072 04f6 D7F84011 		ldr	r1, [r7, #320]
 1073              		.syntax unified
 1074              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1075 04fa 91FAA1F1 		rbit r1, r1
 1076              	@ 0 "" 2
 1077              		.thumb
 1078              		.syntax unified
 1079 04fe C7F83C11 		str	r1, [r7, #316]
 1080              		.loc 2 1001 0
 1081 0502 D7F83C11 		ldr	r1, [r7, #316]
 1082              	.LBE215:
 1083              	.LBE214:
 1084              		.loc 1 433 0
 1085 0506 B1FA81F1 		clz	r1, r1
 1086 050a C9B2     		uxtb	r1, r1
 1087 050c 8B40     		lsls	r3, r3, r1
 1088 050e 5049     		ldr	r1, .L156
 1089 0510 1343     		orrs	r3, r3, r2
 1090 0512 0B60     		str	r3, [r1]
 1091 0514 6AE0     		b	.L47
 1092              	.L58:
 1093 0516 0123     		movs	r3, #1
 1094 0518 C7F83831 		str	r3, [r7, #312]
 1095              	.LBB216:
 1096              	.LBB217:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1097              		.loc 2 988 0
 1098 051c D7F83831 		ldr	r3, [r7, #312]
 1099              		.syntax unified
 1100              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1101 0520 93FAA3F3 		rbit r3, r3
 1102              	@ 0 "" 2
ARM GAS  /tmp/ccyrAJeC.s 			page 46


 1103              		.thumb
 1104              		.syntax unified
 1105 0524 C7F83431 		str	r3, [r7, #308]
 1106              		.loc 2 1001 0
 1107 0528 D7F83431 		ldr	r3, [r7, #308]
 1108              	.LBE217:
 1109              	.LBE216:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 1110              		.loc 1 438 0
 1111 052c B3FA83F3 		clz	r3, r3
 1112 0530 DBB2     		uxtb	r3, r3
 1113 0532 03F18453 		add	r3, r3, #276824064
 1114 0536 03F58413 		add	r3, r3, #1081344
 1115 053a 9B00     		lsls	r3, r3, #2
 1116 053c 1A46     		mov	r2, r3
 1117 053e 0023     		movs	r3, #0
 1118 0540 1360     		str	r3, [r2]
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1119              		.loc 1 441 0
 1120 0542 FFF7FEFF 		bl	HAL_GetTick
 1121 0546 C7F8F801 		str	r0, [r7, #504]
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 1122              		.loc 1 444 0
 1123 054a 0AE0     		b	.L70
 1124              	.L77:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 1125              		.loc 1 446 0
 1126 054c FFF7FEFF 		bl	HAL_GetTick
 1127 0550 0246     		mov	r2, r0
 1128 0552 D7F8F831 		ldr	r3, [r7, #504]
 1129 0556 D31A     		subs	r3, r2, r3
 1130 0558 022B     		cmp	r3, #2
 1131 055a 02D9     		bls	.L70
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1132              		.loc 1 448 0
 1133 055c 0323     		movs	r3, #3
 1134 055e 00F050BC 		b	.L15
 1135              	.L70:
 1136 0562 0223     		movs	r3, #2
 1137 0564 C7F83031 		str	r3, [r7, #304]
 1138              	.LBB218:
 1139              	.LBB219:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1140              		.loc 2 988 0
 1141 0568 D7F83031 		ldr	r3, [r7, #304]
 1142              		.syntax unified
 1143              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccyrAJeC.s 			page 47


 1144 056c 93FAA3F3 		rbit r3, r3
 1145              	@ 0 "" 2
 1146              		.thumb
 1147              		.syntax unified
 1148 0570 C7F82C31 		str	r3, [r7, #300]
 1149              		.loc 2 1001 0
 1150 0574 D7F82C31 		ldr	r3, [r7, #300]
 1151              	.LBE219:
 1152              	.LBE218:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1153              		.loc 1 444 0
 1154 0578 B3FA83F3 		clz	r3, r3
 1155 057c DBB2     		uxtb	r3, r3
 1156 057e 5B09     		lsrs	r3, r3, #5
 1157 0580 DBB2     		uxtb	r3, r3
 1158 0582 43F00103 		orr	r3, r3, #1
 1159 0586 DBB2     		uxtb	r3, r3
 1160 0588 012B     		cmp	r3, #1
 1161 058a 02D1     		bne	.L72
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1162              		.loc 1 444 0 is_stmt 0 discriminator 1
 1163 058c 304B     		ldr	r3, .L156
 1164 058e 1B68     		ldr	r3, [r3]
 1165 0590 13E0     		b	.L73
 1166              	.L72:
 1167 0592 0223     		movs	r3, #2
 1168 0594 C7F82831 		str	r3, [r7, #296]
 1169              	.LBB220:
 1170              	.LBB221:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1171              		.loc 2 988 0 is_stmt 1 discriminator 2
 1172 0598 D7F82831 		ldr	r3, [r7, #296]
 1173              		.syntax unified
 1174              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1175 059c 93FAA3F3 		rbit r3, r3
 1176              	@ 0 "" 2
 1177              		.thumb
 1178              		.syntax unified
 1179 05a0 C7F82431 		str	r3, [r7, #292]
 1180 05a4 0223     		movs	r3, #2
 1181 05a6 C7F82031 		str	r3, [r7, #288]
 1182              	.LBE221:
 1183              	.LBE220:
 1184              	.LBB222:
 1185              	.LBB223:
 1186 05aa D7F82031 		ldr	r3, [r7, #288]
 1187              		.syntax unified
 1188              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1189 05ae 93FAA3F3 		rbit r3, r3
 1190              	@ 0 "" 2
 1191              		.thumb
 1192              		.syntax unified
 1193 05b2 C7F81C31 		str	r3, [r7, #284]
 1194              	.LBE223:
 1195              	.LBE222:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1196              		.loc 1 444 0 discriminator 2
ARM GAS  /tmp/ccyrAJeC.s 			page 48


 1197 05b6 264B     		ldr	r3, .L156
 1198 05b8 5B6A     		ldr	r3, [r3, #36]
 1199              	.L73:
 1200 05ba 0222     		movs	r2, #2
 1201 05bc C7F81821 		str	r2, [r7, #280]
 1202              	.LBB224:
 1203              	.LBB225:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1204              		.loc 2 988 0 discriminator 12
 1205 05c0 D7F81821 		ldr	r2, [r7, #280]
 1206              		.syntax unified
 1207              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1208 05c4 92FAA2F2 		rbit r2, r2
 1209              	@ 0 "" 2
 1210              		.thumb
 1211              		.syntax unified
 1212 05c8 C7F81421 		str	r2, [r7, #276]
 1213              		.loc 2 1001 0 discriminator 12
 1214 05cc D7F81421 		ldr	r2, [r7, #276]
 1215              	.LBE225:
 1216              	.LBE224:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1217              		.loc 1 444 0 discriminator 12
 1218 05d0 B2FA82F2 		clz	r2, r2
 1219 05d4 D2B2     		uxtb	r2, r2
 1220 05d6 42F02002 		orr	r2, r2, #32
 1221 05da D2B2     		uxtb	r2, r2
 1222 05dc 02F01F02 		and	r2, r2, #31
 1223 05e0 0121     		movs	r1, #1
 1224 05e2 01FA02F2 		lsl	r2, r1, r2
 1225 05e6 1340     		ands	r3, r3, r2
 1226 05e8 002B     		cmp	r3, #0
 1227 05ea AFD1     		bne	.L77
 1228              	.L47:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 1229              		.loc 1 455 0
 1230 05ec 3B1D     		adds	r3, r7, #4
 1231 05ee 1B68     		ldr	r3, [r3]
 1232 05f0 1B68     		ldr	r3, [r3]
 1233 05f2 03F00803 		and	r3, r3, #8
 1234 05f6 002B     		cmp	r3, #0
 1235 05f8 00F0DA80 		beq	.L78
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 1236              		.loc 1 461 0
 1237 05fc 3B1D     		adds	r3, r7, #4
 1238 05fe 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccyrAJeC.s 			page 49


 1239 0600 9B69     		ldr	r3, [r3, #24]
 1240 0602 002B     		cmp	r3, #0
 1241 0604 69D0     		beq	.L79
 1242 0606 0123     		movs	r3, #1
 1243 0608 C7F81031 		str	r3, [r7, #272]
 1244              	.LBB226:
 1245              	.LBB227:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1246              		.loc 2 988 0
 1247 060c D7F81031 		ldr	r3, [r7, #272]
 1248              		.syntax unified
 1249              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1250 0610 93FAA3F3 		rbit r3, r3
 1251              	@ 0 "" 2
 1252              		.thumb
 1253              		.syntax unified
 1254 0614 C7F80C31 		str	r3, [r7, #268]
 1255              		.loc 2 1001 0
 1256 0618 D7F80C31 		ldr	r3, [r7, #268]
 1257              	.LBE227:
 1258              	.LBE226:
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 1259              		.loc 1 464 0
 1260 061c B3FA83F3 		clz	r3, r3
 1261 0620 DBB2     		uxtb	r3, r3
 1262 0622 1A46     		mov	r2, r3
 1263 0624 0B4B     		ldr	r3, .L156+4
 1264 0626 1344     		add	r3, r3, r2
 1265 0628 9B00     		lsls	r3, r3, #2
 1266 062a 1A46     		mov	r2, r3
 1267 062c 0123     		movs	r3, #1
 1268 062e 1360     		str	r3, [r2]
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1269              		.loc 1 467 0
 1270 0630 FFF7FEFF 		bl	HAL_GetTick
 1271 0634 C7F8F801 		str	r0, [r7, #504]
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 1272              		.loc 1 470 0
 1273 0638 0EE0     		b	.L81
 1274              	.L86:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1275              		.loc 1 472 0
 1276 063a FFF7FEFF 		bl	HAL_GetTick
 1277 063e 0246     		mov	r2, r0
 1278 0640 D7F8F831 		ldr	r3, [r7, #504]
 1279 0644 D31A     		subs	r3, r2, r3
 1280 0646 022B     		cmp	r3, #2
 1281 0648 06D9     		bls	.L81
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccyrAJeC.s 			page 50


 1282              		.loc 1 474 0
 1283 064a 0323     		movs	r3, #3
 1284 064c D9E3     		b	.L15
 1285              	.L157:
 1286 064e 00BF     		.align	2
 1287              	.L156:
 1288 0650 00100240 		.word	1073876992
 1289 0654 20819010 		.word	277905696
 1290              	.L81:
 1291 0658 0223     		movs	r3, #2
 1292 065a C7F80831 		str	r3, [r7, #264]
 1293              	.LBB228:
 1294              	.LBB229:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1295              		.loc 2 988 0
 1296 065e D7F80831 		ldr	r3, [r7, #264]
 1297              		.syntax unified
 1298              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1299 0662 93FAA3F3 		rbit r3, r3
 1300              	@ 0 "" 2
 1301              		.thumb
 1302              		.syntax unified
 1303 0666 C7F80431 		str	r3, [r7, #260]
 1304 066a 07F58073 		add	r3, r7, #256
 1305 066e 0222     		movs	r2, #2
 1306 0670 1A60     		str	r2, [r3]
 1307              	.LBE229:
 1308              	.LBE228:
 1309              	.LBB230:
 1310              	.LBB231:
 1311 0672 07F58073 		add	r3, r7, #256
 1312 0676 1B68     		ldr	r3, [r3]
 1313              		.syntax unified
 1314              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1315 0678 93FAA3F2 		rbit r2, r3
 1316              	@ 0 "" 2
 1317              		.thumb
 1318              		.syntax unified
 1319 067c 07F1FC03 		add	r3, r7, #252
 1320 0680 1A60     		str	r2, [r3]
 1321 0682 07F1F803 		add	r3, r7, #248
 1322 0686 0222     		movs	r2, #2
 1323 0688 1A60     		str	r2, [r3]
 1324              	.LBE231:
 1325              	.LBE230:
 1326              	.LBB232:
 1327              	.LBB233:
 1328 068a 07F1F803 		add	r3, r7, #248
 1329 068e 1B68     		ldr	r3, [r3]
 1330              		.syntax unified
 1331              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1332 0690 93FAA3F2 		rbit r2, r3
 1333              	@ 0 "" 2
 1334              		.thumb
 1335              		.syntax unified
 1336 0694 07F1F403 		add	r3, r7, #244
 1337 0698 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccyrAJeC.s 			page 51


 1338              	.LBE233:
 1339              	.LBE232:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1340              		.loc 1 470 0
 1341 069a A54B     		ldr	r3, .L158
 1342 069c 5A6A     		ldr	r2, [r3, #36]
 1343 069e 07F1F003 		add	r3, r7, #240
 1344 06a2 0221     		movs	r1, #2
 1345 06a4 1960     		str	r1, [r3]
 1346              	.LBB234:
 1347              	.LBB235:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1348              		.loc 2 988 0
 1349 06a6 07F1F003 		add	r3, r7, #240
 1350 06aa 1B68     		ldr	r3, [r3]
 1351              		.syntax unified
 1352              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1353 06ac 93FAA3F1 		rbit r1, r3
 1354              	@ 0 "" 2
 1355              		.thumb
 1356              		.syntax unified
 1357 06b0 07F1EC03 		add	r3, r7, #236
 1358 06b4 1960     		str	r1, [r3]
 1359              		.loc 2 1001 0
 1360 06b6 07F1EC03 		add	r3, r7, #236
 1361 06ba 1B68     		ldr	r3, [r3]
 1362              	.LBE235:
 1363              	.LBE234:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1364              		.loc 1 470 0
 1365 06bc B3FA83F3 		clz	r3, r3
 1366 06c0 DBB2     		uxtb	r3, r3
 1367 06c2 43F06003 		orr	r3, r3, #96
 1368 06c6 DBB2     		uxtb	r3, r3
 1369 06c8 03F01F03 		and	r3, r3, #31
 1370 06cc 0121     		movs	r1, #1
 1371 06ce 01FA03F3 		lsl	r3, r1, r3
 1372 06d2 1340     		ands	r3, r3, r2
 1373 06d4 002B     		cmp	r3, #0
 1374 06d6 B0D0     		beq	.L86
 1375 06d8 6AE0     		b	.L78
 1376              	.L79:
 1377 06da 07F1E803 		add	r3, r7, #232
 1378 06de 0122     		movs	r2, #1
 1379 06e0 1A60     		str	r2, [r3]
 1380              	.LBB236:
 1381              	.LBB237:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1382              		.loc 2 988 0
 1383 06e2 07F1E803 		add	r3, r7, #232
 1384 06e6 1B68     		ldr	r3, [r3]
 1385              		.syntax unified
 1386              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1387 06e8 93FAA3F2 		rbit r2, r3
 1388              	@ 0 "" 2
 1389              		.thumb
 1390              		.syntax unified
ARM GAS  /tmp/ccyrAJeC.s 			page 52


 1391 06ec 07F1E403 		add	r3, r7, #228
 1392 06f0 1A60     		str	r2, [r3]
 1393              		.loc 2 1001 0
 1394 06f2 07F1E403 		add	r3, r7, #228
 1395 06f6 1B68     		ldr	r3, [r3]
 1396              	.LBE237:
 1397              	.LBE236:
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 1398              		.loc 1 481 0
 1399 06f8 B3FA83F3 		clz	r3, r3
 1400 06fc DBB2     		uxtb	r3, r3
 1401 06fe 1A46     		mov	r2, r3
 1402 0700 8C4B     		ldr	r3, .L158+4
 1403 0702 1344     		add	r3, r3, r2
 1404 0704 9B00     		lsls	r3, r3, #2
 1405 0706 1A46     		mov	r2, r3
 1406 0708 0023     		movs	r3, #0
 1407 070a 1360     		str	r3, [r2]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1408              		.loc 1 484 0
 1409 070c FFF7FEFF 		bl	HAL_GetTick
 1410 0710 C7F8F801 		str	r0, [r7, #504]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 1411              		.loc 1 487 0
 1412 0714 09E0     		b	.L88
 1413              	.L93:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1414              		.loc 1 489 0
 1415 0716 FFF7FEFF 		bl	HAL_GetTick
 1416 071a 0246     		mov	r2, r0
 1417 071c D7F8F831 		ldr	r3, [r7, #504]
 1418 0720 D31A     		subs	r3, r2, r3
 1419 0722 022B     		cmp	r3, #2
 1420 0724 01D9     		bls	.L88
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1421              		.loc 1 491 0
 1422 0726 0323     		movs	r3, #3
 1423 0728 6BE3     		b	.L15
 1424              	.L88:
 1425 072a 07F1E003 		add	r3, r7, #224
 1426 072e 0222     		movs	r2, #2
 1427 0730 1A60     		str	r2, [r3]
 1428              	.LBB238:
 1429              	.LBB239:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccyrAJeC.s 			page 53


 1430              		.loc 2 988 0
 1431 0732 07F1E003 		add	r3, r7, #224
 1432 0736 1B68     		ldr	r3, [r3]
 1433              		.syntax unified
 1434              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1435 0738 93FAA3F2 		rbit r2, r3
 1436              	@ 0 "" 2
 1437              		.thumb
 1438              		.syntax unified
 1439 073c 07F1DC03 		add	r3, r7, #220
 1440 0740 1A60     		str	r2, [r3]
 1441 0742 07F1D803 		add	r3, r7, #216
 1442 0746 0222     		movs	r2, #2
 1443 0748 1A60     		str	r2, [r3]
 1444              	.LBE239:
 1445              	.LBE238:
 1446              	.LBB240:
 1447              	.LBB241:
 1448 074a 07F1D803 		add	r3, r7, #216
 1449 074e 1B68     		ldr	r3, [r3]
 1450              		.syntax unified
 1451              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1452 0750 93FAA3F2 		rbit r2, r3
 1453              	@ 0 "" 2
 1454              		.thumb
 1455              		.syntax unified
 1456 0754 07F1D403 		add	r3, r7, #212
 1457 0758 1A60     		str	r2, [r3]
 1458 075a 07F1D003 		add	r3, r7, #208
 1459 075e 0222     		movs	r2, #2
 1460 0760 1A60     		str	r2, [r3]
 1461              	.LBE241:
 1462              	.LBE240:
 1463              	.LBB242:
 1464              	.LBB243:
 1465 0762 07F1D003 		add	r3, r7, #208
 1466 0766 1B68     		ldr	r3, [r3]
 1467              		.syntax unified
 1468              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1469 0768 93FAA3F2 		rbit r2, r3
 1470              	@ 0 "" 2
 1471              		.thumb
 1472              		.syntax unified
 1473 076c 07F1CC03 		add	r3, r7, #204
 1474 0770 1A60     		str	r2, [r3]
 1475              	.LBE243:
 1476              	.LBE242:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1477              		.loc 1 487 0
 1478 0772 6F4B     		ldr	r3, .L158
 1479 0774 5A6A     		ldr	r2, [r3, #36]
 1480 0776 07F1C803 		add	r3, r7, #200
 1481 077a 0221     		movs	r1, #2
 1482 077c 1960     		str	r1, [r3]
 1483              	.LBB244:
 1484              	.LBB245:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccyrAJeC.s 			page 54


 1485              		.loc 2 988 0
 1486 077e 07F1C803 		add	r3, r7, #200
 1487 0782 1B68     		ldr	r3, [r3]
 1488              		.syntax unified
 1489              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1490 0784 93FAA3F1 		rbit r1, r3
 1491              	@ 0 "" 2
 1492              		.thumb
 1493              		.syntax unified
 1494 0788 07F1C403 		add	r3, r7, #196
 1495 078c 1960     		str	r1, [r3]
 1496              		.loc 2 1001 0
 1497 078e 07F1C403 		add	r3, r7, #196
 1498 0792 1B68     		ldr	r3, [r3]
 1499              	.LBE245:
 1500              	.LBE244:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1501              		.loc 1 487 0
 1502 0794 B3FA83F3 		clz	r3, r3
 1503 0798 DBB2     		uxtb	r3, r3
 1504 079a 43F06003 		orr	r3, r3, #96
 1505 079e DBB2     		uxtb	r3, r3
 1506 07a0 03F01F03 		and	r3, r3, #31
 1507 07a4 0121     		movs	r1, #1
 1508 07a6 01FA03F3 		lsl	r3, r1, r3
 1509 07aa 1340     		ands	r3, r3, r2
 1510 07ac 002B     		cmp	r3, #0
 1511 07ae B2D1     		bne	.L93
 1512              	.L78:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 1513              		.loc 1 497 0
 1514 07b0 3B1D     		adds	r3, r7, #4
 1515 07b2 1B68     		ldr	r3, [r3]
 1516 07b4 1B68     		ldr	r3, [r3]
 1517 07b6 03F00403 		and	r3, r3, #4
 1518 07ba 002B     		cmp	r3, #0
 1519 07bc 00F05881 		beq	.L94
 1520              	.LBB246:
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 1521              		.loc 1 499 0
 1522 07c0 0023     		movs	r3, #0
 1523 07c2 87F8FF31 		strb	r3, [r7, #511]
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 1524              		.loc 1 506 0
 1525 07c6 5A4B     		ldr	r3, .L158
ARM GAS  /tmp/ccyrAJeC.s 			page 55


 1526 07c8 DB69     		ldr	r3, [r3, #28]
 1527 07ca 03F08053 		and	r3, r3, #268435456
 1528 07ce 002B     		cmp	r3, #0
 1529 07d0 12D1     		bne	.L95
 1530              	.LBB247:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 1531              		.loc 1 508 0
 1532 07d2 574B     		ldr	r3, .L158
 1533 07d4 DB69     		ldr	r3, [r3, #28]
 1534 07d6 564A     		ldr	r2, .L158
 1535 07d8 43F08053 		orr	r3, r3, #268435456
 1536 07dc D361     		str	r3, [r2, #28]
 1537 07de 544B     		ldr	r3, .L158
 1538 07e0 DB69     		ldr	r3, [r3, #28]
 1539 07e2 03F08052 		and	r2, r3, #268435456
 1540 07e6 07F10803 		add	r3, r7, #8
 1541 07ea 1A60     		str	r2, [r3]
 1542 07ec 07F10803 		add	r3, r7, #8
 1543 07f0 1B68     		ldr	r3, [r3]
 1544              	.LBE247:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 1545              		.loc 1 509 0
 1546 07f2 0123     		movs	r3, #1
 1547 07f4 87F8FF31 		strb	r3, [r7, #511]
 1548              	.L95:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1549              		.loc 1 512 0
 1550 07f8 4F4B     		ldr	r3, .L158+8
 1551 07fa 1B68     		ldr	r3, [r3]
 1552 07fc 03F48073 		and	r3, r3, #256
 1553 0800 002B     		cmp	r3, #0
 1554 0802 1AD1     		bne	.L96
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 1555              		.loc 1 515 0
 1556 0804 4C4B     		ldr	r3, .L158+8
 1557 0806 1B68     		ldr	r3, [r3]
 1558 0808 4B4A     		ldr	r2, .L158+8
 1559 080a 43F48073 		orr	r3, r3, #256
 1560 080e 1360     		str	r3, [r2]
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1561              		.loc 1 518 0
 1562 0810 FFF7FEFF 		bl	HAL_GetTick
 1563 0814 C7F8F801 		str	r0, [r7, #504]
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1564              		.loc 1 520 0
 1565 0818 09E0     		b	.L97
 1566              	.L98:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
ARM GAS  /tmp/ccyrAJeC.s 			page 56


 1567              		.loc 1 522 0
 1568 081a FFF7FEFF 		bl	HAL_GetTick
 1569 081e 0246     		mov	r2, r0
 1570 0820 D7F8F831 		ldr	r3, [r7, #504]
 1571 0824 D31A     		subs	r3, r2, r3
 1572 0826 642B     		cmp	r3, #100
 1573 0828 01D9     		bls	.L97
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1574              		.loc 1 524 0
 1575 082a 0323     		movs	r3, #3
 1576 082c E9E2     		b	.L15
 1577              	.L97:
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1578              		.loc 1 520 0
 1579 082e 424B     		ldr	r3, .L158+8
 1580 0830 1B68     		ldr	r3, [r3]
 1581 0832 03F48073 		and	r3, r3, #256
 1582 0836 002B     		cmp	r3, #0
 1583 0838 EFD0     		beq	.L98
 1584              	.L96:
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 1585              		.loc 1 530 0
 1586 083a 3B1D     		adds	r3, r7, #4
 1587 083c 1B68     		ldr	r3, [r3]
 1588 083e DB68     		ldr	r3, [r3, #12]
 1589 0840 012B     		cmp	r3, #1
 1590 0842 06D1     		bne	.L99
 1591              		.loc 1 530 0 is_stmt 0 discriminator 1
 1592 0844 3A4B     		ldr	r3, .L158
 1593 0846 1B6A     		ldr	r3, [r3, #32]
 1594 0848 394A     		ldr	r2, .L158
 1595 084a 43F00103 		orr	r3, r3, #1
 1596 084e 1362     		str	r3, [r2, #32]
 1597 0850 2FE0     		b	.L100
 1598              	.L99:
 1599              		.loc 1 530 0 discriminator 2
 1600 0852 3B1D     		adds	r3, r7, #4
 1601 0854 1B68     		ldr	r3, [r3]
 1602 0856 DB68     		ldr	r3, [r3, #12]
 1603 0858 002B     		cmp	r3, #0
 1604 085a 0CD1     		bne	.L101
 1605              		.loc 1 530 0 discriminator 3
 1606 085c 344B     		ldr	r3, .L158
 1607 085e 1B6A     		ldr	r3, [r3, #32]
 1608 0860 334A     		ldr	r2, .L158
 1609 0862 23F00103 		bic	r3, r3, #1
 1610 0866 1362     		str	r3, [r2, #32]
 1611 0868 314B     		ldr	r3, .L158
 1612 086a 1B6A     		ldr	r3, [r3, #32]
 1613 086c 304A     		ldr	r2, .L158
 1614 086e 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/ccyrAJeC.s 			page 57


 1615 0872 1362     		str	r3, [r2, #32]
 1616 0874 1DE0     		b	.L100
 1617              	.L101:
 1618              		.loc 1 530 0 discriminator 4
 1619 0876 3B1D     		adds	r3, r7, #4
 1620 0878 1B68     		ldr	r3, [r3]
 1621 087a DB68     		ldr	r3, [r3, #12]
 1622 087c 052B     		cmp	r3, #5
 1623 087e 0CD1     		bne	.L102
 1624              		.loc 1 530 0 discriminator 5
 1625 0880 2B4B     		ldr	r3, .L158
 1626 0882 1B6A     		ldr	r3, [r3, #32]
 1627 0884 2A4A     		ldr	r2, .L158
 1628 0886 43F00403 		orr	r3, r3, #4
 1629 088a 1362     		str	r3, [r2, #32]
 1630 088c 284B     		ldr	r3, .L158
 1631 088e 1B6A     		ldr	r3, [r3, #32]
 1632 0890 274A     		ldr	r2, .L158
 1633 0892 43F00103 		orr	r3, r3, #1
 1634 0896 1362     		str	r3, [r2, #32]
 1635 0898 0BE0     		b	.L100
 1636              	.L102:
 1637              		.loc 1 530 0 discriminator 6
 1638 089a 254B     		ldr	r3, .L158
 1639 089c 1B6A     		ldr	r3, [r3, #32]
 1640 089e 244A     		ldr	r2, .L158
 1641 08a0 23F00103 		bic	r3, r3, #1
 1642 08a4 1362     		str	r3, [r2, #32]
 1643 08a6 224B     		ldr	r3, .L158
 1644 08a8 1B6A     		ldr	r3, [r3, #32]
 1645 08aa 214A     		ldr	r2, .L158
 1646 08ac 23F00403 		bic	r3, r3, #4
 1647 08b0 1362     		str	r3, [r2, #32]
 1648              	.L100:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1649              		.loc 1 532 0 is_stmt 1
 1650 08b2 3B1D     		adds	r3, r7, #4
 1651 08b4 1B68     		ldr	r3, [r3]
 1652 08b6 DB68     		ldr	r3, [r3, #12]
 1653 08b8 002B     		cmp	r3, #0
 1654 08ba 6BD0     		beq	.L103
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1655              		.loc 1 535 0
 1656 08bc FFF7FEFF 		bl	HAL_GetTick
 1657 08c0 C7F8F801 		str	r0, [r7, #504]
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1658              		.loc 1 538 0
 1659 08c4 0BE0     		b	.L104
 1660              	.L111:
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1661              		.loc 1 540 0
ARM GAS  /tmp/ccyrAJeC.s 			page 58


 1662 08c6 FFF7FEFF 		bl	HAL_GetTick
 1663 08ca 0246     		mov	r2, r0
 1664 08cc D7F8F831 		ldr	r3, [r7, #504]
 1665 08d0 D31A     		subs	r3, r2, r3
 1666 08d2 41F28832 		movw	r2, #5000
 1667 08d6 9342     		cmp	r3, r2
 1668 08d8 01D9     		bls	.L104
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1669              		.loc 1 542 0
 1670 08da 0323     		movs	r3, #3
 1671 08dc 91E2     		b	.L15
 1672              	.L104:
 1673 08de 07F1C003 		add	r3, r7, #192
 1674 08e2 0222     		movs	r2, #2
 1675 08e4 1A60     		str	r2, [r3]
 1676              	.LBB248:
 1677              	.LBB249:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1678              		.loc 2 988 0
 1679 08e6 07F1C003 		add	r3, r7, #192
 1680 08ea 1B68     		ldr	r3, [r3]
 1681              		.syntax unified
 1682              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1683 08ec 93FAA3F2 		rbit r2, r3
 1684              	@ 0 "" 2
 1685              		.thumb
 1686              		.syntax unified
 1687 08f0 07F1BC03 		add	r3, r7, #188
 1688 08f4 1A60     		str	r2, [r3]
 1689 08f6 07F1B803 		add	r3, r7, #184
 1690 08fa 0222     		movs	r2, #2
 1691 08fc 1A60     		str	r2, [r3]
 1692              	.LBE249:
 1693              	.LBE248:
 1694              	.LBB250:
 1695              	.LBB251:
 1696 08fe 07F1B803 		add	r3, r7, #184
 1697 0902 1B68     		ldr	r3, [r3]
 1698              		.syntax unified
 1699              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1700 0904 93FAA3F2 		rbit r2, r3
 1701              	@ 0 "" 2
 1702              		.thumb
 1703              		.syntax unified
 1704 0908 07F1B403 		add	r3, r7, #180
 1705 090c 1A60     		str	r2, [r3]
 1706              		.loc 2 1001 0
 1707 090e 07F1B403 		add	r3, r7, #180
 1708 0912 1B68     		ldr	r3, [r3]
 1709              	.LBE251:
 1710              	.LBE250:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1711              		.loc 1 538 0
 1712 0914 B3FA83F3 		clz	r3, r3
 1713 0918 DBB2     		uxtb	r3, r3
 1714 091a 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccyrAJeC.s 			page 59


 1715 091c DBB2     		uxtb	r3, r3
 1716 091e 43F00203 		orr	r3, r3, #2
 1717 0922 DBB2     		uxtb	r3, r3
 1718 0924 022B     		cmp	r3, #2
 1719 0926 09D1     		bne	.L107
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1720              		.loc 1 538 0 is_stmt 0 discriminator 4
 1721 0928 014B     		ldr	r3, .L158
 1722 092a 1B6A     		ldr	r3, [r3, #32]
 1723 092c 14E0     		b	.L108
 1724              	.L159:
 1725 092e 00BF     		.align	2
 1726              	.L158:
 1727 0930 00100240 		.word	1073876992
 1728 0934 20819010 		.word	277905696
 1729 0938 00700040 		.word	1073770496
 1730              	.L107:
 1731 093c 07F1B003 		add	r3, r7, #176
 1732 0940 0222     		movs	r2, #2
 1733 0942 1A60     		str	r2, [r3]
 1734              	.LBB252:
 1735              	.LBB253:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1736              		.loc 2 988 0 is_stmt 1 discriminator 5
 1737 0944 07F1B003 		add	r3, r7, #176
 1738 0948 1B68     		ldr	r3, [r3]
 1739              		.syntax unified
 1740              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1741 094a 93FAA3F2 		rbit r2, r3
 1742              	@ 0 "" 2
 1743              		.thumb
 1744              		.syntax unified
 1745 094e 07F1AC03 		add	r3, r7, #172
 1746 0952 1A60     		str	r2, [r3]
 1747              	.LBE253:
 1748              	.LBE252:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1749              		.loc 1 538 0 discriminator 5
 1750 0954 BB4B     		ldr	r3, .L160
 1751 0956 5B6A     		ldr	r3, [r3, #36]
 1752              	.L108:
 1753 0958 07F1A802 		add	r2, r7, #168
 1754 095c 0221     		movs	r1, #2
 1755 095e 1160     		str	r1, [r2]
 1756              	.LBB254:
 1757              	.LBB255:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1758              		.loc 2 988 0 discriminator 11
 1759 0960 07F1A802 		add	r2, r7, #168
 1760 0964 1268     		ldr	r2, [r2]
 1761              		.syntax unified
 1762              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1763 0966 92FAA2F1 		rbit r1, r2
 1764              	@ 0 "" 2
 1765              		.thumb
 1766              		.syntax unified
 1767 096a 07F1A402 		add	r2, r7, #164
ARM GAS  /tmp/ccyrAJeC.s 			page 60


 1768 096e 1160     		str	r1, [r2]
 1769              		.loc 2 1001 0 discriminator 11
 1770 0970 07F1A402 		add	r2, r7, #164
 1771 0974 1268     		ldr	r2, [r2]
 1772              	.LBE255:
 1773              	.LBE254:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1774              		.loc 1 538 0 discriminator 11
 1775 0976 B2FA82F2 		clz	r2, r2
 1776 097a D2B2     		uxtb	r2, r2
 1777 097c 42F04002 		orr	r2, r2, #64
 1778 0980 D2B2     		uxtb	r2, r2
 1779 0982 02F01F02 		and	r2, r2, #31
 1780 0986 0121     		movs	r1, #1
 1781 0988 01FA02F2 		lsl	r2, r1, r2
 1782 098c 1340     		ands	r3, r3, r2
 1783 098e 002B     		cmp	r3, #0
 1784 0990 99D0     		beq	.L111
 1785 0992 63E0     		b	.L112
 1786              	.L103:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1787              		.loc 1 549 0
 1788 0994 FFF7FEFF 		bl	HAL_GetTick
 1789 0998 C7F8F801 		str	r0, [r7, #504]
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1790              		.loc 1 552 0
 1791 099c 0BE0     		b	.L113
 1792              	.L120:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1793              		.loc 1 554 0
 1794 099e FFF7FEFF 		bl	HAL_GetTick
 1795 09a2 0246     		mov	r2, r0
 1796 09a4 D7F8F831 		ldr	r3, [r7, #504]
 1797 09a8 D31A     		subs	r3, r2, r3
 1798 09aa 41F28832 		movw	r2, #5000
 1799 09ae 9342     		cmp	r3, r2
 1800 09b0 01D9     		bls	.L113
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1801              		.loc 1 556 0
 1802 09b2 0323     		movs	r3, #3
 1803 09b4 25E2     		b	.L15
 1804              	.L113:
 1805 09b6 07F1A003 		add	r3, r7, #160
 1806 09ba 0222     		movs	r2, #2
 1807 09bc 1A60     		str	r2, [r3]
 1808              	.LBB256:
 1809              	.LBB257:
ARM GAS  /tmp/ccyrAJeC.s 			page 61


 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1810              		.loc 2 988 0
 1811 09be 07F1A003 		add	r3, r7, #160
 1812 09c2 1B68     		ldr	r3, [r3]
 1813              		.syntax unified
 1814              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1815 09c4 93FAA3F2 		rbit r2, r3
 1816              	@ 0 "" 2
 1817              		.thumb
 1818              		.syntax unified
 1819 09c8 07F19C03 		add	r3, r7, #156
 1820 09cc 1A60     		str	r2, [r3]
 1821 09ce 07F19803 		add	r3, r7, #152
 1822 09d2 0222     		movs	r2, #2
 1823 09d4 1A60     		str	r2, [r3]
 1824              	.LBE257:
 1825              	.LBE256:
 1826              	.LBB258:
 1827              	.LBB259:
 1828 09d6 07F19803 		add	r3, r7, #152
 1829 09da 1B68     		ldr	r3, [r3]
 1830              		.syntax unified
 1831              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1832 09dc 93FAA3F2 		rbit r2, r3
 1833              	@ 0 "" 2
 1834              		.thumb
 1835              		.syntax unified
 1836 09e0 07F19403 		add	r3, r7, #148
 1837 09e4 1A60     		str	r2, [r3]
 1838              		.loc 2 1001 0
 1839 09e6 07F19403 		add	r3, r7, #148
 1840 09ea 1B68     		ldr	r3, [r3]
 1841              	.LBE259:
 1842              	.LBE258:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1843              		.loc 1 552 0
 1844 09ec B3FA83F3 		clz	r3, r3
 1845 09f0 DBB2     		uxtb	r3, r3
 1846 09f2 5B09     		lsrs	r3, r3, #5
 1847 09f4 DBB2     		uxtb	r3, r3
 1848 09f6 43F00203 		orr	r3, r3, #2
 1849 09fa DBB2     		uxtb	r3, r3
 1850 09fc 022B     		cmp	r3, #2
 1851 09fe 02D1     		bne	.L116
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1852              		.loc 1 552 0 is_stmt 0 discriminator 4
 1853 0a00 904B     		ldr	r3, .L160
 1854 0a02 1B6A     		ldr	r3, [r3, #32]
 1855 0a04 0DE0     		b	.L117
 1856              	.L116:
 1857 0a06 07F19003 		add	r3, r7, #144
 1858 0a0a 0222     		movs	r2, #2
 1859 0a0c 1A60     		str	r2, [r3]
 1860              	.LBB260:
 1861              	.LBB261:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1862              		.loc 2 988 0 is_stmt 1 discriminator 5
ARM GAS  /tmp/ccyrAJeC.s 			page 62


 1863 0a0e 07F19003 		add	r3, r7, #144
 1864 0a12 1B68     		ldr	r3, [r3]
 1865              		.syntax unified
 1866              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1867 0a14 93FAA3F2 		rbit r2, r3
 1868              	@ 0 "" 2
 1869              		.thumb
 1870              		.syntax unified
 1871 0a18 07F18C03 		add	r3, r7, #140
 1872 0a1c 1A60     		str	r2, [r3]
 1873              	.LBE261:
 1874              	.LBE260:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1875              		.loc 1 552 0 discriminator 5
 1876 0a1e 894B     		ldr	r3, .L160
 1877 0a20 5B6A     		ldr	r3, [r3, #36]
 1878              	.L117:
 1879 0a22 07F18802 		add	r2, r7, #136
 1880 0a26 0221     		movs	r1, #2
 1881 0a28 1160     		str	r1, [r2]
 1882              	.LBB262:
 1883              	.LBB263:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1884              		.loc 2 988 0 discriminator 11
 1885 0a2a 07F18802 		add	r2, r7, #136
 1886 0a2e 1268     		ldr	r2, [r2]
 1887              		.syntax unified
 1888              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1889 0a30 92FAA2F1 		rbit r1, r2
 1890              	@ 0 "" 2
 1891              		.thumb
 1892              		.syntax unified
 1893 0a34 07F18402 		add	r2, r7, #132
 1894 0a38 1160     		str	r1, [r2]
 1895              		.loc 2 1001 0 discriminator 11
 1896 0a3a 07F18402 		add	r2, r7, #132
 1897 0a3e 1268     		ldr	r2, [r2]
 1898              	.LBE263:
 1899              	.LBE262:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1900              		.loc 1 552 0 discriminator 11
 1901 0a40 B2FA82F2 		clz	r2, r2
 1902 0a44 D2B2     		uxtb	r2, r2
 1903 0a46 42F04002 		orr	r2, r2, #64
 1904 0a4a D2B2     		uxtb	r2, r2
 1905 0a4c 02F01F02 		and	r2, r2, #31
 1906 0a50 0121     		movs	r1, #1
 1907 0a52 01FA02F2 		lsl	r2, r1, r2
 1908 0a56 1340     		ands	r3, r3, r2
 1909 0a58 002B     		cmp	r3, #0
 1910 0a5a A0D1     		bne	.L120
 1911              	.L112:
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
ARM GAS  /tmp/ccyrAJeC.s 			page 63


 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1912              		.loc 1 562 0
 1913 0a5c 97F8FF31 		ldrb	r3, [r7, #511]	@ zero_extendqisi2
 1914 0a60 012B     		cmp	r3, #1
 1915 0a62 05D1     		bne	.L94
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1916              		.loc 1 564 0
 1917 0a64 774B     		ldr	r3, .L160
 1918 0a66 DB69     		ldr	r3, [r3, #28]
 1919 0a68 764A     		ldr	r2, .L160
 1920 0a6a 23F08053 		bic	r3, r3, #268435456
 1921 0a6e D361     		str	r3, [r2, #28]
 1922              	.L94:
 1923              	.LBE246:
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1924              		.loc 1 571 0
 1925 0a70 3B1D     		adds	r3, r7, #4
 1926 0a72 1B68     		ldr	r3, [r3]
 1927 0a74 DB69     		ldr	r3, [r3, #28]
 1928 0a76 002B     		cmp	r3, #0
 1929 0a78 00F0C281 		beq	.L121
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1930              		.loc 1 574 0
 1931 0a7c 714B     		ldr	r3, .L160
 1932 0a7e 5B68     		ldr	r3, [r3, #4]
 1933 0a80 03F00C03 		and	r3, r3, #12
 1934 0a84 082B     		cmp	r3, #8
 1935 0a86 00F09C81 		beq	.L122
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1936              		.loc 1 576 0
 1937 0a8a 3B1D     		adds	r3, r7, #4
 1938 0a8c 1B68     		ldr	r3, [r3]
 1939 0a8e DB69     		ldr	r3, [r3, #28]
 1940 0a90 022B     		cmp	r3, #2
 1941 0a92 40F01481 		bne	.L123
 1942 0a96 07F18003 		add	r3, r7, #128
 1943 0a9a 4FF08072 		mov	r2, #16777216
 1944 0a9e 1A60     		str	r2, [r3]
 1945              	.LBB264:
 1946              	.LBB265:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1947              		.loc 2 988 0
 1948 0aa0 07F18003 		add	r3, r7, #128
 1949 0aa4 1B68     		ldr	r3, [r3]
 1950              		.syntax unified
 1951              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1952 0aa6 93FAA3F2 		rbit r2, r3
ARM GAS  /tmp/ccyrAJeC.s 			page 64


 1953              	@ 0 "" 2
 1954              		.thumb
 1955              		.syntax unified
 1956 0aaa 07F17C03 		add	r3, r7, #124
 1957 0aae 1A60     		str	r2, [r3]
 1958              		.loc 2 1001 0
 1959 0ab0 07F17C03 		add	r3, r7, #124
 1960 0ab4 1B68     		ldr	r3, [r3]
 1961              	.LBE265:
 1962              	.LBE264:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1963              		.loc 1 586 0
 1964 0ab6 B3FA83F3 		clz	r3, r3
 1965 0aba DBB2     		uxtb	r3, r3
 1966 0abc 03F18453 		add	r3, r3, #276824064
 1967 0ac0 03F58413 		add	r3, r3, #1081344
 1968 0ac4 9B00     		lsls	r3, r3, #2
 1969 0ac6 1A46     		mov	r2, r3
 1970 0ac8 0023     		movs	r3, #0
 1971 0aca 1360     		str	r3, [r2]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1972              		.loc 1 589 0
 1973 0acc FFF7FEFF 		bl	HAL_GetTick
 1974 0ad0 C7F8F801 		str	r0, [r7, #504]
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1975              		.loc 1 592 0
 1976 0ad4 09E0     		b	.L125
 1977              	.L132:
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1978              		.loc 1 594 0
 1979 0ad6 FFF7FEFF 		bl	HAL_GetTick
 1980 0ada 0246     		mov	r2, r0
 1981 0adc D7F8F831 		ldr	r3, [r7, #504]
 1982 0ae0 D31A     		subs	r3, r2, r3
 1983 0ae2 022B     		cmp	r3, #2
 1984 0ae4 01D9     		bls	.L125
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1985              		.loc 1 596 0
 1986 0ae6 0323     		movs	r3, #3
 1987 0ae8 8BE1     		b	.L15
 1988              	.L125:
 1989 0aea 07F17803 		add	r3, r7, #120
ARM GAS  /tmp/ccyrAJeC.s 			page 65


 1990 0aee 4FF00072 		mov	r2, #33554432
 1991 0af2 1A60     		str	r2, [r3]
 1992              	.LBB266:
 1993              	.LBB267:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1994              		.loc 2 988 0
 1995 0af4 07F17803 		add	r3, r7, #120
 1996 0af8 1B68     		ldr	r3, [r3]
 1997              		.syntax unified
 1998              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1999 0afa 93FAA3F2 		rbit r2, r3
 2000              	@ 0 "" 2
 2001              		.thumb
 2002              		.syntax unified
 2003 0afe 07F17403 		add	r3, r7, #116
 2004 0b02 1A60     		str	r2, [r3]
 2005              		.loc 2 1001 0
 2006 0b04 07F17403 		add	r3, r7, #116
 2007 0b08 1B68     		ldr	r3, [r3]
 2008              	.LBE267:
 2009              	.LBE266:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2010              		.loc 1 592 0
 2011 0b0a B3FA83F3 		clz	r3, r3
 2012 0b0e DBB2     		uxtb	r3, r3
 2013 0b10 5B09     		lsrs	r3, r3, #5
 2014 0b12 DBB2     		uxtb	r3, r3
 2015 0b14 43F00103 		orr	r3, r3, #1
 2016 0b18 DBB2     		uxtb	r3, r3
 2017 0b1a 012B     		cmp	r3, #1
 2018 0b1c 02D1     		bne	.L127
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2019              		.loc 1 592 0 is_stmt 0 discriminator 1
 2020 0b1e 494B     		ldr	r3, .L160
 2021 0b20 1B68     		ldr	r3, [r3]
 2022 0b22 1BE0     		b	.L128
 2023              	.L127:
 2024 0b24 07F17003 		add	r3, r7, #112
 2025 0b28 4FF00072 		mov	r2, #33554432
 2026 0b2c 1A60     		str	r2, [r3]
 2027              	.LBB268:
 2028              	.LBB269:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2029              		.loc 2 988 0 is_stmt 1 discriminator 2
 2030 0b2e 07F17003 		add	r3, r7, #112
 2031 0b32 1B68     		ldr	r3, [r3]
 2032              		.syntax unified
 2033              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2034 0b34 93FAA3F2 		rbit r2, r3
 2035              	@ 0 "" 2
 2036              		.thumb
 2037              		.syntax unified
 2038 0b38 07F16C03 		add	r3, r7, #108
 2039 0b3c 1A60     		str	r2, [r3]
 2040 0b3e 07F16803 		add	r3, r7, #104
 2041 0b42 4FF00072 		mov	r2, #33554432
 2042 0b46 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccyrAJeC.s 			page 66


 2043              	.LBE269:
 2044              	.LBE268:
 2045              	.LBB270:
 2046              	.LBB271:
 2047 0b48 07F16803 		add	r3, r7, #104
 2048 0b4c 1B68     		ldr	r3, [r3]
 2049              		.syntax unified
 2050              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2051 0b4e 93FAA3F2 		rbit r2, r3
 2052              	@ 0 "" 2
 2053              		.thumb
 2054              		.syntax unified
 2055 0b52 07F16403 		add	r3, r7, #100
 2056 0b56 1A60     		str	r2, [r3]
 2057              	.LBE271:
 2058              	.LBE270:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2059              		.loc 1 592 0 discriminator 2
 2060 0b58 3A4B     		ldr	r3, .L160
 2061 0b5a 5B6A     		ldr	r3, [r3, #36]
 2062              	.L128:
 2063 0b5c 07F16002 		add	r2, r7, #96
 2064 0b60 4FF00071 		mov	r1, #33554432
 2065 0b64 1160     		str	r1, [r2]
 2066              	.LBB272:
 2067              	.LBB273:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2068              		.loc 2 988 0 discriminator 12
 2069 0b66 07F16002 		add	r2, r7, #96
 2070 0b6a 1268     		ldr	r2, [r2]
 2071              		.syntax unified
 2072              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2073 0b6c 92FAA2F1 		rbit r1, r2
 2074              	@ 0 "" 2
 2075              		.thumb
 2076              		.syntax unified
 2077 0b70 07F15C02 		add	r2, r7, #92
 2078 0b74 1160     		str	r1, [r2]
 2079              		.loc 2 1001 0 discriminator 12
 2080 0b76 07F15C02 		add	r2, r7, #92
 2081 0b7a 1268     		ldr	r2, [r2]
 2082              	.LBE273:
 2083              	.LBE272:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2084              		.loc 1 592 0 discriminator 12
 2085 0b7c B2FA82F2 		clz	r2, r2
 2086 0b80 D2B2     		uxtb	r2, r2
 2087 0b82 42F02002 		orr	r2, r2, #32
 2088 0b86 D2B2     		uxtb	r2, r2
 2089 0b88 02F01F02 		and	r2, r2, #31
 2090 0b8c 0121     		movs	r1, #1
 2091 0b8e 01FA02F2 		lsl	r2, r1, r2
 2092 0b92 1340     		ands	r3, r3, r2
 2093 0b94 002B     		cmp	r3, #0
 2094 0b96 9ED1     		bne	.L132
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccyrAJeC.s 			page 67


 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 2095              		.loc 1 607 0
 2096 0b98 2A4B     		ldr	r3, .L160
 2097 0b9a 5B68     		ldr	r3, [r3, #4]
 2098 0b9c 23F47412 		bic	r2, r3, #3997696
 2099 0ba0 3B1D     		adds	r3, r7, #4
 2100 0ba2 1B68     		ldr	r3, [r3]
 2101 0ba4 596A     		ldr	r1, [r3, #36]
 2102 0ba6 3B1D     		adds	r3, r7, #4
 2103 0ba8 1B68     		ldr	r3, [r3]
 2104 0baa 1B6A     		ldr	r3, [r3, #32]
 2105 0bac 0B43     		orrs	r3, r3, r1
 2106 0bae 2549     		ldr	r1, .L160
 2107 0bb0 1343     		orrs	r3, r3, r2
 2108 0bb2 4B60     		str	r3, [r1, #4]
 2109 0bb4 07F15803 		add	r3, r7, #88
 2110 0bb8 4FF08072 		mov	r2, #16777216
 2111 0bbc 1A60     		str	r2, [r3]
 2112              	.LBB274:
 2113              	.LBB275:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2114              		.loc 2 988 0
 2115 0bbe 07F15803 		add	r3, r7, #88
 2116 0bc2 1B68     		ldr	r3, [r3]
 2117              		.syntax unified
 2118              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2119 0bc4 93FAA3F2 		rbit r2, r3
 2120              	@ 0 "" 2
 2121              		.thumb
 2122              		.syntax unified
 2123 0bc8 07F15403 		add	r3, r7, #84
 2124 0bcc 1A60     		str	r2, [r3]
 2125              		.loc 2 1001 0
 2126 0bce 07F15403 		add	r3, r7, #84
 2127 0bd2 1B68     		ldr	r3, [r3]
 2128              	.LBE275:
 2129              	.LBE274:
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 2130              		.loc 1 611 0
 2131 0bd4 B3FA83F3 		clz	r3, r3
 2132 0bd8 DBB2     		uxtb	r3, r3
 2133 0bda 03F18453 		add	r3, r3, #276824064
 2134 0bde 03F58413 		add	r3, r3, #1081344
 2135 0be2 9B00     		lsls	r3, r3, #2
 2136 0be4 1A46     		mov	r2, r3
 2137 0be6 0123     		movs	r3, #1
ARM GAS  /tmp/ccyrAJeC.s 			page 68


 2138 0be8 1360     		str	r3, [r2]
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 2139              		.loc 1 614 0
 2140 0bea FFF7FEFF 		bl	HAL_GetTick
 2141 0bee C7F8F801 		str	r0, [r7, #504]
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 2142              		.loc 1 617 0
 2143 0bf2 09E0     		b	.L134
 2144              	.L141:
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2145              		.loc 1 619 0
 2146 0bf4 FFF7FEFF 		bl	HAL_GetTick
 2147 0bf8 0246     		mov	r2, r0
 2148 0bfa D7F8F831 		ldr	r3, [r7, #504]
 2149 0bfe D31A     		subs	r3, r2, r3
 2150 0c00 022B     		cmp	r3, #2
 2151 0c02 01D9     		bls	.L134
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 2152              		.loc 1 621 0
 2153 0c04 0323     		movs	r3, #3
 2154 0c06 FCE0     		b	.L15
 2155              	.L134:
 2156 0c08 07F15003 		add	r3, r7, #80
 2157 0c0c 4FF00072 		mov	r2, #33554432
 2158 0c10 1A60     		str	r2, [r3]
 2159              	.LBB276:
 2160              	.LBB277:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2161              		.loc 2 988 0
 2162 0c12 07F15003 		add	r3, r7, #80
 2163 0c16 1B68     		ldr	r3, [r3]
 2164              		.syntax unified
 2165              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2166 0c18 93FAA3F2 		rbit r2, r3
 2167              	@ 0 "" 2
 2168              		.thumb
 2169              		.syntax unified
 2170 0c1c 07F14C03 		add	r3, r7, #76
 2171 0c20 1A60     		str	r2, [r3]
 2172              		.loc 2 1001 0
 2173 0c22 07F14C03 		add	r3, r7, #76
 2174 0c26 1B68     		ldr	r3, [r3]
 2175              	.LBE277:
 2176              	.LBE276:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2177              		.loc 1 617 0
 2178 0c28 B3FA83F3 		clz	r3, r3
 2179 0c2c DBB2     		uxtb	r3, r3
 2180 0c2e 5B09     		lsrs	r3, r3, #5
 2181 0c30 DBB2     		uxtb	r3, r3
 2182 0c32 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccyrAJeC.s 			page 69


 2183 0c36 DBB2     		uxtb	r3, r3
 2184 0c38 012B     		cmp	r3, #1
 2185 0c3a 05D1     		bne	.L136
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2186              		.loc 1 617 0 is_stmt 0 discriminator 1
 2187 0c3c 014B     		ldr	r3, .L160
 2188 0c3e 1B68     		ldr	r3, [r3]
 2189 0c40 1EE0     		b	.L137
 2190              	.L161:
 2191 0c42 00BF     		.align	2
 2192              	.L160:
 2193 0c44 00100240 		.word	1073876992
 2194              	.L136:
 2195 0c48 07F14803 		add	r3, r7, #72
 2196 0c4c 4FF00072 		mov	r2, #33554432
 2197 0c50 1A60     		str	r2, [r3]
 2198              	.LBB278:
 2199              	.LBB279:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2200              		.loc 2 988 0 is_stmt 1 discriminator 2
 2201 0c52 07F14803 		add	r3, r7, #72
 2202 0c56 1B68     		ldr	r3, [r3]
 2203              		.syntax unified
 2204              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2205 0c58 93FAA3F2 		rbit r2, r3
 2206              	@ 0 "" 2
 2207              		.thumb
 2208              		.syntax unified
 2209 0c5c 07F14403 		add	r3, r7, #68
 2210 0c60 1A60     		str	r2, [r3]
 2211 0c62 07F14003 		add	r3, r7, #64
 2212 0c66 4FF00072 		mov	r2, #33554432
 2213 0c6a 1A60     		str	r2, [r3]
 2214              	.LBE279:
 2215              	.LBE278:
 2216              	.LBB280:
 2217              	.LBB281:
 2218 0c6c 07F14003 		add	r3, r7, #64
 2219 0c70 1B68     		ldr	r3, [r3]
 2220              		.syntax unified
 2221              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2222 0c72 93FAA3F2 		rbit r2, r3
 2223              	@ 0 "" 2
 2224              		.thumb
 2225              		.syntax unified
 2226 0c76 07F13C03 		add	r3, r7, #60
 2227 0c7a 1A60     		str	r2, [r3]
 2228              	.LBE281:
 2229              	.LBE280:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2230              		.loc 1 617 0 discriminator 2
 2231 0c7c 634B     		ldr	r3, .L162
 2232 0c7e 5B6A     		ldr	r3, [r3, #36]
 2233              	.L137:
 2234 0c80 07F13802 		add	r2, r7, #56
 2235 0c84 4FF00071 		mov	r1, #33554432
 2236 0c88 1160     		str	r1, [r2]
ARM GAS  /tmp/ccyrAJeC.s 			page 70


 2237              	.LBB282:
 2238              	.LBB283:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2239              		.loc 2 988 0 discriminator 12
 2240 0c8a 07F13802 		add	r2, r7, #56
 2241 0c8e 1268     		ldr	r2, [r2]
 2242              		.syntax unified
 2243              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2244 0c90 92FAA2F1 		rbit r1, r2
 2245              	@ 0 "" 2
 2246              		.thumb
 2247              		.syntax unified
 2248 0c94 07F13402 		add	r2, r7, #52
 2249 0c98 1160     		str	r1, [r2]
 2250              		.loc 2 1001 0 discriminator 12
 2251 0c9a 07F13402 		add	r2, r7, #52
 2252 0c9e 1268     		ldr	r2, [r2]
 2253              	.LBE283:
 2254              	.LBE282:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2255              		.loc 1 617 0 discriminator 12
 2256 0ca0 B2FA82F2 		clz	r2, r2
 2257 0ca4 D2B2     		uxtb	r2, r2
 2258 0ca6 42F02002 		orr	r2, r2, #32
 2259 0caa D2B2     		uxtb	r2, r2
 2260 0cac 02F01F02 		and	r2, r2, #31
 2261 0cb0 0121     		movs	r1, #1
 2262 0cb2 01FA02F2 		lsl	r2, r1, r2
 2263 0cb6 1340     		ands	r3, r3, r2
 2264 0cb8 002B     		cmp	r3, #0
 2265 0cba 9BD0     		beq	.L141
 2266 0cbc A0E0     		b	.L121
 2267              	.L123:
 2268 0cbe 07F13003 		add	r3, r7, #48
 2269 0cc2 4FF08072 		mov	r2, #16777216
 2270 0cc6 1A60     		str	r2, [r3]
 2271              	.LBB284:
 2272              	.LBB285:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2273              		.loc 2 988 0
 2274 0cc8 07F13003 		add	r3, r7, #48
 2275 0ccc 1B68     		ldr	r3, [r3]
 2276              		.syntax unified
 2277              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2278 0cce 93FAA3F2 		rbit r2, r3
 2279              	@ 0 "" 2
 2280              		.thumb
 2281              		.syntax unified
 2282 0cd2 07F12C03 		add	r3, r7, #44
 2283 0cd6 1A60     		str	r2, [r3]
 2284              		.loc 2 1001 0
 2285 0cd8 07F12C03 		add	r3, r7, #44
 2286 0cdc 1B68     		ldr	r3, [r3]
 2287              	.LBE285:
 2288              	.LBE284:
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccyrAJeC.s 			page 71


 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 2289              		.loc 1 628 0
 2290 0cde B3FA83F3 		clz	r3, r3
 2291 0ce2 DBB2     		uxtb	r3, r3
 2292 0ce4 03F18453 		add	r3, r3, #276824064
 2293 0ce8 03F58413 		add	r3, r3, #1081344
 2294 0cec 9B00     		lsls	r3, r3, #2
 2295 0cee 1A46     		mov	r2, r3
 2296 0cf0 0023     		movs	r3, #0
 2297 0cf2 1360     		str	r3, [r2]
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 2298              		.loc 1 631 0
 2299 0cf4 FFF7FEFF 		bl	HAL_GetTick
 2300 0cf8 C7F8F801 		str	r0, [r7, #504]
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 2301              		.loc 1 634 0
 2302 0cfc 09E0     		b	.L143
 2303              	.L150:
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2304              		.loc 1 636 0
 2305 0cfe FFF7FEFF 		bl	HAL_GetTick
 2306 0d02 0246     		mov	r2, r0
 2307 0d04 D7F8F831 		ldr	r3, [r7, #504]
 2308 0d08 D31A     		subs	r3, r2, r3
 2309 0d0a 022B     		cmp	r3, #2
 2310 0d0c 01D9     		bls	.L143
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 2311              		.loc 1 638 0
 2312 0d0e 0323     		movs	r3, #3
 2313 0d10 77E0     		b	.L15
 2314              	.L143:
 2315 0d12 07F12803 		add	r3, r7, #40
 2316 0d16 4FF00072 		mov	r2, #33554432
 2317 0d1a 1A60     		str	r2, [r3]
 2318              	.LBB286:
 2319              	.LBB287:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2320              		.loc 2 988 0
 2321 0d1c 07F12803 		add	r3, r7, #40
 2322 0d20 1B68     		ldr	r3, [r3]
 2323              		.syntax unified
 2324              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2325 0d22 93FAA3F2 		rbit r2, r3
 2326              	@ 0 "" 2
 2327              		.thumb
 2328              		.syntax unified
 2329 0d26 07F12403 		add	r3, r7, #36
ARM GAS  /tmp/ccyrAJeC.s 			page 72


 2330 0d2a 1A60     		str	r2, [r3]
 2331              		.loc 2 1001 0
 2332 0d2c 07F12403 		add	r3, r7, #36
 2333 0d30 1B68     		ldr	r3, [r3]
 2334              	.LBE287:
 2335              	.LBE286:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2336              		.loc 1 634 0
 2337 0d32 B3FA83F3 		clz	r3, r3
 2338 0d36 DBB2     		uxtb	r3, r3
 2339 0d38 5B09     		lsrs	r3, r3, #5
 2340 0d3a DBB2     		uxtb	r3, r3
 2341 0d3c 43F00103 		orr	r3, r3, #1
 2342 0d40 DBB2     		uxtb	r3, r3
 2343 0d42 012B     		cmp	r3, #1
 2344 0d44 02D1     		bne	.L145
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2345              		.loc 1 634 0 is_stmt 0 discriminator 1
 2346 0d46 314B     		ldr	r3, .L162
 2347 0d48 1B68     		ldr	r3, [r3]
 2348 0d4a 1BE0     		b	.L146
 2349              	.L145:
 2350 0d4c 07F12003 		add	r3, r7, #32
 2351 0d50 4FF00072 		mov	r2, #33554432
 2352 0d54 1A60     		str	r2, [r3]
 2353              	.LBB288:
 2354              	.LBB289:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2355              		.loc 2 988 0 is_stmt 1 discriminator 2
 2356 0d56 07F12003 		add	r3, r7, #32
 2357 0d5a 1B68     		ldr	r3, [r3]
 2358              		.syntax unified
 2359              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2360 0d5c 93FAA3F2 		rbit r2, r3
 2361              	@ 0 "" 2
 2362              		.thumb
 2363              		.syntax unified
 2364 0d60 07F11C03 		add	r3, r7, #28
 2365 0d64 1A60     		str	r2, [r3]
 2366 0d66 07F11803 		add	r3, r7, #24
 2367 0d6a 4FF00072 		mov	r2, #33554432
 2368 0d6e 1A60     		str	r2, [r3]
 2369              	.LBE289:
 2370              	.LBE288:
 2371              	.LBB290:
 2372              	.LBB291:
 2373 0d70 07F11803 		add	r3, r7, #24
 2374 0d74 1B68     		ldr	r3, [r3]
 2375              		.syntax unified
 2376              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2377 0d76 93FAA3F2 		rbit r2, r3
 2378              	@ 0 "" 2
 2379              		.thumb
 2380              		.syntax unified
 2381 0d7a 07F11403 		add	r3, r7, #20
 2382 0d7e 1A60     		str	r2, [r3]
 2383              	.LBE291:
ARM GAS  /tmp/ccyrAJeC.s 			page 73


 2384              	.LBE290:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2385              		.loc 1 634 0 discriminator 2
 2386 0d80 224B     		ldr	r3, .L162
 2387 0d82 5B6A     		ldr	r3, [r3, #36]
 2388              	.L146:
 2389 0d84 07F11002 		add	r2, r7, #16
 2390 0d88 4FF00071 		mov	r1, #33554432
 2391 0d8c 1160     		str	r1, [r2]
 2392              	.LBB292:
 2393              	.LBB293:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2394              		.loc 2 988 0 discriminator 12
 2395 0d8e 07F11002 		add	r2, r7, #16
 2396 0d92 1268     		ldr	r2, [r2]
 2397              		.syntax unified
 2398              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2399 0d94 92FAA2F1 		rbit r1, r2
 2400              	@ 0 "" 2
 2401              		.thumb
 2402              		.syntax unified
 2403 0d98 07F10C02 		add	r2, r7, #12
 2404 0d9c 1160     		str	r1, [r2]
 2405              		.loc 2 1001 0 discriminator 12
 2406 0d9e 07F10C02 		add	r2, r7, #12
 2407 0da2 1268     		ldr	r2, [r2]
 2408              	.LBE293:
 2409              	.LBE292:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2410              		.loc 1 634 0 discriminator 12
 2411 0da4 B2FA82F2 		clz	r2, r2
 2412 0da8 D2B2     		uxtb	r2, r2
 2413 0daa 42F02002 		orr	r2, r2, #32
 2414 0dae D2B2     		uxtb	r2, r2
 2415 0db0 02F01F02 		and	r2, r2, #31
 2416 0db4 0121     		movs	r1, #1
 2417 0db6 01FA02F2 		lsl	r2, r1, r2
 2418 0dba 1340     		ands	r3, r3, r2
 2419 0dbc 002B     		cmp	r3, #0
 2420 0dbe 9ED1     		bne	.L150
 2421 0dc0 1EE0     		b	.L121
 2422              	.L122:
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 2423              		.loc 1 646 0
 2424 0dc2 3B1D     		adds	r3, r7, #4
 2425 0dc4 1B68     		ldr	r3, [r3]
 2426 0dc6 DB69     		ldr	r3, [r3, #28]
 2427 0dc8 012B     		cmp	r3, #1
 2428 0dca 01D1     		bne	.L151
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccyrAJeC.s 			page 74


 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2429              		.loc 1 648 0
 2430 0dcc 0123     		movs	r3, #1
 2431 0dce 18E0     		b	.L15
 2432              	.L151:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pll_config = RCC->CFGR;
 2433              		.loc 1 653 0
 2434 0dd0 0E4B     		ldr	r3, .L162
 2435 0dd2 5B68     		ldr	r3, [r3, #4]
 2436 0dd4 C7F8F431 		str	r3, [r7, #500]
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL)    ||      
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV)  != RCC_OscInitStruct->PLL.PREDIV))     
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 2437              		.loc 1 660 0
 2438 0dd8 D7F8F431 		ldr	r3, [r7, #500]
 2439 0ddc 03F48032 		and	r2, r3, #65536
 2440 0de0 3B1D     		adds	r3, r7, #4
 2441 0de2 1B68     		ldr	r3, [r3]
 2442 0de4 1B6A     		ldr	r3, [r3, #32]
 2443 0de6 9A42     		cmp	r2, r3
 2444 0de8 08D1     		bne	.L152
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
 2445              		.loc 1 661 0 discriminator 1
 2446 0dea D7F8F431 		ldr	r3, [r7, #500]
 2447 0dee 03F47012 		and	r2, r3, #3932160
 2448 0df2 3B1D     		adds	r3, r7, #4
 2449 0df4 1B68     		ldr	r3, [r3]
 2450 0df6 5B6A     		ldr	r3, [r3, #36]
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
 2451              		.loc 1 660 0 discriminator 1
 2452 0df8 9A42     		cmp	r2, r3
 2453 0dfa 01D0     		beq	.L121
 2454              	.L152:
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_ERROR;
 2455              		.loc 1 664 0
 2456 0dfc 0123     		movs	r3, #1
 2457 0dfe 00E0     		b	.L15
 2458              	.L121:
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 2459              		.loc 1 670 0
 2460 0e00 0023     		movs	r3, #0
 2461              	.L15:
ARM GAS  /tmp/ccyrAJeC.s 			page 75


 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2462              		.loc 1 671 0
 2463 0e02 1846     		mov	r0, r3
 2464 0e04 07F50077 		add	r7, r7, #512
 2465              	.LCFI8:
 2466              		.cfi_def_cfa_offset 8
 2467 0e08 BD46     		mov	sp, r7
 2468              	.LCFI9:
 2469              		.cfi_def_cfa_register 13
 2470              		@ sp needed
 2471 0e0a 80BD     		pop	{r7, pc}
 2472              	.L163:
 2473              		.align	2
 2474              	.L162:
 2475 0e0c 00100240 		.word	1073876992
 2476              		.cfi_endproc
 2477              	.LFE124:
 2479              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 2480              		.align	1
 2481              		.global	HAL_RCC_ClockConfig
 2482              		.syntax unified
 2483              		.thumb
 2484              		.thumb_func
 2485              		.fpu fpv4-sp-d16
 2487              	HAL_RCC_ClockConfig:
 2488              	.LFB125:
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2489              		.loc 1 697 0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 120
 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccyrAJeC.s 			page 76


 2494              	.LCFI10:
 2495              		.cfi_def_cfa_offset 8
 2496              		.cfi_offset 7, -8
 2497              		.cfi_offset 14, -4
 2498 0002 9EB0     		sub	sp, sp, #120
 2499              	.LCFI11:
 2500              		.cfi_def_cfa_offset 128
 2501 0004 00AF     		add	r7, sp, #0
 2502              	.LCFI12:
 2503              		.cfi_def_cfa_register 7
 2504 0006 7860     		str	r0, [r7, #4]
 2505 0008 3960     		str	r1, [r7]
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 2506              		.loc 1 698 0
 2507 000a 0023     		movs	r3, #0
 2508 000c 7B67     		str	r3, [r7, #116]
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 2509              		.loc 1 701 0
 2510 000e 7B68     		ldr	r3, [r7, #4]
 2511 0010 002B     		cmp	r3, #0
 2512 0012 01D1     		bne	.L165
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 2513              		.loc 1 703 0
 2514 0014 0123     		movs	r3, #1
 2515 0016 62E1     		b	.L166
 2516              	.L165:
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 2517              		.loc 1 715 0
 2518 0018 904B     		ldr	r3, .L197
 2519 001a 1B68     		ldr	r3, [r3]
 2520 001c 03F00703 		and	r3, r3, #7
 2521 0020 3A68     		ldr	r2, [r7]
 2522 0022 9A42     		cmp	r2, r3
 2523 0024 10D9     		bls	.L167
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2524              		.loc 1 718 0
 2525 0026 8D4B     		ldr	r3, .L197
 2526 0028 1B68     		ldr	r3, [r3]
 2527 002a 23F00702 		bic	r2, r3, #7
 2528 002e 8B49     		ldr	r1, .L197
 2529 0030 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccyrAJeC.s 			page 77


 2530 0032 1343     		orrs	r3, r3, r2
 2531 0034 0B60     		str	r3, [r1]
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 2532              		.loc 1 722 0
 2533 0036 894B     		ldr	r3, .L197
 2534 0038 1B68     		ldr	r3, [r3]
 2535 003a 03F00703 		and	r3, r3, #7
 2536 003e 3A68     		ldr	r2, [r7]
 2537 0040 9A42     		cmp	r2, r3
 2538 0042 01D0     		beq	.L167
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 2539              		.loc 1 724 0
 2540 0044 0123     		movs	r3, #1
 2541 0046 4AE1     		b	.L166
 2542              	.L167:
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 2543              		.loc 1 729 0
 2544 0048 7B68     		ldr	r3, [r7, #4]
 2545 004a 1B68     		ldr	r3, [r3]
 2546 004c 03F00203 		and	r3, r3, #2
 2547 0050 002B     		cmp	r3, #0
 2548 0052 08D0     		beq	.L168
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2549              		.loc 1 732 0
 2550 0054 824B     		ldr	r3, .L197+4
 2551 0056 5B68     		ldr	r3, [r3, #4]
 2552 0058 23F0F002 		bic	r2, r3, #240
 2553 005c 7B68     		ldr	r3, [r7, #4]
 2554 005e 9B68     		ldr	r3, [r3, #8]
 2555 0060 7F49     		ldr	r1, .L197+4
 2556 0062 1343     		orrs	r3, r3, r2
 2557 0064 4B60     		str	r3, [r1, #4]
 2558              	.L168:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 2559              		.loc 1 736 0
 2560 0066 7B68     		ldr	r3, [r7, #4]
 2561 0068 1B68     		ldr	r3, [r3]
 2562 006a 03F00103 		and	r3, r3, #1
 2563 006e 002B     		cmp	r3, #0
 2564 0070 00F0DC80 		beq	.L169
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
ARM GAS  /tmp/ccyrAJeC.s 			page 78


 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 2565              		.loc 1 741 0
 2566 0074 7B68     		ldr	r3, [r7, #4]
 2567 0076 5B68     		ldr	r3, [r3, #4]
 2568 0078 012B     		cmp	r3, #1
 2569 007a 3CD1     		bne	.L170
 2570 007c 4FF40033 		mov	r3, #131072
 2571 0080 3B67     		str	r3, [r7, #112]
 2572              	.LBB294:
 2573              	.LBB295:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2574              		.loc 2 988 0
 2575 0082 3B6F     		ldr	r3, [r7, #112]
 2576              		.syntax unified
 2577              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2578 0084 93FAA3F3 		rbit r3, r3
 2579              	@ 0 "" 2
 2580              		.thumb
 2581              		.syntax unified
 2582 0088 FB66     		str	r3, [r7, #108]
 2583              		.loc 2 1001 0
 2584 008a FB6E     		ldr	r3, [r7, #108]
 2585              	.LBE295:
 2586              	.LBE294:
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 2587              		.loc 1 744 0
 2588 008c B3FA83F3 		clz	r3, r3
 2589 0090 DBB2     		uxtb	r3, r3
 2590 0092 5B09     		lsrs	r3, r3, #5
 2591 0094 DBB2     		uxtb	r3, r3
 2592 0096 43F00103 		orr	r3, r3, #1
 2593 009a DBB2     		uxtb	r3, r3
 2594 009c 012B     		cmp	r3, #1
 2595 009e 02D1     		bne	.L172
 2596              		.loc 1 744 0 is_stmt 0 discriminator 1
 2597 00a0 6F4B     		ldr	r3, .L197+4
 2598 00a2 1B68     		ldr	r3, [r3]
 2599 00a4 0FE0     		b	.L173
 2600              	.L172:
 2601 00a6 4FF40033 		mov	r3, #131072
 2602 00aa BB66     		str	r3, [r7, #104]
 2603              	.LBB296:
 2604              	.LBB297:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2605              		.loc 2 988 0 is_stmt 1 discriminator 2
 2606 00ac BB6E     		ldr	r3, [r7, #104]
 2607              		.syntax unified
 2608              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2609 00ae 93FAA3F3 		rbit r3, r3
 2610              	@ 0 "" 2
 2611              		.thumb
 2612              		.syntax unified
 2613 00b2 7B66     		str	r3, [r7, #100]
 2614 00b4 4FF40033 		mov	r3, #131072
 2615 00b8 3B66     		str	r3, [r7, #96]
ARM GAS  /tmp/ccyrAJeC.s 			page 79


 2616              	.LBE297:
 2617              	.LBE296:
 2618              	.LBB298:
 2619              	.LBB299:
 2620 00ba 3B6E     		ldr	r3, [r7, #96]
 2621              		.syntax unified
 2622              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2623 00bc 93FAA3F3 		rbit r3, r3
 2624              	@ 0 "" 2
 2625              		.thumb
 2626              		.syntax unified
 2627 00c0 FB65     		str	r3, [r7, #92]
 2628              	.LBE299:
 2629              	.LBE298:
 2630              		.loc 1 744 0 discriminator 2
 2631 00c2 674B     		ldr	r3, .L197+4
 2632 00c4 5B6A     		ldr	r3, [r3, #36]
 2633              	.L173:
 2634 00c6 4FF40032 		mov	r2, #131072
 2635 00ca BA65     		str	r2, [r7, #88]
 2636              	.LBB300:
 2637              	.LBB301:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2638              		.loc 2 988 0 discriminator 12
 2639 00cc BA6D     		ldr	r2, [r7, #88]
 2640              		.syntax unified
 2641              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2642 00ce 92FAA2F2 		rbit r2, r2
 2643              	@ 0 "" 2
 2644              		.thumb
 2645              		.syntax unified
 2646 00d2 7A65     		str	r2, [r7, #84]
 2647              		.loc 2 1001 0 discriminator 12
 2648 00d4 7A6D     		ldr	r2, [r7, #84]
 2649              	.LBE301:
 2650              	.LBE300:
 2651              		.loc 1 744 0 discriminator 12
 2652 00d6 B2FA82F2 		clz	r2, r2
 2653 00da D2B2     		uxtb	r2, r2
 2654 00dc 42F02002 		orr	r2, r2, #32
 2655 00e0 D2B2     		uxtb	r2, r2
 2656 00e2 02F01F02 		and	r2, r2, #31
 2657 00e6 0121     		movs	r1, #1
 2658 00e8 01FA02F2 		lsl	r2, r1, r2
 2659 00ec 1340     		ands	r3, r3, r2
 2660 00ee 002B     		cmp	r3, #0
 2661 00f0 7BD1     		bne	.L177
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2662              		.loc 1 746 0
 2663 00f2 0123     		movs	r3, #1
 2664 00f4 F3E0     		b	.L166
 2665              	.L170:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
ARM GAS  /tmp/ccyrAJeC.s 			page 80


 2666              		.loc 1 750 0
 2667 00f6 7B68     		ldr	r3, [r7, #4]
 2668 00f8 5B68     		ldr	r3, [r3, #4]
 2669 00fa 022B     		cmp	r3, #2
 2670 00fc 3CD1     		bne	.L178
 2671 00fe 4FF00073 		mov	r3, #33554432
 2672 0102 3B65     		str	r3, [r7, #80]
 2673              	.LBB302:
 2674              	.LBB303:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2675              		.loc 2 988 0
 2676 0104 3B6D     		ldr	r3, [r7, #80]
 2677              		.syntax unified
 2678              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2679 0106 93FAA3F3 		rbit r3, r3
 2680              	@ 0 "" 2
 2681              		.thumb
 2682              		.syntax unified
 2683 010a FB64     		str	r3, [r7, #76]
 2684              		.loc 2 1001 0
 2685 010c FB6C     		ldr	r3, [r7, #76]
 2686              	.LBE303:
 2687              	.LBE302:
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 2688              		.loc 1 753 0
 2689 010e B3FA83F3 		clz	r3, r3
 2690 0112 DBB2     		uxtb	r3, r3
 2691 0114 5B09     		lsrs	r3, r3, #5
 2692 0116 DBB2     		uxtb	r3, r3
 2693 0118 43F00103 		orr	r3, r3, #1
 2694 011c DBB2     		uxtb	r3, r3
 2695 011e 012B     		cmp	r3, #1
 2696 0120 02D1     		bne	.L180
 2697              		.loc 1 753 0 is_stmt 0 discriminator 1
 2698 0122 4F4B     		ldr	r3, .L197+4
 2699 0124 1B68     		ldr	r3, [r3]
 2700 0126 0FE0     		b	.L181
 2701              	.L180:
 2702 0128 4FF00073 		mov	r3, #33554432
 2703 012c BB64     		str	r3, [r7, #72]
 2704              	.LBB304:
 2705              	.LBB305:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2706              		.loc 2 988 0 is_stmt 1 discriminator 2
 2707 012e BB6C     		ldr	r3, [r7, #72]
 2708              		.syntax unified
 2709              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2710 0130 93FAA3F3 		rbit r3, r3
 2711              	@ 0 "" 2
 2712              		.thumb
 2713              		.syntax unified
 2714 0134 7B64     		str	r3, [r7, #68]
 2715 0136 4FF00073 		mov	r3, #33554432
 2716 013a 3B64     		str	r3, [r7, #64]
 2717              	.LBE305:
ARM GAS  /tmp/ccyrAJeC.s 			page 81


 2718              	.LBE304:
 2719              	.LBB306:
 2720              	.LBB307:
 2721 013c 3B6C     		ldr	r3, [r7, #64]
 2722              		.syntax unified
 2723              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2724 013e 93FAA3F3 		rbit r3, r3
 2725              	@ 0 "" 2
 2726              		.thumb
 2727              		.syntax unified
 2728 0142 FB63     		str	r3, [r7, #60]
 2729              	.LBE307:
 2730              	.LBE306:
 2731              		.loc 1 753 0 discriminator 2
 2732 0144 464B     		ldr	r3, .L197+4
 2733 0146 5B6A     		ldr	r3, [r3, #36]
 2734              	.L181:
 2735 0148 4FF00072 		mov	r2, #33554432
 2736 014c BA63     		str	r2, [r7, #56]
 2737              	.LBB308:
 2738              	.LBB309:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2739              		.loc 2 988 0 discriminator 12
 2740 014e BA6B     		ldr	r2, [r7, #56]
 2741              		.syntax unified
 2742              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2743 0150 92FAA2F2 		rbit r2, r2
 2744              	@ 0 "" 2
 2745              		.thumb
 2746              		.syntax unified
 2747 0154 7A63     		str	r2, [r7, #52]
 2748              		.loc 2 1001 0 discriminator 12
 2749 0156 7A6B     		ldr	r2, [r7, #52]
 2750              	.LBE309:
 2751              	.LBE308:
 2752              		.loc 1 753 0 discriminator 12
 2753 0158 B2FA82F2 		clz	r2, r2
 2754 015c D2B2     		uxtb	r2, r2
 2755 015e 42F02002 		orr	r2, r2, #32
 2756 0162 D2B2     		uxtb	r2, r2
 2757 0164 02F01F02 		and	r2, r2, #31
 2758 0168 0121     		movs	r1, #1
 2759 016a 01FA02F2 		lsl	r2, r1, r2
 2760 016e 1340     		ands	r3, r3, r2
 2761 0170 002B     		cmp	r3, #0
 2762 0172 3AD1     		bne	.L177
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2763              		.loc 1 755 0
 2764 0174 0123     		movs	r3, #1
 2765 0176 B2E0     		b	.L166
 2766              	.L178:
 2767 0178 0223     		movs	r3, #2
 2768 017a 3B63     		str	r3, [r7, #48]
 2769              	.LBB310:
 2770              	.LBB311:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccyrAJeC.s 			page 82


 2771              		.loc 2 988 0
 2772 017c 3B6B     		ldr	r3, [r7, #48]
 2773              		.syntax unified
 2774              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2775 017e 93FAA3F3 		rbit r3, r3
 2776              	@ 0 "" 2
 2777              		.thumb
 2778              		.syntax unified
 2779 0182 FB62     		str	r3, [r7, #44]
 2780              		.loc 2 1001 0
 2781 0184 FB6A     		ldr	r3, [r7, #44]
 2782              	.LBE311:
 2783              	.LBE310:
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 2784              		.loc 1 762 0
 2785 0186 B3FA83F3 		clz	r3, r3
 2786 018a DBB2     		uxtb	r3, r3
 2787 018c 5B09     		lsrs	r3, r3, #5
 2788 018e DBB2     		uxtb	r3, r3
 2789 0190 43F00103 		orr	r3, r3, #1
 2790 0194 DBB2     		uxtb	r3, r3
 2791 0196 012B     		cmp	r3, #1
 2792 0198 02D1     		bne	.L186
 2793              		.loc 1 762 0 is_stmt 0 discriminator 1
 2794 019a 314B     		ldr	r3, .L197+4
 2795 019c 1B68     		ldr	r3, [r3]
 2796 019e 0DE0     		b	.L187
 2797              	.L186:
 2798 01a0 0223     		movs	r3, #2
 2799 01a2 BB62     		str	r3, [r7, #40]
 2800              	.LBB312:
 2801              	.LBB313:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2802              		.loc 2 988 0 is_stmt 1 discriminator 2
 2803 01a4 BB6A     		ldr	r3, [r7, #40]
 2804              		.syntax unified
 2805              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2806 01a6 93FAA3F3 		rbit r3, r3
 2807              	@ 0 "" 2
 2808              		.thumb
 2809              		.syntax unified
 2810 01aa 7B62     		str	r3, [r7, #36]
 2811 01ac 0223     		movs	r3, #2
 2812 01ae 3B62     		str	r3, [r7, #32]
 2813              	.LBE313:
 2814              	.LBE312:
 2815              	.LBB314:
 2816              	.LBB315:
 2817 01b0 3B6A     		ldr	r3, [r7, #32]
 2818              		.syntax unified
 2819              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccyrAJeC.s 			page 83


 2820 01b2 93FAA3F3 		rbit r3, r3
 2821              	@ 0 "" 2
 2822              		.thumb
 2823              		.syntax unified
 2824 01b6 FB61     		str	r3, [r7, #28]
 2825              	.LBE315:
 2826              	.LBE314:
 2827              		.loc 1 762 0 discriminator 2
 2828 01b8 294B     		ldr	r3, .L197+4
 2829 01ba 5B6A     		ldr	r3, [r3, #36]
 2830              	.L187:
 2831 01bc 0222     		movs	r2, #2
 2832 01be BA61     		str	r2, [r7, #24]
 2833              	.LBB316:
 2834              	.LBB317:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2835              		.loc 2 988 0 discriminator 12
 2836 01c0 BA69     		ldr	r2, [r7, #24]
 2837              		.syntax unified
 2838              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2839 01c2 92FAA2F2 		rbit r2, r2
 2840              	@ 0 "" 2
 2841              		.thumb
 2842              		.syntax unified
 2843 01c6 7A61     		str	r2, [r7, #20]
 2844              		.loc 2 1001 0 discriminator 12
 2845 01c8 7A69     		ldr	r2, [r7, #20]
 2846              	.LBE317:
 2847              	.LBE316:
 2848              		.loc 1 762 0 discriminator 12
 2849 01ca B2FA82F2 		clz	r2, r2
 2850 01ce D2B2     		uxtb	r2, r2
 2851 01d0 42F02002 		orr	r2, r2, #32
 2852 01d4 D2B2     		uxtb	r2, r2
 2853 01d6 02F01F02 		and	r2, r2, #31
 2854 01da 0121     		movs	r1, #1
 2855 01dc 01FA02F2 		lsl	r2, r1, r2
 2856 01e0 1340     		ands	r3, r3, r2
 2857 01e2 002B     		cmp	r3, #0
 2858 01e4 01D1     		bne	.L177
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2859              		.loc 1 764 0
 2860 01e6 0123     		movs	r3, #1
 2861 01e8 79E0     		b	.L166
 2862              	.L177:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 2863              		.loc 1 768 0
 2864 01ea 1D4B     		ldr	r3, .L197+4
 2865 01ec 5B68     		ldr	r3, [r3, #4]
 2866 01ee 23F00302 		bic	r2, r3, #3
 2867 01f2 7B68     		ldr	r3, [r7, #4]
 2868 01f4 5B68     		ldr	r3, [r3, #4]
 2869 01f6 1A49     		ldr	r1, .L197+4
ARM GAS  /tmp/ccyrAJeC.s 			page 84


 2870 01f8 1343     		orrs	r3, r3, r2
 2871 01fa 4B60     		str	r3, [r1, #4]
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 2872              		.loc 1 771 0
 2873 01fc FFF7FEFF 		bl	HAL_GetTick
 2874 0200 7867     		str	r0, [r7, #116]
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 2875              		.loc 1 773 0
 2876 0202 0AE0     		b	.L191
 2877              	.L192:
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 2878              		.loc 1 775 0
 2879 0204 FFF7FEFF 		bl	HAL_GetTick
 2880 0208 0246     		mov	r2, r0
 2881 020a 7B6F     		ldr	r3, [r7, #116]
 2882 020c D31A     		subs	r3, r2, r3
 2883 020e 41F28832 		movw	r2, #5000
 2884 0212 9342     		cmp	r3, r2
 2885 0214 01D9     		bls	.L191
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_TIMEOUT;
 2886              		.loc 1 777 0
 2887 0216 0323     		movs	r3, #3
 2888 0218 61E0     		b	.L166
 2889              	.L191:
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2890              		.loc 1 773 0
 2891 021a 114B     		ldr	r3, .L197+4
 2892 021c 5B68     		ldr	r3, [r3, #4]
 2893 021e 03F00C02 		and	r2, r3, #12
 2894 0222 7B68     		ldr	r3, [r7, #4]
 2895 0224 5B68     		ldr	r3, [r3, #4]
 2896 0226 9B00     		lsls	r3, r3, #2
 2897 0228 9A42     		cmp	r2, r3
 2898 022a EBD1     		bne	.L192
 2899              	.L169:
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 2900              		.loc 1 782 0
 2901 022c 0B4B     		ldr	r3, .L197
 2902 022e 1B68     		ldr	r3, [r3]
 2903 0230 03F00703 		and	r3, r3, #7
 2904 0234 3A68     		ldr	r2, [r7]
 2905 0236 9A42     		cmp	r2, r3
 2906 0238 14D2     		bcs	.L193
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2907              		.loc 1 785 0
 2908 023a 084B     		ldr	r3, .L197
ARM GAS  /tmp/ccyrAJeC.s 			page 85


 2909 023c 1B68     		ldr	r3, [r3]
 2910 023e 23F00702 		bic	r2, r3, #7
 2911 0242 0649     		ldr	r1, .L197
 2912 0244 3B68     		ldr	r3, [r7]
 2913 0246 1343     		orrs	r3, r3, r2
 2914 0248 0B60     		str	r3, [r1]
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 2915              		.loc 1 789 0
 2916 024a 044B     		ldr	r3, .L197
 2917 024c 1B68     		ldr	r3, [r3]
 2918 024e 03F00703 		and	r3, r3, #7
 2919 0252 3A68     		ldr	r2, [r7]
 2920 0254 9A42     		cmp	r2, r3
 2921 0256 05D0     		beq	.L193
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 2922              		.loc 1 791 0
 2923 0258 0123     		movs	r3, #1
 2924 025a 40E0     		b	.L166
 2925              	.L198:
 2926              		.align	2
 2927              	.L197:
 2928 025c 00200240 		.word	1073881088
 2929 0260 00100240 		.word	1073876992
 2930              	.L193:
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 2931              		.loc 1 796 0
 2932 0264 7B68     		ldr	r3, [r7, #4]
 2933 0266 1B68     		ldr	r3, [r3]
 2934 0268 03F00403 		and	r3, r3, #4
 2935 026c 002B     		cmp	r3, #0
 2936 026e 08D0     		beq	.L194
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2937              		.loc 1 799 0
 2938 0270 1D4B     		ldr	r3, .L199
 2939 0272 5B68     		ldr	r3, [r3, #4]
 2940 0274 23F4E062 		bic	r2, r3, #1792
 2941 0278 7B68     		ldr	r3, [r7, #4]
 2942 027a DB68     		ldr	r3, [r3, #12]
 2943 027c 1A49     		ldr	r1, .L199
 2944 027e 1343     		orrs	r3, r3, r2
 2945 0280 4B60     		str	r3, [r1, #4]
 2946              	.L194:
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 2947              		.loc 1 803 0
ARM GAS  /tmp/ccyrAJeC.s 			page 86


 2948 0282 7B68     		ldr	r3, [r7, #4]
 2949 0284 1B68     		ldr	r3, [r3]
 2950 0286 03F00803 		and	r3, r3, #8
 2951 028a 002B     		cmp	r3, #0
 2952 028c 09D0     		beq	.L195
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2953              		.loc 1 806 0
 2954 028e 164B     		ldr	r3, .L199
 2955 0290 5B68     		ldr	r3, [r3, #4]
 2956 0292 23F46052 		bic	r2, r3, #14336
 2957 0296 7B68     		ldr	r3, [r7, #4]
 2958 0298 1B69     		ldr	r3, [r3, #16]
 2959 029a DB00     		lsls	r3, r3, #3
 2960 029c 1249     		ldr	r1, .L199
 2961 029e 1343     		orrs	r3, r3, r2
 2962 02a0 4B60     		str	r3, [r1, #4]
 2963              	.L195:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 2964              		.loc 1 810 0
 2965 02a2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2966 02a6 0146     		mov	r1, r0
 2967 02a8 0F4B     		ldr	r3, .L199
 2968 02aa 5B68     		ldr	r3, [r3, #4]
 2969 02ac 03F0F003 		and	r3, r3, #240
 2970 02b0 F022     		movs	r2, #240
 2971 02b2 3A61     		str	r2, [r7, #16]
 2972              	.LBB318:
 2973              	.LBB319:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2974              		.loc 2 988 0
 2975 02b4 3A69     		ldr	r2, [r7, #16]
 2976              		.syntax unified
 2977              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2978 02b6 92FAA2F2 		rbit r2, r2
 2979              	@ 0 "" 2
 2980              		.thumb
 2981              		.syntax unified
 2982 02ba FA60     		str	r2, [r7, #12]
 2983              		.loc 2 1001 0
 2984 02bc FA68     		ldr	r2, [r7, #12]
 2985              	.LBE319:
 2986              	.LBE318:
 2987              		.loc 1 810 0
 2988 02be B2FA82F2 		clz	r2, r2
 2989 02c2 D2B2     		uxtb	r2, r2
 2990 02c4 D340     		lsrs	r3, r3, r2
 2991 02c6 094A     		ldr	r2, .L199+4
 2992 02c8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2993 02ca 21FA03F3 		lsr	r3, r1, r3
 2994 02ce 084A     		ldr	r2, .L199+8
 2995 02d0 1360     		str	r3, [r2]
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyrAJeC.s 			page 87


 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 2996              		.loc 1 813 0
 2997 02d2 084B     		ldr	r3, .L199+12
 2998 02d4 1B68     		ldr	r3, [r3]
 2999 02d6 1846     		mov	r0, r3
 3000 02d8 FFF7FEFF 		bl	HAL_InitTick
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 3001              		.loc 1 815 0
 3002 02dc 0023     		movs	r3, #0
 3003              	.L166:
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3004              		.loc 1 816 0
 3005 02de 1846     		mov	r0, r3
 3006 02e0 7837     		adds	r7, r7, #120
 3007              	.LCFI13:
 3008              		.cfi_def_cfa_offset 8
 3009 02e2 BD46     		mov	sp, r7
 3010              	.LCFI14:
 3011              		.cfi_def_cfa_register 13
 3012              		@ sp needed
 3013 02e4 80BD     		pop	{r7, pc}
 3014              	.L200:
 3015 02e6 00BF     		.align	2
 3016              	.L199:
 3017 02e8 00100240 		.word	1073876992
 3018 02ec 00000000 		.word	AHBPrescTable
 3019 02f0 00000000 		.word	SystemCoreClock
 3020 02f4 00000000 		.word	uwTickPrio
 3021              		.cfi_endproc
 3022              	.LFE125:
 3024              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 3025              		.align	1
 3026              		.global	HAL_RCC_MCOConfig
 3027              		.syntax unified
 3028              		.thumb
 3029              		.thumb_func
 3030              		.fpu fpv4-sp-d16
 3032              	HAL_RCC_MCOConfig:
 3033              	.LFB126:
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/ccyrAJeC.s 			page 88


 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
ARM GAS  /tmp/ccyrAJeC.s 			page 89


 3034              		.loc 1 889 0
 3035              		.cfi_startproc
 3036              		@ args = 0, pretend = 0, frame = 40
 3037              		@ frame_needed = 1, uses_anonymous_args = 0
 3038 0000 80B5     		push	{r7, lr}
 3039              	.LCFI15:
 3040              		.cfi_def_cfa_offset 8
 3041              		.cfi_offset 7, -8
 3042              		.cfi_offset 14, -4
 3043 0002 8AB0     		sub	sp, sp, #40
 3044              	.LCFI16:
 3045              		.cfi_def_cfa_offset 48
 3046 0004 00AF     		add	r7, sp, #0
 3047              	.LCFI17:
 3048              		.cfi_def_cfa_register 7
 3049 0006 F860     		str	r0, [r7, #12]
 3050 0008 B960     		str	r1, [r7, #8]
 3051 000a 7A60     		str	r2, [r7, #4]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 3052              		.loc 1 898 0
 3053 000c 0223     		movs	r3, #2
 3054 000e BB61     		str	r3, [r7, #24]
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 3055              		.loc 1 899 0
 3056 0010 0323     		movs	r3, #3
 3057 0012 3B62     		str	r3, [r7, #32]
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 3058              		.loc 1 900 0
 3059 0014 0023     		movs	r3, #0
 3060 0016 FB61     		str	r3, [r7, #28]
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 3061              		.loc 1 901 0
 3062 0018 4FF48073 		mov	r3, #256
 3063 001c 7B61     		str	r3, [r7, #20]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 3064              		.loc 1 902 0
 3065 001e 0023     		movs	r3, #0
 3066 0020 7B62     		str	r3, [r7, #36]
 3067              	.LBB320:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 3068              		.loc 1 905 0
 3069 0022 104B     		ldr	r3, .L202
 3070 0024 5B69     		ldr	r3, [r3, #20]
 3071 0026 0F4A     		ldr	r2, .L202
 3072 0028 43F40033 		orr	r3, r3, #131072
 3073 002c 5361     		str	r3, [r2, #20]
 3074 002e 0D4B     		ldr	r3, .L202
ARM GAS  /tmp/ccyrAJeC.s 			page 90


 3075 0030 5B69     		ldr	r3, [r3, #20]
 3076 0032 03F40033 		and	r3, r3, #131072
 3077 0036 3B61     		str	r3, [r7, #16]
 3078 0038 3B69     		ldr	r3, [r7, #16]
 3079              	.LBE320:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 3080              		.loc 1 907 0
 3081 003a 07F11403 		add	r3, r7, #20
 3082 003e 1946     		mov	r1, r3
 3083 0040 4FF09040 		mov	r0, #1207959552
 3084 0044 FFF7FEFF 		bl	HAL_GPIO_Init
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 3085              		.loc 1 910 0
 3086 0048 064B     		ldr	r3, .L202
 3087 004a 5B68     		ldr	r3, [r3, #4]
 3088 004c 23F0EE42 		bic	r2, r3, #1996488704
 3089 0050 B968     		ldr	r1, [r7, #8]
 3090 0052 7B68     		ldr	r3, [r7, #4]
 3091 0054 0B43     		orrs	r3, r3, r1
 3092 0056 0349     		ldr	r1, .L202
 3093 0058 1343     		orrs	r3, r3, r2
 3094 005a 4B60     		str	r3, [r1, #4]
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3095              		.loc 1 911 0
 3096 005c 00BF     		nop
 3097 005e 2837     		adds	r7, r7, #40
 3098              	.LCFI18:
 3099              		.cfi_def_cfa_offset 8
 3100 0060 BD46     		mov	sp, r7
 3101              	.LCFI19:
 3102              		.cfi_def_cfa_register 13
 3103              		@ sp needed
 3104 0062 80BD     		pop	{r7, pc}
 3105              	.L203:
 3106              		.align	2
 3107              	.L202:
 3108 0064 00100240 		.word	1073876992
 3109              		.cfi_endproc
 3110              	.LFE126:
 3112              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 3113              		.align	1
 3114              		.global	HAL_RCC_EnableCSS
 3115              		.syntax unified
 3116              		.thumb
 3117              		.thumb_func
 3118              		.fpu fpv4-sp-d16
 3120              	HAL_RCC_EnableCSS:
 3121              	.LFB127:
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
ARM GAS  /tmp/ccyrAJeC.s 			page 91


 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3122              		.loc 1 923 0
 3123              		.cfi_startproc
 3124              		@ args = 0, pretend = 0, frame = 8
 3125              		@ frame_needed = 1, uses_anonymous_args = 0
 3126              		@ link register save eliminated.
 3127 0000 80B4     		push	{r7}
 3128              	.LCFI20:
 3129              		.cfi_def_cfa_offset 4
 3130              		.cfi_offset 7, -4
 3131 0002 83B0     		sub	sp, sp, #12
 3132              	.LCFI21:
 3133              		.cfi_def_cfa_offset 16
 3134 0004 00AF     		add	r7, sp, #0
 3135              	.LCFI22:
 3136              		.cfi_def_cfa_register 7
 3137 0006 4FF40023 		mov	r3, #524288
 3138 000a 7B60     		str	r3, [r7, #4]
 3139              	.LBB321:
 3140              	.LBB322:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3141              		.loc 2 988 0
 3142 000c 7B68     		ldr	r3, [r7, #4]
 3143              		.syntax unified
 3144              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3145 000e 93FAA3F3 		rbit r3, r3
 3146              	@ 0 "" 2
 3147              		.thumb
 3148              		.syntax unified
 3149 0012 3B60     		str	r3, [r7]
 3150              		.loc 2 1001 0
 3151 0014 3B68     		ldr	r3, [r7]
 3152              	.LBE322:
 3153              	.LBE321:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 3154              		.loc 1 924 0
 3155 0016 B3FA83F3 		clz	r3, r3
 3156 001a DBB2     		uxtb	r3, r3
 3157 001c 03F18453 		add	r3, r3, #276824064
 3158 0020 03F58413 		add	r3, r3, #1081344
 3159 0024 9B00     		lsls	r3, r3, #2
 3160 0026 1A46     		mov	r2, r3
 3161 0028 0123     		movs	r3, #1
 3162 002a 1360     		str	r3, [r2]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3163              		.loc 1 925 0
 3164 002c 00BF     		nop
 3165 002e 0C37     		adds	r7, r7, #12
 3166              	.LCFI23:
 3167              		.cfi_def_cfa_offset 4
 3168 0030 BD46     		mov	sp, r7
 3169              	.LCFI24:
ARM GAS  /tmp/ccyrAJeC.s 			page 92


 3170              		.cfi_def_cfa_register 13
 3171              		@ sp needed
 3172 0032 5DF8047B 		ldr	r7, [sp], #4
 3173              	.LCFI25:
 3174              		.cfi_restore 7
 3175              		.cfi_def_cfa_offset 0
 3176 0036 7047     		bx	lr
 3177              		.cfi_endproc
 3178              	.LFE127:
 3180              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 3181              		.align	1
 3182              		.global	HAL_RCC_DisableCSS
 3183              		.syntax unified
 3184              		.thumb
 3185              		.thumb_func
 3186              		.fpu fpv4-sp-d16
 3188              	HAL_RCC_DisableCSS:
 3189              	.LFB128:
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3190              		.loc 1 932 0
 3191              		.cfi_startproc
 3192              		@ args = 0, pretend = 0, frame = 8
 3193              		@ frame_needed = 1, uses_anonymous_args = 0
 3194              		@ link register save eliminated.
 3195 0000 80B4     		push	{r7}
 3196              	.LCFI26:
 3197              		.cfi_def_cfa_offset 4
 3198              		.cfi_offset 7, -4
 3199 0002 83B0     		sub	sp, sp, #12
 3200              	.LCFI27:
 3201              		.cfi_def_cfa_offset 16
 3202 0004 00AF     		add	r7, sp, #0
 3203              	.LCFI28:
 3204              		.cfi_def_cfa_register 7
 3205 0006 4FF40023 		mov	r3, #524288
 3206 000a 7B60     		str	r3, [r7, #4]
 3207              	.LBB323:
 3208              	.LBB324:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3209              		.loc 2 988 0
 3210 000c 7B68     		ldr	r3, [r7, #4]
 3211              		.syntax unified
 3212              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3213 000e 93FAA3F3 		rbit r3, r3
 3214              	@ 0 "" 2
 3215              		.thumb
 3216              		.syntax unified
 3217 0012 3B60     		str	r3, [r7]
 3218              		.loc 2 1001 0
 3219 0014 3B68     		ldr	r3, [r7]
 3220              	.LBE324:
ARM GAS  /tmp/ccyrAJeC.s 			page 93


 3221              	.LBE323:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 3222              		.loc 1 933 0
 3223 0016 B3FA83F3 		clz	r3, r3
 3224 001a DBB2     		uxtb	r3, r3
 3225 001c 03F18453 		add	r3, r3, #276824064
 3226 0020 03F58413 		add	r3, r3, #1081344
 3227 0024 9B00     		lsls	r3, r3, #2
 3228 0026 1A46     		mov	r2, r3
 3229 0028 0023     		movs	r3, #0
 3230 002a 1360     		str	r3, [r2]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3231              		.loc 1 934 0
 3232 002c 00BF     		nop
 3233 002e 0C37     		adds	r7, r7, #12
 3234              	.LCFI29:
 3235              		.cfi_def_cfa_offset 4
 3236 0030 BD46     		mov	sp, r7
 3237              	.LCFI30:
 3238              		.cfi_def_cfa_register 13
 3239              		@ sp needed
 3240 0032 5DF8047B 		ldr	r7, [sp], #4
 3241              	.LCFI31:
 3242              		.cfi_restore 7
 3243              		.cfi_def_cfa_offset 0
 3244 0036 7047     		bx	lr
 3245              		.cfi_endproc
 3246              	.LFE128:
 3248              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 3249              		.align	1
 3250              		.global	HAL_RCC_GetSysClockFreq
 3251              		.syntax unified
 3252              		.thumb
 3253              		.thumb_func
 3254              		.fpu fpv4-sp-d16
 3256              	HAL_RCC_GetSysClockFreq:
 3257              	.LFB129:
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
ARM GAS  /tmp/ccyrAJeC.s 			page 94


 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3258              		.loc 1 966 0
 3259              		.cfi_startproc
 3260              		@ args = 0, pretend = 0, frame = 40
 3261              		@ frame_needed = 1, uses_anonymous_args = 0
 3262              		@ link register save eliminated.
 3263 0000 80B4     		push	{r7}
 3264              	.LCFI32:
 3265              		.cfi_def_cfa_offset 4
 3266              		.cfi_offset 7, -4
 3267 0002 8BB0     		sub	sp, sp, #44
 3268              	.LCFI33:
 3269              		.cfi_def_cfa_offset 48
 3270 0004 00AF     		add	r7, sp, #0
 3271              	.LCFI34:
 3272              		.cfi_def_cfa_register 7
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 3273              		.loc 1 967 0
 3274 0006 0023     		movs	r3, #0
 3275 0008 FB61     		str	r3, [r7, #28]
 3276 000a 0023     		movs	r3, #0
 3277 000c BB61     		str	r3, [r7, #24]
 3278 000e 0023     		movs	r3, #0
 3279 0010 7B62     		str	r3, [r7, #36]
 3280 0012 0023     		movs	r3, #0
 3281 0014 7B61     		str	r3, [r7, #20]
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 3282              		.loc 1 968 0
 3283 0016 0023     		movs	r3, #0
 3284 0018 3B62     		str	r3, [r7, #32]
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 3285              		.loc 1 970 0
 3286 001a 294B     		ldr	r3, .L219
 3287 001c 5B68     		ldr	r3, [r3, #4]
 3288 001e FB61     		str	r3, [r7, #28]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 3289              		.loc 1 973 0
 3290 0020 FB69     		ldr	r3, [r7, #28]
 3291 0022 03F00C03 		and	r3, r3, #12
 3292 0026 042B     		cmp	r3, #4
 3293 0028 02D0     		beq	.L210
 3294 002a 082B     		cmp	r3, #8
 3295 002c 03D0     		beq	.L211
ARM GAS  /tmp/ccyrAJeC.s 			page 95


 3296 002e 3CE0     		b	.L218
 3297              	.L210:
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 3298              		.loc 1 977 0
 3299 0030 244B     		ldr	r3, .L219+4
 3300 0032 3B62     		str	r3, [r7, #32]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 3301              		.loc 1 978 0
 3302 0034 3CE0     		b	.L212
 3303              	.L211:
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 3304              		.loc 1 982 0
 3305 0036 FB69     		ldr	r3, [r7, #28]
 3306 0038 03F47013 		and	r3, r3, #3932160
 3307 003c 4FF47012 		mov	r2, #3932160
 3308 0040 BA60     		str	r2, [r7, #8]
 3309              	.LBB325:
 3310              	.LBB326:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3311              		.loc 2 988 0
 3312 0042 BA68     		ldr	r2, [r7, #8]
 3313              		.syntax unified
 3314              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3315 0044 92FAA2F2 		rbit r2, r2
 3316              	@ 0 "" 2
 3317              		.thumb
 3318              		.syntax unified
 3319 0048 7A60     		str	r2, [r7, #4]
 3320              		.loc 2 1001 0
 3321 004a 7A68     		ldr	r2, [r7, #4]
 3322              	.LBE326:
 3323              	.LBE325:
 3324              		.loc 1 982 0
 3325 004c B2FA82F2 		clz	r2, r2
 3326 0050 D2B2     		uxtb	r2, r2
 3327 0052 D340     		lsrs	r3, r3, r2
 3328 0054 1C4A     		ldr	r2, .L219+8
 3329 0056 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3330 0058 7B61     		str	r3, [r7, #20]
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 3331              		.loc 1 983 0
 3332 005a 194B     		ldr	r3, .L219
 3333 005c DB6A     		ldr	r3, [r3, #44]
 3334 005e 03F00F03 		and	r3, r3, #15
 3335 0062 0F22     		movs	r2, #15
 3336 0064 3A61     		str	r2, [r7, #16]
 3337              	.LBB327:
 3338              	.LBB328:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3339              		.loc 2 988 0
 3340 0066 3A69     		ldr	r2, [r7, #16]
ARM GAS  /tmp/ccyrAJeC.s 			page 96


 3341              		.syntax unified
 3342              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3343 0068 92FAA2F2 		rbit r2, r2
 3344              	@ 0 "" 2
 3345              		.thumb
 3346              		.syntax unified
 3347 006c FA60     		str	r2, [r7, #12]
 3348              		.loc 2 1001 0
 3349 006e FA68     		ldr	r2, [r7, #12]
 3350              	.LBE328:
 3351              	.LBE327:
 3352              		.loc 1 983 0
 3353 0070 B2FA82F2 		clz	r2, r2
 3354 0074 D2B2     		uxtb	r2, r2
 3355 0076 D340     		lsrs	r3, r3, r2
 3356 0078 144A     		ldr	r2, .L219+12
 3357 007a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3358 007c BB61     		str	r3, [r7, #24]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 3359              		.loc 1 985 0
 3360 007e FB69     		ldr	r3, [r7, #28]
 3361 0080 03F48033 		and	r3, r3, #65536
 3362 0084 002B     		cmp	r3, #0
 3363 0086 08D0     		beq	.L215
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 3364              		.loc 1 988 0
 3365 0088 0E4A     		ldr	r2, .L219+4
 3366 008a BB69     		ldr	r3, [r7, #24]
 3367 008c B2FBF3F2 		udiv	r2, r2, r3
 3368 0090 7B69     		ldr	r3, [r7, #20]
 3369 0092 02FB03F3 		mul	r3, r2, r3
 3370 0096 7B62     		str	r3, [r7, #36]
 3371 0098 04E0     		b	.L216
 3372              	.L215:
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 3373              		.loc 1 993 0
 3374 009a 7B69     		ldr	r3, [r7, #20]
 3375 009c 0C4A     		ldr	r2, .L219+16
 3376 009e 02FB03F3 		mul	r3, r2, r3
 3377 00a2 7B62     		str	r3, [r7, #36]
 3378              	.L216:
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccyrAJeC.s 			page 97


1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 3379              		.loc 1 1007 0
 3380 00a4 7B6A     		ldr	r3, [r7, #36]
 3381 00a6 3B62     		str	r3, [r7, #32]
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 3382              		.loc 1 1008 0
 3383 00a8 02E0     		b	.L212
 3384              	.L218:
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 3385              		.loc 1 1013 0
 3386 00aa 064B     		ldr	r3, .L219+4
 3387 00ac 3B62     		str	r3, [r7, #32]
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 3388              		.loc 1 1014 0
 3389 00ae 00BF     		nop
 3390              	.L212:
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 3391              		.loc 1 1017 0
 3392 00b0 3B6A     		ldr	r3, [r7, #32]
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3393              		.loc 1 1018 0
 3394 00b2 1846     		mov	r0, r3
 3395 00b4 2C37     		adds	r7, r7, #44
 3396              	.LCFI35:
 3397              		.cfi_def_cfa_offset 4
 3398 00b6 BD46     		mov	sp, r7
 3399              	.LCFI36:
 3400              		.cfi_def_cfa_register 13
 3401              		@ sp needed
 3402 00b8 5DF8047B 		ldr	r7, [sp], #4
 3403              	.LCFI37:
 3404              		.cfi_restore 7
 3405              		.cfi_def_cfa_offset 0
 3406 00bc 7047     		bx	lr
 3407              	.L220:
 3408 00be 00BF     		.align	2
 3409              	.L219:
 3410 00c0 00100240 		.word	1073876992
 3411 00c4 00127A00 		.word	8000000
 3412 00c8 00000000 		.word	aPLLMULFactorTable
 3413 00cc 00000000 		.word	aPredivFactorTable
 3414 00d0 00093D00 		.word	4000000
 3415              		.cfi_endproc
 3416              	.LFE129:
 3418              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 3419              		.align	1
 3420              		.global	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/ccyrAJeC.s 			page 98


 3421              		.syntax unified
 3422              		.thumb
 3423              		.thumb_func
 3424              		.fpu fpv4-sp-d16
 3426              	HAL_RCC_GetHCLKFreq:
 3427              	.LFB130:
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3428              		.loc 1 1030 0
 3429              		.cfi_startproc
 3430              		@ args = 0, pretend = 0, frame = 0
 3431              		@ frame_needed = 1, uses_anonymous_args = 0
 3432              		@ link register save eliminated.
 3433 0000 80B4     		push	{r7}
 3434              	.LCFI38:
 3435              		.cfi_def_cfa_offset 4
 3436              		.cfi_offset 7, -4
 3437 0002 00AF     		add	r7, sp, #0
 3438              	.LCFI39:
 3439              		.cfi_def_cfa_register 7
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 3440              		.loc 1 1031 0
 3441 0004 034B     		ldr	r3, .L223
 3442 0006 1B68     		ldr	r3, [r3]
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3443              		.loc 1 1032 0
 3444 0008 1846     		mov	r0, r3
 3445 000a BD46     		mov	sp, r7
 3446              	.LCFI40:
 3447              		.cfi_def_cfa_register 13
 3448              		@ sp needed
 3449 000c 5DF8047B 		ldr	r7, [sp], #4
 3450              	.LCFI41:
 3451              		.cfi_restore 7
 3452              		.cfi_def_cfa_offset 0
 3453 0010 7047     		bx	lr
 3454              	.L224:
 3455 0012 00BF     		.align	2
 3456              	.L223:
 3457 0014 00000000 		.word	SystemCoreClock
 3458              		.cfi_endproc
 3459              	.LFE130:
 3461              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 3462              		.align	1
 3463              		.global	HAL_RCC_GetPCLK1Freq
 3464              		.syntax unified
 3465              		.thumb
ARM GAS  /tmp/ccyrAJeC.s 			page 99


 3466              		.thumb_func
 3467              		.fpu fpv4-sp-d16
 3469              	HAL_RCC_GetPCLK1Freq:
 3470              	.LFB131:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3471              		.loc 1 1041 0
 3472              		.cfi_startproc
 3473              		@ args = 0, pretend = 0, frame = 8
 3474              		@ frame_needed = 1, uses_anonymous_args = 0
 3475 0000 80B5     		push	{r7, lr}
 3476              	.LCFI42:
 3477              		.cfi_def_cfa_offset 8
 3478              		.cfi_offset 7, -8
 3479              		.cfi_offset 14, -4
 3480 0002 82B0     		sub	sp, sp, #8
 3481              	.LCFI43:
 3482              		.cfi_def_cfa_offset 16
 3483 0004 00AF     		add	r7, sp, #0
 3484              	.LCFI44:
 3485              		.cfi_def_cfa_register 7
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 3486              		.loc 1 1043 0
 3487 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3488 000a 0146     		mov	r1, r0
 3489 000c 0B4B     		ldr	r3, .L228
 3490 000e 5B68     		ldr	r3, [r3, #4]
 3491 0010 03F4E063 		and	r3, r3, #1792
 3492 0014 4FF4E062 		mov	r2, #1792
 3493 0018 7A60     		str	r2, [r7, #4]
 3494              	.LBB329:
 3495              	.LBB330:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3496              		.loc 2 988 0
 3497 001a 7A68     		ldr	r2, [r7, #4]
 3498              		.syntax unified
 3499              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3500 001c 92FAA2F2 		rbit r2, r2
 3501              	@ 0 "" 2
 3502              		.thumb
 3503              		.syntax unified
 3504 0020 3A60     		str	r2, [r7]
 3505              		.loc 2 1001 0
 3506 0022 3A68     		ldr	r2, [r7]
 3507              	.LBE330:
 3508              	.LBE329:
 3509              		.loc 1 1043 0
 3510 0024 B2FA82F2 		clz	r2, r2
 3511 0028 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccyrAJeC.s 			page 100


 3512 002a D340     		lsrs	r3, r3, r2
 3513 002c 044A     		ldr	r2, .L228+4
 3514 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3515 0030 21FA03F3 		lsr	r3, r1, r3
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 3516              		.loc 1 1044 0
 3517 0034 1846     		mov	r0, r3
 3518 0036 0837     		adds	r7, r7, #8
 3519              	.LCFI45:
 3520              		.cfi_def_cfa_offset 8
 3521 0038 BD46     		mov	sp, r7
 3522              	.LCFI46:
 3523              		.cfi_def_cfa_register 13
 3524              		@ sp needed
 3525 003a 80BD     		pop	{r7, pc}
 3526              	.L229:
 3527              		.align	2
 3528              	.L228:
 3529 003c 00100240 		.word	1073876992
 3530 0040 00000000 		.word	APBPrescTable
 3531              		.cfi_endproc
 3532              	.LFE131:
 3534              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 3535              		.align	1
 3536              		.global	HAL_RCC_GetPCLK2Freq
 3537              		.syntax unified
 3538              		.thumb
 3539              		.thumb_func
 3540              		.fpu fpv4-sp-d16
 3542              	HAL_RCC_GetPCLK2Freq:
 3543              	.LFB132:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3544              		.loc 1 1053 0
 3545              		.cfi_startproc
 3546              		@ args = 0, pretend = 0, frame = 8
 3547              		@ frame_needed = 1, uses_anonymous_args = 0
 3548 0000 80B5     		push	{r7, lr}
 3549              	.LCFI47:
 3550              		.cfi_def_cfa_offset 8
 3551              		.cfi_offset 7, -8
 3552              		.cfi_offset 14, -4
 3553 0002 82B0     		sub	sp, sp, #8
 3554              	.LCFI48:
 3555              		.cfi_def_cfa_offset 16
 3556 0004 00AF     		add	r7, sp, #0
 3557              	.LCFI49:
 3558              		.cfi_def_cfa_register 7
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
ARM GAS  /tmp/ccyrAJeC.s 			page 101


 3559              		.loc 1 1055 0
 3560 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3561 000a 0146     		mov	r1, r0
 3562 000c 0B4B     		ldr	r3, .L233
 3563 000e 5B68     		ldr	r3, [r3, #4]
 3564 0010 03F46053 		and	r3, r3, #14336
 3565 0014 4FF46052 		mov	r2, #14336
 3566 0018 7A60     		str	r2, [r7, #4]
 3567              	.LBB331:
 3568              	.LBB332:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3569              		.loc 2 988 0
 3570 001a 7A68     		ldr	r2, [r7, #4]
 3571              		.syntax unified
 3572              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3573 001c 92FAA2F2 		rbit r2, r2
 3574              	@ 0 "" 2
 3575              		.thumb
 3576              		.syntax unified
 3577 0020 3A60     		str	r2, [r7]
 3578              		.loc 2 1001 0
 3579 0022 3A68     		ldr	r2, [r7]
 3580              	.LBE332:
 3581              	.LBE331:
 3582              		.loc 1 1055 0
 3583 0024 B2FA82F2 		clz	r2, r2
 3584 0028 D2B2     		uxtb	r2, r2
 3585 002a D340     		lsrs	r3, r3, r2
 3586 002c 044A     		ldr	r2, .L233+4
 3587 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3588 0030 21FA03F3 		lsr	r3, r1, r3
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 3589              		.loc 1 1056 0
 3590 0034 1846     		mov	r0, r3
 3591 0036 0837     		adds	r7, r7, #8
 3592              	.LCFI50:
 3593              		.cfi_def_cfa_offset 8
 3594 0038 BD46     		mov	sp, r7
 3595              	.LCFI51:
 3596              		.cfi_def_cfa_register 13
 3597              		@ sp needed
 3598 003a 80BD     		pop	{r7, pc}
 3599              	.L234:
 3600              		.align	2
 3601              	.L233:
 3602 003c 00100240 		.word	1073876992
 3603 0040 00000000 		.word	APBPrescTable
 3604              		.cfi_endproc
 3605              	.LFE132:
 3607              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 3608              		.align	1
 3609              		.global	HAL_RCC_GetOscConfig
 3610              		.syntax unified
 3611              		.thumb
 3612              		.thumb_func
 3613              		.fpu fpv4-sp-d16
 3615              	HAL_RCC_GetOscConfig:
ARM GAS  /tmp/ccyrAJeC.s 			page 102


 3616              	.LFB133:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3617              		.loc 1 1066 0
 3618              		.cfi_startproc
 3619              		@ args = 0, pretend = 0, frame = 16
 3620              		@ frame_needed = 1, uses_anonymous_args = 0
 3621              		@ link register save eliminated.
 3622 0000 80B4     		push	{r7}
 3623              	.LCFI52:
 3624              		.cfi_def_cfa_offset 4
 3625              		.cfi_offset 7, -4
 3626 0002 85B0     		sub	sp, sp, #20
 3627              	.LCFI53:
 3628              		.cfi_def_cfa_offset 24
 3629 0004 00AF     		add	r7, sp, #0
 3630              	.LCFI54:
 3631              		.cfi_def_cfa_register 7
 3632 0006 7860     		str	r0, [r7, #4]
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 3633              		.loc 1 1071 0
 3634 0008 7B68     		ldr	r3, [r7, #4]
 3635 000a 0F22     		movs	r2, #15
 3636 000c 1A60     		str	r2, [r3]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 3637              		.loc 1 1076 0
 3638 000e 424B     		ldr	r3, .L249
 3639 0010 1B68     		ldr	r3, [r3]
 3640 0012 03F48023 		and	r3, r3, #262144
 3641 0016 B3F5802F 		cmp	r3, #262144
 3642 001a 04D1     		bne	.L236
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 3643              		.loc 1 1078 0
 3644 001c 7B68     		ldr	r3, [r7, #4]
 3645 001e 4FF4A022 		mov	r2, #327680
 3646 0022 5A60     		str	r2, [r3, #4]
 3647 0024 0EE0     		b	.L237
 3648              	.L236:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
ARM GAS  /tmp/ccyrAJeC.s 			page 103


 3649              		.loc 1 1080 0
 3650 0026 3C4B     		ldr	r3, .L249
 3651 0028 1B68     		ldr	r3, [r3]
 3652 002a 03F48033 		and	r3, r3, #65536
 3653 002e B3F5803F 		cmp	r3, #65536
 3654 0032 04D1     		bne	.L238
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 3655              		.loc 1 1082 0
 3656 0034 7B68     		ldr	r3, [r7, #4]
 3657 0036 4FF48032 		mov	r2, #65536
 3658 003a 5A60     		str	r2, [r3, #4]
 3659 003c 02E0     		b	.L237
 3660              	.L238:
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 3661              		.loc 1 1086 0
 3662 003e 7B68     		ldr	r3, [r7, #4]
 3663 0040 0022     		movs	r2, #0
 3664 0042 5A60     		str	r2, [r3, #4]
 3665              	.L237:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 3666              		.loc 1 1089 0
 3667 0044 344B     		ldr	r3, .L249
 3668 0046 DB6A     		ldr	r3, [r3, #44]
 3669 0048 03F00F02 		and	r2, r3, #15
 3670 004c 7B68     		ldr	r3, [r7, #4]
 3671 004e 9A60     		str	r2, [r3, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 3672              		.loc 1 1093 0
 3673 0050 314B     		ldr	r3, .L249
 3674 0052 1B68     		ldr	r3, [r3]
 3675 0054 03F00103 		and	r3, r3, #1
 3676 0058 012B     		cmp	r3, #1
 3677 005a 03D1     		bne	.L239
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 3678              		.loc 1 1095 0
 3679 005c 7B68     		ldr	r3, [r7, #4]
 3680 005e 0122     		movs	r2, #1
 3681 0060 1A61     		str	r2, [r3, #16]
 3682 0062 02E0     		b	.L240
 3683              	.L239:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 3684              		.loc 1 1099 0
 3685 0064 7B68     		ldr	r3, [r7, #4]
 3686 0066 0022     		movs	r2, #0
ARM GAS  /tmp/ccyrAJeC.s 			page 104


 3687 0068 1A61     		str	r2, [r3, #16]
 3688              	.L240:
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 3689              		.loc 1 1102 0
 3690 006a 2B4B     		ldr	r3, .L249
 3691 006c 1B68     		ldr	r3, [r3]
 3692 006e 03F0F803 		and	r3, r3, #248
 3693 0072 F822     		movs	r2, #248
 3694 0074 FA60     		str	r2, [r7, #12]
 3695              	.LBB333:
 3696              	.LBB334:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3697              		.loc 2 988 0
 3698 0076 FA68     		ldr	r2, [r7, #12]
 3699              		.syntax unified
 3700              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3701 0078 92FAA2F2 		rbit r2, r2
 3702              	@ 0 "" 2
 3703              		.thumb
 3704              		.syntax unified
 3705 007c BA60     		str	r2, [r7, #8]
 3706              		.loc 2 1001 0
 3707 007e BA68     		ldr	r2, [r7, #8]
 3708              	.LBE334:
 3709              	.LBE333:
 3710              		.loc 1 1102 0
 3711 0080 B2FA82F2 		clz	r2, r2
 3712 0084 D2B2     		uxtb	r2, r2
 3713 0086 23FA02F2 		lsr	r2, r3, r2
 3714 008a 7B68     		ldr	r3, [r7, #4]
 3715 008c 5A61     		str	r2, [r3, #20]
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 3716              		.loc 1 1105 0
 3717 008e 224B     		ldr	r3, .L249
 3718 0090 1B6A     		ldr	r3, [r3, #32]
 3719 0092 03F00403 		and	r3, r3, #4
 3720 0096 042B     		cmp	r3, #4
 3721 0098 03D1     		bne	.L242
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 3722              		.loc 1 1107 0
 3723 009a 7B68     		ldr	r3, [r7, #4]
 3724 009c 0522     		movs	r2, #5
 3725 009e DA60     		str	r2, [r3, #12]
 3726 00a0 0CE0     		b	.L243
 3727              	.L242:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 3728              		.loc 1 1109 0
 3729 00a2 1D4B     		ldr	r3, .L249
 3730 00a4 1B6A     		ldr	r3, [r3, #32]
 3731 00a6 03F00103 		and	r3, r3, #1
 3732 00aa 012B     		cmp	r3, #1
ARM GAS  /tmp/ccyrAJeC.s 			page 105


 3733 00ac 03D1     		bne	.L244
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 3734              		.loc 1 1111 0
 3735 00ae 7B68     		ldr	r3, [r7, #4]
 3736 00b0 0122     		movs	r2, #1
 3737 00b2 DA60     		str	r2, [r3, #12]
 3738 00b4 02E0     		b	.L243
 3739              	.L244:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 3740              		.loc 1 1115 0
 3741 00b6 7B68     		ldr	r3, [r7, #4]
 3742 00b8 0022     		movs	r2, #0
 3743 00ba DA60     		str	r2, [r3, #12]
 3744              	.L243:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 3745              		.loc 1 1119 0
 3746 00bc 164B     		ldr	r3, .L249
 3747 00be 5B6A     		ldr	r3, [r3, #36]
 3748 00c0 03F00103 		and	r3, r3, #1
 3749 00c4 012B     		cmp	r3, #1
 3750 00c6 03D1     		bne	.L245
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 3751              		.loc 1 1121 0
 3752 00c8 7B68     		ldr	r3, [r7, #4]
 3753 00ca 0122     		movs	r2, #1
 3754 00cc 9A61     		str	r2, [r3, #24]
 3755 00ce 02E0     		b	.L246
 3756              	.L245:
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 3757              		.loc 1 1125 0
 3758 00d0 7B68     		ldr	r3, [r7, #4]
 3759 00d2 0022     		movs	r2, #0
 3760 00d4 9A61     		str	r2, [r3, #24]
 3761              	.L246:
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 3762              		.loc 1 1130 0
 3763 00d6 104B     		ldr	r3, .L249
 3764 00d8 1B68     		ldr	r3, [r3]
 3765 00da 03F08073 		and	r3, r3, #16777216
 3766 00de B3F1807F 		cmp	r3, #16777216
 3767 00e2 03D1     		bne	.L247
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccyrAJeC.s 			page 106


1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 3768              		.loc 1 1132 0
 3769 00e4 7B68     		ldr	r3, [r7, #4]
 3770 00e6 0222     		movs	r2, #2
 3771 00e8 DA61     		str	r2, [r3, #28]
 3772 00ea 02E0     		b	.L248
 3773              	.L247:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 3774              		.loc 1 1136 0
 3775 00ec 7B68     		ldr	r3, [r7, #4]
 3776 00ee 0122     		movs	r2, #1
 3777 00f0 DA61     		str	r2, [r3, #28]
 3778              	.L248:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 3779              		.loc 1 1138 0
 3780 00f2 094B     		ldr	r3, .L249
 3781 00f4 5B68     		ldr	r3, [r3, #4]
 3782 00f6 03F48032 		and	r2, r3, #65536
 3783 00fa 7B68     		ldr	r3, [r7, #4]
 3784 00fc 1A62     		str	r2, [r3, #32]
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 3785              		.loc 1 1139 0
 3786 00fe 064B     		ldr	r3, .L249
 3787 0100 5B68     		ldr	r3, [r3, #4]
 3788 0102 03F47012 		and	r2, r3, #3932160
 3789 0106 7B68     		ldr	r3, [r7, #4]
 3790 0108 5A62     		str	r2, [r3, #36]
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3791              		.loc 1 1143 0
 3792 010a 00BF     		nop
 3793 010c 1437     		adds	r7, r7, #20
 3794              	.LCFI55:
 3795              		.cfi_def_cfa_offset 4
 3796 010e BD46     		mov	sp, r7
 3797              	.LCFI56:
 3798              		.cfi_def_cfa_register 13
 3799              		@ sp needed
 3800 0110 5DF8047B 		ldr	r7, [sp], #4
 3801              	.LCFI57:
 3802              		.cfi_restore 7
 3803              		.cfi_def_cfa_offset 0
 3804 0114 7047     		bx	lr
 3805              	.L250:
 3806 0116 00BF     		.align	2
 3807              	.L249:
 3808 0118 00100240 		.word	1073876992
 3809              		.cfi_endproc
 3810              	.LFE133:
 3812              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 3813              		.align	1
ARM GAS  /tmp/ccyrAJeC.s 			page 107


 3814              		.global	HAL_RCC_GetClockConfig
 3815              		.syntax unified
 3816              		.thumb
 3817              		.thumb_func
 3818              		.fpu fpv4-sp-d16
 3820              	HAL_RCC_GetClockConfig:
 3821              	.LFB134:
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3822              		.loc 1 1154 0
 3823              		.cfi_startproc
 3824              		@ args = 0, pretend = 0, frame = 8
 3825              		@ frame_needed = 1, uses_anonymous_args = 0
 3826              		@ link register save eliminated.
 3827 0000 80B4     		push	{r7}
 3828              	.LCFI58:
 3829              		.cfi_def_cfa_offset 4
 3830              		.cfi_offset 7, -4
 3831 0002 83B0     		sub	sp, sp, #12
 3832              	.LCFI59:
 3833              		.cfi_def_cfa_offset 16
 3834 0004 00AF     		add	r7, sp, #0
 3835              	.LCFI60:
 3836              		.cfi_def_cfa_register 7
 3837 0006 7860     		str	r0, [r7, #4]
 3838 0008 3960     		str	r1, [r7]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 3839              		.loc 1 1160 0
 3840 000a 7B68     		ldr	r3, [r7, #4]
 3841 000c 0F22     		movs	r2, #15
 3842 000e 1A60     		str	r2, [r3]
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 3843              		.loc 1 1163 0
 3844 0010 124B     		ldr	r3, .L252
 3845 0012 5B68     		ldr	r3, [r3, #4]
 3846 0014 03F00302 		and	r2, r3, #3
 3847 0018 7B68     		ldr	r3, [r7, #4]
 3848 001a 5A60     		str	r2, [r3, #4]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
ARM GAS  /tmp/ccyrAJeC.s 			page 108


 3849              		.loc 1 1166 0
 3850 001c 0F4B     		ldr	r3, .L252
 3851 001e 5B68     		ldr	r3, [r3, #4]
 3852 0020 03F0F002 		and	r2, r3, #240
 3853 0024 7B68     		ldr	r3, [r7, #4]
 3854 0026 9A60     		str	r2, [r3, #8]
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 3855              		.loc 1 1169 0
 3856 0028 0C4B     		ldr	r3, .L252
 3857 002a 5B68     		ldr	r3, [r3, #4]
 3858 002c 03F4E062 		and	r2, r3, #1792
 3859 0030 7B68     		ldr	r3, [r7, #4]
 3860 0032 DA60     		str	r2, [r3, #12]
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 3861              		.loc 1 1172 0
 3862 0034 094B     		ldr	r3, .L252
 3863 0036 5B68     		ldr	r3, [r3, #4]
 3864 0038 DB08     		lsrs	r3, r3, #3
 3865 003a 03F4E062 		and	r2, r3, #1792
 3866 003e 7B68     		ldr	r3, [r7, #4]
 3867 0040 1A61     		str	r2, [r3, #16]
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 3868              		.loc 1 1175 0
 3869 0042 074B     		ldr	r3, .L252+4
 3870 0044 1B68     		ldr	r3, [r3]
 3871 0046 03F00702 		and	r2, r3, #7
 3872 004a 3B68     		ldr	r3, [r7]
 3873 004c 1A60     		str	r2, [r3]
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3874              		.loc 1 1176 0
 3875 004e 00BF     		nop
 3876 0050 0C37     		adds	r7, r7, #12
 3877              	.LCFI61:
 3878              		.cfi_def_cfa_offset 4
 3879 0052 BD46     		mov	sp, r7
 3880              	.LCFI62:
 3881              		.cfi_def_cfa_register 13
 3882              		@ sp needed
 3883 0054 5DF8047B 		ldr	r7, [sp], #4
 3884              	.LCFI63:
 3885              		.cfi_restore 7
 3886              		.cfi_def_cfa_offset 0
 3887 0058 7047     		bx	lr
 3888              	.L253:
 3889 005a 00BF     		.align	2
 3890              	.L252:
 3891 005c 00100240 		.word	1073876992
 3892 0060 00200240 		.word	1073881088
 3893              		.cfi_endproc
 3894              	.LFE134:
 3896              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccyrAJeC.s 			page 109


 3897              		.align	1
 3898              		.global	HAL_RCC_NMI_IRQHandler
 3899              		.syntax unified
 3900              		.thumb
 3901              		.thumb_func
 3902              		.fpu fpv4-sp-d16
 3904              	HAL_RCC_NMI_IRQHandler:
 3905              	.LFB135:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3906              		.loc 1 1184 0
 3907              		.cfi_startproc
 3908              		@ args = 0, pretend = 0, frame = 0
 3909              		@ frame_needed = 1, uses_anonymous_args = 0
 3910 0000 80B5     		push	{r7, lr}
 3911              	.LCFI64:
 3912              		.cfi_def_cfa_offset 8
 3913              		.cfi_offset 7, -8
 3914              		.cfi_offset 14, -4
 3915 0002 00AF     		add	r7, sp, #0
 3916              	.LCFI65:
 3917              		.cfi_def_cfa_register 7
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 3918              		.loc 1 1186 0
 3919 0004 064B     		ldr	r3, .L257
 3920 0006 9B68     		ldr	r3, [r3, #8]
 3921 0008 03F08003 		and	r3, r3, #128
 3922 000c 802B     		cmp	r3, #128
 3923 000e 04D1     		bne	.L256
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 3924              		.loc 1 1189 0
 3925 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 3926              		.loc 1 1192 0
 3927 0014 034B     		ldr	r3, .L257+4
 3928 0016 8022     		movs	r2, #128
 3929 0018 1A70     		strb	r2, [r3]
 3930              	.L256:
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3931              		.loc 1 1194 0
 3932 001a 00BF     		nop
 3933 001c 80BD     		pop	{r7, pc}
 3934              	.L258:
 3935 001e 00BF     		.align	2
 3936              	.L257:
ARM GAS  /tmp/ccyrAJeC.s 			page 110


 3937 0020 00100240 		.word	1073876992
 3938 0024 0A100240 		.word	1073877002
 3939              		.cfi_endproc
 3940              	.LFE135:
 3942              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 3943              		.align	1
 3944              		.weak	HAL_RCC_CSSCallback
 3945              		.syntax unified
 3946              		.thumb
 3947              		.thumb_func
 3948              		.fpu fpv4-sp-d16
 3950              	HAL_RCC_CSSCallback:
 3951              	.LFB136:
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3952              		.loc 1 1201 0
 3953              		.cfi_startproc
 3954              		@ args = 0, pretend = 0, frame = 0
 3955              		@ frame_needed = 1, uses_anonymous_args = 0
 3956              		@ link register save eliminated.
 3957 0000 80B4     		push	{r7}
 3958              	.LCFI66:
 3959              		.cfi_def_cfa_offset 4
 3960              		.cfi_offset 7, -4
 3961 0002 00AF     		add	r7, sp, #0
 3962              	.LCFI67:
 3963              		.cfi_def_cfa_register 7
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     */ 
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3964              		.loc 1 1205 0
 3965 0004 00BF     		nop
 3966 0006 BD46     		mov	sp, r7
 3967              	.LCFI68:
 3968              		.cfi_def_cfa_register 13
 3969              		@ sp needed
 3970 0008 5DF8047B 		ldr	r7, [sp], #4
 3971              	.LCFI69:
 3972              		.cfi_restore 7
 3973              		.cfi_def_cfa_offset 0
 3974 000c 7047     		bx	lr
 3975              		.cfi_endproc
 3976              	.LFE136:
 3978              		.text
 3979              	.Letext0:
 3980              		.file 3 "/opt/st/stm32cubeide_1.3.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-s
 3981              		.file 4 "/opt/st/stm32cubeide_1.3.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-s
 3982              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 3983              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 3984              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 3985              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
ARM GAS  /tmp/ccyrAJeC.s 			page 111


 3986              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 3987              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 3988              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 3989              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccyrAJeC.s 			page 112


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rcc.c
     /tmp/ccyrAJeC.s:22     .rodata.aPLLMULFactorTable:0000000000000000 aPLLMULFactorTable
     /tmp/ccyrAJeC.s:19     .rodata.aPLLMULFactorTable:0000000000000000 $d
     /tmp/ccyrAJeC.s:44     .rodata.aPredivFactorTable:0000000000000000 aPredivFactorTable
     /tmp/ccyrAJeC.s:41     .rodata.aPredivFactorTable:0000000000000000 $d
     /tmp/ccyrAJeC.s:62     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccyrAJeC.s:69     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccyrAJeC.s:275    .text.HAL_RCC_DeInit:0000000000000130 $d
     /tmp/ccyrAJeC.s:285    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccyrAJeC.s:292    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccyrAJeC.s:752    .text.HAL_RCC_OscConfig:00000000000002f8 $d
     /tmp/ccyrAJeC.s:755    .text.HAL_RCC_OscConfig:00000000000002fc $t
     /tmp/ccyrAJeC.s:1288   .text.HAL_RCC_OscConfig:0000000000000650 $d
     /tmp/ccyrAJeC.s:1291   .text.HAL_RCC_OscConfig:0000000000000658 $t
     /tmp/ccyrAJeC.s:1727   .text.HAL_RCC_OscConfig:0000000000000930 $d
     /tmp/ccyrAJeC.s:1731   .text.HAL_RCC_OscConfig:000000000000093c $t
     /tmp/ccyrAJeC.s:2193   .text.HAL_RCC_OscConfig:0000000000000c44 $d
     /tmp/ccyrAJeC.s:2195   .text.HAL_RCC_OscConfig:0000000000000c48 $t
     /tmp/ccyrAJeC.s:2475   .text.HAL_RCC_OscConfig:0000000000000e0c $d
     /tmp/ccyrAJeC.s:2480   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccyrAJeC.s:2487   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccyrAJeC.s:2928   .text.HAL_RCC_ClockConfig:000000000000025c $d
     /tmp/ccyrAJeC.s:2932   .text.HAL_RCC_ClockConfig:0000000000000264 $t
     /tmp/ccyrAJeC.s:3256   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccyrAJeC.s:3017   .text.HAL_RCC_ClockConfig:00000000000002e8 $d
     /tmp/ccyrAJeC.s:3025   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccyrAJeC.s:3032   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccyrAJeC.s:3108   .text.HAL_RCC_MCOConfig:0000000000000064 $d
     /tmp/ccyrAJeC.s:3113   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccyrAJeC.s:3120   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccyrAJeC.s:3181   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccyrAJeC.s:3188   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccyrAJeC.s:3249   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccyrAJeC.s:3410   .text.HAL_RCC_GetSysClockFreq:00000000000000c0 $d
     /tmp/ccyrAJeC.s:3419   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccyrAJeC.s:3426   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccyrAJeC.s:3457   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccyrAJeC.s:3462   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccyrAJeC.s:3469   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccyrAJeC.s:3529   .text.HAL_RCC_GetPCLK1Freq:000000000000003c $d
     /tmp/ccyrAJeC.s:3535   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccyrAJeC.s:3542   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccyrAJeC.s:3602   .text.HAL_RCC_GetPCLK2Freq:000000000000003c $d
     /tmp/ccyrAJeC.s:3608   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccyrAJeC.s:3615   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccyrAJeC.s:3808   .text.HAL_RCC_GetOscConfig:0000000000000118 $d
     /tmp/ccyrAJeC.s:3813   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccyrAJeC.s:3820   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccyrAJeC.s:3891   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccyrAJeC.s:3897   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccyrAJeC.s:3904   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccyrAJeC.s:3950   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccyrAJeC.s:3937   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccyrAJeC.s:3943   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccyrAJeC.s 			page 113


HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
