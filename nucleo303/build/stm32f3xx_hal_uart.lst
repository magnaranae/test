ARM GAS  /tmp/ccfCzef7.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_UART_Init:
  26              	.LFB123:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
ARM GAS  /tmp/ccfCzef7.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     ==================================
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
ARM GAS  /tmp/ccfCzef7.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
ARM GAS  /tmp/ccfCzef7.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccfCzef7.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     are available in reference manual).
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   following table.
ARM GAS  /tmp/ccfCzef7.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Table 1. UART frame format.
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  28              		.loc 1 288 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
  44              		.loc 1 290 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
  48              		.loc 1 292 0
  49 000e 0123     		movs	r3, #1
  50 0010 40E0     		b	.L3
  51              	.L2:
ARM GAS  /tmp/ccfCzef7.s 			page 7


 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  52              		.loc 1 306 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 5B6F     		ldr	r3, [r3, #116]
  55 0016 002B     		cmp	r3, #0
  56 0018 06D1     		bne	.L4
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  57              		.loc 1 309 0
  58 001a 7B68     		ldr	r3, [r7, #4]
  59 001c 0022     		movs	r2, #0
  60 001e 83F87020 		strb	r2, [r3, #112]
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  61              		.loc 1 323 0
  62 0022 7868     		ldr	r0, [r7, #4]
  63 0024 FFF7FEFF 		bl	HAL_UART_MspInit
  64              	.L4:
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  65              		.loc 1 327 0
  66 0028 7B68     		ldr	r3, [r7, #4]
  67 002a 2422     		movs	r2, #36
  68 002c 5A67     		str	r2, [r3, #116]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  69              		.loc 1 329 0
  70 002e 7B68     		ldr	r3, [r7, #4]
  71 0030 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 8


  72 0032 1A68     		ldr	r2, [r3]
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 22F00102 		bic	r2, r2, #1
  76 003c 1A60     		str	r2, [r3]
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  77              		.loc 1 332 0
  78 003e 7868     		ldr	r0, [r7, #4]
  79 0040 FFF7FEFF 		bl	UART_SetConfig
  80 0044 0346     		mov	r3, r0
  81 0046 012B     		cmp	r3, #1
  82 0048 01D1     		bne	.L5
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
  83              		.loc 1 334 0
  84 004a 0123     		movs	r3, #1
  85 004c 22E0     		b	.L3
  86              	.L5:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  87              		.loc 1 337 0
  88 004e 7B68     		ldr	r3, [r7, #4]
  89 0050 5B6A     		ldr	r3, [r3, #36]
  90 0052 002B     		cmp	r3, #0
  91 0054 02D0     		beq	.L6
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  92              		.loc 1 339 0
  93 0056 7868     		ldr	r0, [r7, #4]
  94 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
  95              	.L6:
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  96              		.loc 1 345 0
  97 005c 7B68     		ldr	r3, [r7, #4]
  98 005e 1B68     		ldr	r3, [r3]
  99 0060 5A68     		ldr	r2, [r3, #4]
 100 0062 7B68     		ldr	r3, [r7, #4]
 101 0064 1B68     		ldr	r3, [r3]
 102 0066 22F49042 		bic	r2, r2, #18432
 103 006a 5A60     		str	r2, [r3, #4]
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 104              		.loc 1 346 0
 105 006c 7B68     		ldr	r3, [r7, #4]
 106 006e 1B68     		ldr	r3, [r3]
 107 0070 9A68     		ldr	r2, [r3, #8]
 108 0072 7B68     		ldr	r3, [r7, #4]
 109 0074 1B68     		ldr	r3, [r3]
 110 0076 22F02A02 		bic	r2, r2, #42
 111 007a 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccfCzef7.s 			page 9


 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 112              		.loc 1 348 0
 113 007c 7B68     		ldr	r3, [r7, #4]
 114 007e 1B68     		ldr	r3, [r3]
 115 0080 1A68     		ldr	r2, [r3]
 116 0082 7B68     		ldr	r3, [r7, #4]
 117 0084 1B68     		ldr	r3, [r3]
 118 0086 42F00102 		orr	r2, r2, #1
 119 008a 1A60     		str	r2, [r3]
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 120              		.loc 1 351 0
 121 008c 7868     		ldr	r0, [r7, #4]
 122 008e FFF7FEFF 		bl	UART_CheckIdleState
 123 0092 0346     		mov	r3, r0
 124              	.L3:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 125              		.loc 1 352 0
 126 0094 1846     		mov	r0, r3
 127 0096 0837     		adds	r7, r7, #8
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130 0098 BD46     		mov	sp, r7
 131              	.LCFI4:
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 009a 80BD     		pop	{r7, pc}
 135              		.cfi_endproc
 136              	.LFE123:
 138              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 139              		.align	1
 140              		.global	HAL_HalfDuplex_Init
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	HAL_HalfDuplex_Init:
 147              	.LFB124:
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 148              		.loc 1 361 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
ARM GAS  /tmp/ccfCzef7.s 			page 10


 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI7:
 162              		.cfi_def_cfa_register 7
 163 0006 7860     		str	r0, [r7, #4]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 164              		.loc 1 363 0
 165 0008 7B68     		ldr	r3, [r7, #4]
 166 000a 002B     		cmp	r3, #0
 167 000c 01D1     		bne	.L8
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 168              		.loc 1 365 0
 169 000e 0123     		movs	r3, #1
 170 0010 48E0     		b	.L9
 171              	.L8:
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 172              		.loc 1 371 0
 173 0012 7B68     		ldr	r3, [r7, #4]
 174 0014 5B6F     		ldr	r3, [r3, #116]
 175 0016 002B     		cmp	r3, #0
 176 0018 06D1     		bne	.L10
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 177              		.loc 1 374 0
 178 001a 7B68     		ldr	r3, [r7, #4]
 179 001c 0022     		movs	r2, #0
 180 001e 83F87020 		strb	r2, [r3, #112]
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 181              		.loc 1 388 0
 182 0022 7868     		ldr	r0, [r7, #4]
 183 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 184              	.L10:
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/ccfCzef7.s 			page 11


 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 185              		.loc 1 392 0
 186 0028 7B68     		ldr	r3, [r7, #4]
 187 002a 2422     		movs	r2, #36
 188 002c 5A67     		str	r2, [r3, #116]
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 189              		.loc 1 394 0
 190 002e 7B68     		ldr	r3, [r7, #4]
 191 0030 1B68     		ldr	r3, [r3]
 192 0032 1A68     		ldr	r2, [r3]
 193 0034 7B68     		ldr	r3, [r7, #4]
 194 0036 1B68     		ldr	r3, [r3]
 195 0038 22F00102 		bic	r2, r2, #1
 196 003c 1A60     		str	r2, [r3]
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 197              		.loc 1 397 0
 198 003e 7868     		ldr	r0, [r7, #4]
 199 0040 FFF7FEFF 		bl	UART_SetConfig
 200 0044 0346     		mov	r3, r0
 201 0046 012B     		cmp	r3, #1
 202 0048 01D1     		bne	.L11
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 203              		.loc 1 399 0
 204 004a 0123     		movs	r3, #1
 205 004c 2AE0     		b	.L9
 206              	.L11:
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 207              		.loc 1 402 0
 208 004e 7B68     		ldr	r3, [r7, #4]
 209 0050 5B6A     		ldr	r3, [r3, #36]
 210 0052 002B     		cmp	r3, #0
 211 0054 02D0     		beq	.L12
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 212              		.loc 1 404 0
 213 0056 7868     		ldr	r0, [r7, #4]
 214 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 215              	.L12:
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 216              		.loc 1 410 0
 217 005c 7B68     		ldr	r3, [r7, #4]
 218 005e 1B68     		ldr	r3, [r3]
 219 0060 5A68     		ldr	r2, [r3, #4]
 220 0062 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 12


 221 0064 1B68     		ldr	r3, [r3]
 222 0066 22F49042 		bic	r2, r2, #18432
 223 006a 5A60     		str	r2, [r3, #4]
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 224              		.loc 1 411 0
 225 006c 7B68     		ldr	r3, [r7, #4]
 226 006e 1B68     		ldr	r3, [r3]
 227 0070 9A68     		ldr	r2, [r3, #8]
 228 0072 7B68     		ldr	r3, [r7, #4]
 229 0074 1B68     		ldr	r3, [r3]
 230 0076 22F02202 		bic	r2, r2, #34
 231 007a 9A60     		str	r2, [r3, #8]
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 232              		.loc 1 414 0
 233 007c 7B68     		ldr	r3, [r7, #4]
 234 007e 1B68     		ldr	r3, [r3]
 235 0080 9A68     		ldr	r2, [r3, #8]
 236 0082 7B68     		ldr	r3, [r7, #4]
 237 0084 1B68     		ldr	r3, [r3]
 238 0086 42F00802 		orr	r2, r2, #8
 239 008a 9A60     		str	r2, [r3, #8]
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 240              		.loc 1 416 0
 241 008c 7B68     		ldr	r3, [r7, #4]
 242 008e 1B68     		ldr	r3, [r3]
 243 0090 1A68     		ldr	r2, [r3]
 244 0092 7B68     		ldr	r3, [r7, #4]
 245 0094 1B68     		ldr	r3, [r3]
 246 0096 42F00102 		orr	r2, r2, #1
 247 009a 1A60     		str	r2, [r3]
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 248              		.loc 1 419 0
 249 009c 7868     		ldr	r0, [r7, #4]
 250 009e FFF7FEFF 		bl	UART_CheckIdleState
 251 00a2 0346     		mov	r3, r0
 252              	.L9:
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 253              		.loc 1 420 0
 254 00a4 1846     		mov	r0, r3
 255 00a6 0837     		adds	r7, r7, #8
 256              	.LCFI8:
 257              		.cfi_def_cfa_offset 8
 258 00a8 BD46     		mov	sp, r7
 259              	.LCFI9:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 00aa 80BD     		pop	{r7, pc}
 263              		.cfi_endproc
 264              	.LFE124:
 266              		.section	.text.HAL_LIN_Init,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_LIN_Init
ARM GAS  /tmp/ccfCzef7.s 			page 13


 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	HAL_LIN_Init:
 275              	.LFB125:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart             UART handle.
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 276              		.loc 1 434 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              	.LCFI10:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 82B0     		sub	sp, sp, #8
 286              	.LCFI11:
 287              		.cfi_def_cfa_offset 16
 288 0004 00AF     		add	r7, sp, #0
 289              	.LCFI12:
 290              		.cfi_def_cfa_register 7
 291 0006 7860     		str	r0, [r7, #4]
 292 0008 3960     		str	r1, [r7]
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 293              		.loc 1 436 0
 294 000a 7B68     		ldr	r3, [r7, #4]
 295 000c 002B     		cmp	r3, #0
 296 000e 01D1     		bne	.L14
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 297              		.loc 1 438 0
 298 0010 0123     		movs	r3, #1
 299 0012 5FE0     		b	.L15
 300              	.L14:
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
ARM GAS  /tmp/ccfCzef7.s 			page 14


 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 301              		.loc 1 447 0
 302 0014 7B68     		ldr	r3, [r7, #4]
 303 0016 DB69     		ldr	r3, [r3, #28]
 304 0018 B3F5004F 		cmp	r3, #32768
 305 001c 01D1     		bne	.L16
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 306              		.loc 1 449 0
 307 001e 0123     		movs	r3, #1
 308 0020 58E0     		b	.L15
 309              	.L16:
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 310              		.loc 1 452 0
 311 0022 7B68     		ldr	r3, [r7, #4]
 312 0024 9B68     		ldr	r3, [r3, #8]
 313 0026 002B     		cmp	r3, #0
 314 0028 01D0     		beq	.L17
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 315              		.loc 1 454 0
 316 002a 0123     		movs	r3, #1
 317 002c 52E0     		b	.L15
 318              	.L17:
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 319              		.loc 1 457 0
 320 002e 7B68     		ldr	r3, [r7, #4]
 321 0030 5B6F     		ldr	r3, [r3, #116]
 322 0032 002B     		cmp	r3, #0
 323 0034 06D1     		bne	.L18
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 324              		.loc 1 460 0
 325 0036 7B68     		ldr	r3, [r7, #4]
 326 0038 0022     		movs	r2, #0
 327 003a 83F87020 		strb	r2, [r3, #112]
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 328              		.loc 1 474 0
 329 003e 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 15


 330 0040 FFF7FEFF 		bl	HAL_UART_MspInit
 331              	.L18:
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 332              		.loc 1 478 0
 333 0044 7B68     		ldr	r3, [r7, #4]
 334 0046 2422     		movs	r2, #36
 335 0048 5A67     		str	r2, [r3, #116]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 336              		.loc 1 480 0
 337 004a 7B68     		ldr	r3, [r7, #4]
 338 004c 1B68     		ldr	r3, [r3]
 339 004e 1A68     		ldr	r2, [r3]
 340 0050 7B68     		ldr	r3, [r7, #4]
 341 0052 1B68     		ldr	r3, [r3]
 342 0054 22F00102 		bic	r2, r2, #1
 343 0058 1A60     		str	r2, [r3]
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 344              		.loc 1 483 0
 345 005a 7868     		ldr	r0, [r7, #4]
 346 005c FFF7FEFF 		bl	UART_SetConfig
 347 0060 0346     		mov	r3, r0
 348 0062 012B     		cmp	r3, #1
 349 0064 01D1     		bne	.L19
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 350              		.loc 1 485 0
 351 0066 0123     		movs	r3, #1
 352 0068 34E0     		b	.L15
 353              	.L19:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 354              		.loc 1 488 0
 355 006a 7B68     		ldr	r3, [r7, #4]
 356 006c 5B6A     		ldr	r3, [r3, #36]
 357 006e 002B     		cmp	r3, #0
 358 0070 02D0     		beq	.L20
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 359              		.loc 1 490 0
 360 0072 7868     		ldr	r0, [r7, #4]
 361 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 362              	.L20:
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 363              		.loc 1 496 0
 364 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 16


 365 007a 1B68     		ldr	r3, [r3]
 366 007c 5A68     		ldr	r2, [r3, #4]
 367 007e 7B68     		ldr	r3, [r7, #4]
 368 0080 1B68     		ldr	r3, [r3]
 369 0082 22F40062 		bic	r2, r2, #2048
 370 0086 5A60     		str	r2, [r3, #4]
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 371              		.loc 1 497 0
 372 0088 7B68     		ldr	r3, [r7, #4]
 373 008a 1B68     		ldr	r3, [r3]
 374 008c 9A68     		ldr	r2, [r3, #8]
 375 008e 7B68     		ldr	r3, [r7, #4]
 376 0090 1B68     		ldr	r3, [r3]
 377 0092 22F02A02 		bic	r2, r2, #42
 378 0096 9A60     		str	r2, [r3, #8]
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 379              		.loc 1 500 0
 380 0098 7B68     		ldr	r3, [r7, #4]
 381 009a 1B68     		ldr	r3, [r3]
 382 009c 5A68     		ldr	r2, [r3, #4]
 383 009e 7B68     		ldr	r3, [r7, #4]
 384 00a0 1B68     		ldr	r3, [r3]
 385 00a2 42F48042 		orr	r2, r2, #16384
 386 00a6 5A60     		str	r2, [r3, #4]
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 387              		.loc 1 503 0
 388 00a8 7B68     		ldr	r3, [r7, #4]
 389 00aa 1B68     		ldr	r3, [r3]
 390 00ac 5B68     		ldr	r3, [r3, #4]
 391 00ae 23F02001 		bic	r1, r3, #32
 392 00b2 7B68     		ldr	r3, [r7, #4]
 393 00b4 1B68     		ldr	r3, [r3]
 394 00b6 3A68     		ldr	r2, [r7]
 395 00b8 0A43     		orrs	r2, r2, r1
 396 00ba 5A60     		str	r2, [r3, #4]
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 397              		.loc 1 505 0
 398 00bc 7B68     		ldr	r3, [r7, #4]
 399 00be 1B68     		ldr	r3, [r3]
 400 00c0 1A68     		ldr	r2, [r3]
 401 00c2 7B68     		ldr	r3, [r7, #4]
 402 00c4 1B68     		ldr	r3, [r3]
 403 00c6 42F00102 		orr	r2, r2, #1
 404 00ca 1A60     		str	r2, [r3]
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 405              		.loc 1 508 0
 406 00cc 7868     		ldr	r0, [r7, #4]
 407 00ce FFF7FEFF 		bl	UART_CheckIdleState
 408 00d2 0346     		mov	r3, r0
 409              	.L15:
ARM GAS  /tmp/ccfCzef7.s 			page 17


 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 410              		.loc 1 509 0
 411 00d4 1846     		mov	r0, r3
 412 00d6 0837     		adds	r7, r7, #8
 413              	.LCFI13:
 414              		.cfi_def_cfa_offset 8
 415 00d8 BD46     		mov	sp, r7
 416              	.LCFI14:
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
 419 00da 80BD     		pop	{r7, pc}
 420              		.cfi_endproc
 421              	.LFE125:
 423              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 424              		.align	1
 425              		.global	HAL_MultiProcessor_Init
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 429              		.fpu fpv4-sp-d16
 431              	HAL_MultiProcessor_Init:
 432              	.LFB126:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart        UART handle.
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 433              		.loc 1 531 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 16
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437 0000 80B5     		push	{r7, lr}
 438              	.LCFI15:
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 7, -8
 441              		.cfi_offset 14, -4
 442 0002 84B0     		sub	sp, sp, #16
 443              	.LCFI16:
 444              		.cfi_def_cfa_offset 24
 445 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccfCzef7.s 			page 18


 446              	.LCFI17:
 447              		.cfi_def_cfa_register 7
 448 0006 F860     		str	r0, [r7, #12]
 449 0008 0B46     		mov	r3, r1
 450 000a 7A60     		str	r2, [r7, #4]
 451 000c FB72     		strb	r3, [r7, #11]
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 452              		.loc 1 533 0
 453 000e FB68     		ldr	r3, [r7, #12]
 454 0010 002B     		cmp	r3, #0
 455 0012 01D1     		bne	.L22
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 456              		.loc 1 535 0
 457 0014 0123     		movs	r3, #1
 458 0016 59E0     		b	.L23
 459              	.L22:
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 460              		.loc 1 541 0
 461 0018 FB68     		ldr	r3, [r7, #12]
 462 001a 5B6F     		ldr	r3, [r3, #116]
 463 001c 002B     		cmp	r3, #0
 464 001e 06D1     		bne	.L24
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 465              		.loc 1 544 0
 466 0020 FB68     		ldr	r3, [r7, #12]
 467 0022 0022     		movs	r2, #0
 468 0024 83F87020 		strb	r2, [r3, #112]
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 469              		.loc 1 558 0
 470 0028 F868     		ldr	r0, [r7, #12]
 471 002a FFF7FEFF 		bl	HAL_UART_MspInit
 472              	.L24:
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfCzef7.s 			page 19


 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 473              		.loc 1 562 0
 474 002e FB68     		ldr	r3, [r7, #12]
 475 0030 2422     		movs	r2, #36
 476 0032 5A67     		str	r2, [r3, #116]
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 477              		.loc 1 564 0
 478 0034 FB68     		ldr	r3, [r7, #12]
 479 0036 1B68     		ldr	r3, [r3]
 480 0038 1A68     		ldr	r2, [r3]
 481 003a FB68     		ldr	r3, [r7, #12]
 482 003c 1B68     		ldr	r3, [r3]
 483 003e 22F00102 		bic	r2, r2, #1
 484 0042 1A60     		str	r2, [r3]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 485              		.loc 1 567 0
 486 0044 F868     		ldr	r0, [r7, #12]
 487 0046 FFF7FEFF 		bl	UART_SetConfig
 488 004a 0346     		mov	r3, r0
 489 004c 012B     		cmp	r3, #1
 490 004e 01D1     		bne	.L25
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 491              		.loc 1 569 0
 492 0050 0123     		movs	r3, #1
 493 0052 3BE0     		b	.L23
 494              	.L25:
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 495              		.loc 1 572 0
 496 0054 FB68     		ldr	r3, [r7, #12]
 497 0056 5B6A     		ldr	r3, [r3, #36]
 498 0058 002B     		cmp	r3, #0
 499 005a 02D0     		beq	.L26
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 500              		.loc 1 574 0
 501 005c F868     		ldr	r0, [r7, #12]
 502 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 503              	.L26:
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 504              		.loc 1 580 0
 505 0062 FB68     		ldr	r3, [r7, #12]
 506 0064 1B68     		ldr	r3, [r3]
 507 0066 5A68     		ldr	r2, [r3, #4]
 508 0068 FB68     		ldr	r3, [r7, #12]
 509 006a 1B68     		ldr	r3, [r3]
 510 006c 22F49042 		bic	r2, r2, #18432
ARM GAS  /tmp/ccfCzef7.s 			page 20


 511 0070 5A60     		str	r2, [r3, #4]
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 512              		.loc 1 581 0
 513 0072 FB68     		ldr	r3, [r7, #12]
 514 0074 1B68     		ldr	r3, [r3]
 515 0076 9A68     		ldr	r2, [r3, #8]
 516 0078 FB68     		ldr	r3, [r7, #12]
 517 007a 1B68     		ldr	r3, [r3]
 518 007c 22F02A02 		bic	r2, r2, #42
 519 0080 9A60     		str	r2, [r3, #8]
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 520              		.loc 1 583 0
 521 0082 7B68     		ldr	r3, [r7, #4]
 522 0084 B3F5006F 		cmp	r3, #2048
 523 0088 0AD1     		bne	.L27
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 524              		.loc 1 586 0
 525 008a FB68     		ldr	r3, [r7, #12]
 526 008c 1B68     		ldr	r3, [r3]
 527 008e 5B68     		ldr	r3, [r3, #4]
 528 0090 23F07F41 		bic	r1, r3, #-16777216
 529 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 530 0096 1A06     		lsls	r2, r3, #24
 531 0098 FB68     		ldr	r3, [r7, #12]
 532 009a 1B68     		ldr	r3, [r3]
 533 009c 0A43     		orrs	r2, r2, r1
 534 009e 5A60     		str	r2, [r3, #4]
 535              	.L27:
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 536              		.loc 1 590 0
 537 00a0 FB68     		ldr	r3, [r7, #12]
 538 00a2 1B68     		ldr	r3, [r3]
 539 00a4 1B68     		ldr	r3, [r3]
 540 00a6 23F40061 		bic	r1, r3, #2048
 541 00aa FB68     		ldr	r3, [r7, #12]
 542 00ac 1B68     		ldr	r3, [r3]
 543 00ae 7A68     		ldr	r2, [r7, #4]
 544 00b0 0A43     		orrs	r2, r2, r1
 545 00b2 1A60     		str	r2, [r3]
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 546              		.loc 1 592 0
 547 00b4 FB68     		ldr	r3, [r7, #12]
 548 00b6 1B68     		ldr	r3, [r3]
 549 00b8 1A68     		ldr	r2, [r3]
 550 00ba FB68     		ldr	r3, [r7, #12]
 551 00bc 1B68     		ldr	r3, [r3]
 552 00be 42F00102 		orr	r2, r2, #1
 553 00c2 1A60     		str	r2, [r3]
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
ARM GAS  /tmp/ccfCzef7.s 			page 21


 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 554              		.loc 1 595 0
 555 00c4 F868     		ldr	r0, [r7, #12]
 556 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 557 00ca 0346     		mov	r3, r0
 558              	.L23:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 559              		.loc 1 596 0
 560 00cc 1846     		mov	r0, r3
 561 00ce 1037     		adds	r7, r7, #16
 562              	.LCFI18:
 563              		.cfi_def_cfa_offset 8
 564 00d0 BD46     		mov	sp, r7
 565              	.LCFI19:
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 00d2 80BD     		pop	{r7, pc}
 569              		.cfi_endproc
 570              	.LFE126:
 572              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 573              		.align	1
 574              		.global	HAL_UART_DeInit
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv4-sp-d16
 580              	HAL_UART_DeInit:
 581              	.LFB127:
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 582              		.loc 1 605 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586 0000 80B5     		push	{r7, lr}
 587              	.LCFI20:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 82B0     		sub	sp, sp, #8
 592              	.LCFI21:
 593              		.cfi_def_cfa_offset 16
 594 0004 00AF     		add	r7, sp, #0
 595              	.LCFI22:
 596              		.cfi_def_cfa_register 7
 597 0006 7860     		str	r0, [r7, #4]
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 598              		.loc 1 607 0
 599 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 22


 600 000a 002B     		cmp	r3, #0
 601 000c 01D1     		bne	.L29
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 602              		.loc 1 609 0
 603 000e 0123     		movs	r3, #1
 604 0010 27E0     		b	.L30
 605              	.L29:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 606              		.loc 1 615 0
 607 0012 7B68     		ldr	r3, [r7, #4]
 608 0014 2422     		movs	r2, #36
 609 0016 5A67     		str	r2, [r3, #116]
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 610              		.loc 1 617 0
 611 0018 7B68     		ldr	r3, [r7, #4]
 612 001a 1B68     		ldr	r3, [r3]
 613 001c 1A68     		ldr	r2, [r3]
 614 001e 7B68     		ldr	r3, [r7, #4]
 615 0020 1B68     		ldr	r3, [r3]
 616 0022 22F00102 		bic	r2, r2, #1
 617 0026 1A60     		str	r2, [r3]
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 618              		.loc 1 619 0
 619 0028 7B68     		ldr	r3, [r7, #4]
 620 002a 1B68     		ldr	r3, [r3]
 621 002c 0022     		movs	r2, #0
 622 002e 1A60     		str	r2, [r3]
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 623              		.loc 1 620 0
 624 0030 7B68     		ldr	r3, [r7, #4]
 625 0032 1B68     		ldr	r3, [r3]
 626 0034 0022     		movs	r2, #0
 627 0036 5A60     		str	r2, [r3, #4]
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 628              		.loc 1 621 0
 629 0038 7B68     		ldr	r3, [r7, #4]
 630 003a 1B68     		ldr	r3, [r3]
 631 003c 0022     		movs	r2, #0
 632 003e 9A60     		str	r2, [r3, #8]
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
ARM GAS  /tmp/ccfCzef7.s 			page 23


 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 633              		.loc 1 632 0
 634 0040 7868     		ldr	r0, [r7, #4]
 635 0042 FFF7FEFF 		bl	HAL_UART_MspDeInit
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 636              		.loc 1 635 0
 637 0046 7B68     		ldr	r3, [r7, #4]
 638 0048 0022     		movs	r2, #0
 639 004a DA67     		str	r2, [r3, #124]
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 640              		.loc 1 636 0
 641 004c 7B68     		ldr	r3, [r7, #4]
 642 004e 0022     		movs	r2, #0
 643 0050 5A67     		str	r2, [r3, #116]
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 644              		.loc 1 637 0
 645 0052 7B68     		ldr	r3, [r7, #4]
 646 0054 0022     		movs	r2, #0
 647 0056 9A67     		str	r2, [r3, #120]
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 648              		.loc 1 639 0
 649 0058 7B68     		ldr	r3, [r7, #4]
 650 005a 0022     		movs	r2, #0
 651 005c 83F87020 		strb	r2, [r3, #112]
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 652              		.loc 1 641 0
 653 0060 0023     		movs	r3, #0
 654              	.L30:
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 655              		.loc 1 642 0
 656 0062 1846     		mov	r0, r3
 657 0064 0837     		adds	r7, r7, #8
 658              	.LCFI23:
 659              		.cfi_def_cfa_offset 8
 660 0066 BD46     		mov	sp, r7
 661              	.LCFI24:
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
 664 0068 80BD     		pop	{r7, pc}
 665              		.cfi_endproc
 666              	.LFE127:
 668              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 669              		.align	1
 670              		.weak	HAL_UART_MspInit
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 674              		.fpu fpv4-sp-d16
 676              	HAL_UART_MspInit:
 677              	.LFB128:
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
ARM GAS  /tmp/ccfCzef7.s 			page 24


 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 678              		.loc 1 650 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 8
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 683 0000 80B4     		push	{r7}
 684              	.LCFI25:
 685              		.cfi_def_cfa_offset 4
 686              		.cfi_offset 7, -4
 687 0002 83B0     		sub	sp, sp, #12
 688              	.LCFI26:
 689              		.cfi_def_cfa_offset 16
 690 0004 00AF     		add	r7, sp, #0
 691              	.LCFI27:
 692              		.cfi_def_cfa_register 7
 693 0006 7860     		str	r0, [r7, #4]
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 694              		.loc 1 657 0
 695 0008 00BF     		nop
 696 000a 0C37     		adds	r7, r7, #12
 697              	.LCFI28:
 698              		.cfi_def_cfa_offset 4
 699 000c BD46     		mov	sp, r7
 700              	.LCFI29:
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 000e 5DF8047B 		ldr	r7, [sp], #4
 704              	.LCFI30:
 705              		.cfi_restore 7
 706              		.cfi_def_cfa_offset 0
 707 0012 7047     		bx	lr
 708              		.cfi_endproc
 709              	.LFE128:
 711              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 712              		.align	1
 713              		.weak	HAL_UART_MspDeInit
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 717              		.fpu fpv4-sp-d16
 719              	HAL_UART_MspDeInit:
 720              	.LFB129:
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccfCzef7.s 			page 25


 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 721              		.loc 1 665 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 8
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 726 0000 80B4     		push	{r7}
 727              	.LCFI31:
 728              		.cfi_def_cfa_offset 4
 729              		.cfi_offset 7, -4
 730 0002 83B0     		sub	sp, sp, #12
 731              	.LCFI32:
 732              		.cfi_def_cfa_offset 16
 733 0004 00AF     		add	r7, sp, #0
 734              	.LCFI33:
 735              		.cfi_def_cfa_register 7
 736 0006 7860     		str	r0, [r7, #4]
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 737              		.loc 1 672 0
 738 0008 00BF     		nop
 739 000a 0C37     		adds	r7, r7, #12
 740              	.LCFI34:
 741              		.cfi_def_cfa_offset 4
 742 000c BD46     		mov	sp, r7
 743              	.LCFI35:
 744              		.cfi_def_cfa_register 13
 745              		@ sp needed
 746 000e 5DF8047B 		ldr	r7, [sp], #4
 747              	.LCFI36:
 748              		.cfi_restore 7
 749              		.cfi_def_cfa_offset 0
 750 0012 7047     		bx	lr
 751              		.cfi_endproc
 752              	.LFE129:
 754              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 755              		.align	1
 756              		.global	HAL_UART_Transmit
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu fpv4-sp-d16
 762              	HAL_UART_Transmit:
 763              	.LFB130:
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Register a User UART Callback
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
ARM GAS  /tmp/ccfCzef7.s 			page 26


 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart uart handle
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This parameter can be one of the following values:
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (pCallback == NULL)
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfCzef7.s 			page 27


 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     status =  HAL_ERROR;
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/ccfCzef7.s 			page 28


 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return status;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart uart handle
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This parameter can be one of the following values:
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfCzef7.s 			page 29


 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     status =  HAL_ERROR;
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfCzef7.s 			page 30


 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return status;
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive()
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
ARM GAS  /tmp/ccfCzef7.s 			page 31


 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Abort()
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart   UART handle.
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 764              		.loc 1 1005 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 32
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              	.LCFI37:
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 8AB0     		sub	sp, sp, #40
 774              	.LCFI38:
 775              		.cfi_def_cfa_offset 48
 776 0004 02AF     		add	r7, sp, #8
 777              	.LCFI39:
ARM GAS  /tmp/ccfCzef7.s 			page 32


 778              		.cfi_def_cfa 7, 40
 779 0006 F860     		str	r0, [r7, #12]
 780 0008 B960     		str	r1, [r7, #8]
 781 000a 3B60     		str	r3, [r7]
 782 000c 1346     		mov	r3, r2	@ movhi
 783 000e FB80     		strh	r3, [r7, #6]	@ movhi
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *pdata16bits;
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 784              		.loc 1 1011 0
 785 0010 FB68     		ldr	r3, [r7, #12]
 786 0012 5B6F     		ldr	r3, [r3, #116]
 787 0014 202B     		cmp	r3, #32
 788 0016 40F08180 		bne	.L34
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 789              		.loc 1 1013 0
 790 001a BB68     		ldr	r3, [r7, #8]
 791 001c 002B     		cmp	r3, #0
 792 001e 02D0     		beq	.L35
 793              		.loc 1 1013 0 is_stmt 0 discriminator 1
 794 0020 FB88     		ldrh	r3, [r7, #6]
 795 0022 002B     		cmp	r3, #0
 796 0024 01D1     		bne	.L36
 797              	.L35:
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 798              		.loc 1 1015 0 is_stmt 1
 799 0026 0123     		movs	r3, #1
 800 0028 79E0     		b	.L37
 801              	.L36:
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 802              		.loc 1 1018 0
 803 002a FB68     		ldr	r3, [r7, #12]
 804 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 805 0030 012B     		cmp	r3, #1
 806 0032 01D1     		bne	.L38
 807              		.loc 1 1018 0 is_stmt 0 discriminator 1
 808 0034 0223     		movs	r3, #2
 809 0036 72E0     		b	.L37
 810              	.L38:
 811              		.loc 1 1018 0 discriminator 2
 812 0038 FB68     		ldr	r3, [r7, #12]
 813 003a 0122     		movs	r2, #1
 814 003c 83F87020 		strb	r2, [r3, #112]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 815              		.loc 1 1020 0 is_stmt 1 discriminator 2
 816 0040 FB68     		ldr	r3, [r7, #12]
 817 0042 0022     		movs	r2, #0
 818 0044 DA67     		str	r2, [r3, #124]
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccfCzef7.s 			page 33


 819              		.loc 1 1021 0 discriminator 2
 820 0046 FB68     		ldr	r3, [r7, #12]
 821 0048 2122     		movs	r2, #33
 822 004a 5A67     		str	r2, [r3, #116]
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 823              		.loc 1 1024 0 discriminator 2
 824 004c FFF7FEFF 		bl	HAL_GetTick
 825 0050 7861     		str	r0, [r7, #20]
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 826              		.loc 1 1026 0 discriminator 2
 827 0052 FB68     		ldr	r3, [r7, #12]
 828 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 829 0056 A3F85020 		strh	r2, [r3, #80]	@ movhi
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 830              		.loc 1 1027 0 discriminator 2
 831 005a FB68     		ldr	r3, [r7, #12]
 832 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 833 005e A3F85220 		strh	r2, [r3, #82]	@ movhi
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 834              		.loc 1 1030 0 discriminator 2
 835 0062 FB68     		ldr	r3, [r7, #12]
 836 0064 9B68     		ldr	r3, [r3, #8]
 837 0066 B3F5805F 		cmp	r3, #4096
 838 006a 08D1     		bne	.L39
 839              		.loc 1 1030 0 is_stmt 0 discriminator 1
 840 006c FB68     		ldr	r3, [r7, #12]
 841 006e 1B69     		ldr	r3, [r3, #16]
 842 0070 002B     		cmp	r3, #0
 843 0072 04D1     		bne	.L39
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = NULL;
 844              		.loc 1 1032 0 is_stmt 1
 845 0074 0023     		movs	r3, #0
 846 0076 FB61     		str	r3, [r7, #28]
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 847              		.loc 1 1033 0
 848 0078 BB68     		ldr	r3, [r7, #8]
 849 007a BB61     		str	r3, [r7, #24]
 850 007c 03E0     		b	.L40
 851              	.L39:
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = pData;
 852              		.loc 1 1037 0
 853 007e BB68     		ldr	r3, [r7, #8]
 854 0080 FB61     		str	r3, [r7, #28]
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = NULL;
 855              		.loc 1 1038 0
 856 0082 0023     		movs	r3, #0
 857 0084 BB61     		str	r3, [r7, #24]
 858              	.L40:
ARM GAS  /tmp/ccfCzef7.s 			page 34


1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 859              		.loc 1 1041 0
 860 0086 2DE0     		b	.L41
 861              	.L45:
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 862              		.loc 1 1043 0
 863 0088 3B68     		ldr	r3, [r7]
 864 008a 0093     		str	r3, [sp]
 865 008c 7B69     		ldr	r3, [r7, #20]
 866 008e 0022     		movs	r2, #0
 867 0090 8021     		movs	r1, #128
 868 0092 F868     		ldr	r0, [r7, #12]
 869 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 870 0098 0346     		mov	r3, r0
 871 009a 002B     		cmp	r3, #0
 872 009c 01D0     		beq	.L42
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 873              		.loc 1 1045 0
 874 009e 0323     		movs	r3, #3
 875 00a0 3DE0     		b	.L37
 876              	.L42:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (pdata8bits == NULL)
 877              		.loc 1 1047 0
 878 00a2 FB69     		ldr	r3, [r7, #28]
 879 00a4 002B     		cmp	r3, #0
 880 00a6 0BD1     		bne	.L43
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 881              		.loc 1 1049 0
 882 00a8 BB69     		ldr	r3, [r7, #24]
 883 00aa 1A88     		ldrh	r2, [r3]
 884 00ac FB68     		ldr	r3, [r7, #12]
 885 00ae 1B68     		ldr	r3, [r3]
 886 00b0 C2F30802 		ubfx	r2, r2, #0, #9
 887 00b4 92B2     		uxth	r2, r2
 888 00b6 1A85     		strh	r2, [r3, #40]	@ movhi
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
 889              		.loc 1 1050 0
 890 00b8 BB69     		ldr	r3, [r7, #24]
 891 00ba 0233     		adds	r3, r3, #2
 892 00bc BB61     		str	r3, [r7, #24]
 893 00be 08E0     		b	.L44
 894              	.L43:
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 895              		.loc 1 1054 0
 896 00c0 FB69     		ldr	r3, [r7, #28]
 897 00c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 898 00c4 FB68     		ldr	r3, [r7, #12]
 899 00c6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 35


 900 00c8 92B2     		uxth	r2, r2
 901 00ca 1A85     		strh	r2, [r3, #40]	@ movhi
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
 902              		.loc 1 1055 0
 903 00cc FB69     		ldr	r3, [r7, #28]
 904 00ce 0133     		adds	r3, r3, #1
 905 00d0 FB61     		str	r3, [r7, #28]
 906              	.L44:
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 907              		.loc 1 1057 0
 908 00d2 FB68     		ldr	r3, [r7, #12]
 909 00d4 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 910 00d8 9BB2     		uxth	r3, r3
 911 00da 013B     		subs	r3, r3, #1
 912 00dc 9AB2     		uxth	r2, r3
 913 00de FB68     		ldr	r3, [r7, #12]
 914 00e0 A3F85220 		strh	r2, [r3, #82]	@ movhi
 915              	.L41:
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 916              		.loc 1 1041 0
 917 00e4 FB68     		ldr	r3, [r7, #12]
 918 00e6 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 919 00ea 9BB2     		uxth	r3, r3
 920 00ec 002B     		cmp	r3, #0
 921 00ee CBD1     		bne	.L45
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 922              		.loc 1 1060 0
 923 00f0 3B68     		ldr	r3, [r7]
 924 00f2 0093     		str	r3, [sp]
 925 00f4 7B69     		ldr	r3, [r7, #20]
 926 00f6 0022     		movs	r2, #0
 927 00f8 4021     		movs	r1, #64
 928 00fa F868     		ldr	r0, [r7, #12]
 929 00fc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 930 0100 0346     		mov	r3, r0
 931 0102 002B     		cmp	r3, #0
 932 0104 01D0     		beq	.L46
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 933              		.loc 1 1062 0
 934 0106 0323     		movs	r3, #3
 935 0108 09E0     		b	.L37
 936              	.L46:
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 937              		.loc 1 1066 0
 938 010a FB68     		ldr	r3, [r7, #12]
 939 010c 2022     		movs	r2, #32
 940 010e 5A67     		str	r2, [r3, #116]
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 941              		.loc 1 1068 0
ARM GAS  /tmp/ccfCzef7.s 			page 36


 942 0110 FB68     		ldr	r3, [r7, #12]
 943 0112 0022     		movs	r2, #0
 944 0114 83F87020 		strb	r2, [r3, #112]
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 945              		.loc 1 1070 0
 946 0118 0023     		movs	r3, #0
 947 011a 00E0     		b	.L37
 948              	.L34:
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 949              		.loc 1 1074 0
 950 011c 0223     		movs	r3, #2
 951              	.L37:
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 952              		.loc 1 1076 0
 953 011e 1846     		mov	r0, r3
 954 0120 2037     		adds	r7, r7, #32
 955              	.LCFI40:
 956              		.cfi_def_cfa_offset 8
 957 0122 BD46     		mov	sp, r7
 958              	.LCFI41:
 959              		.cfi_def_cfa_register 13
 960              		@ sp needed
 961 0124 80BD     		pop	{r7, pc}
 962              		.cfi_endproc
 963              	.LFE130:
 965              		.section	.text.HAL_UART_Receive,"ax",%progbits
 966              		.align	1
 967              		.global	HAL_UART_Receive
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
 973              	HAL_UART_Receive:
 974              	.LFB131:
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart   UART handle.
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 975              		.loc 1 1090 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 32
 978              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccfCzef7.s 			page 37


 979 0000 80B5     		push	{r7, lr}
 980              	.LCFI42:
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 8AB0     		sub	sp, sp, #40
 985              	.LCFI43:
 986              		.cfi_def_cfa_offset 48
 987 0004 02AF     		add	r7, sp, #8
 988              	.LCFI44:
 989              		.cfi_def_cfa 7, 40
 990 0006 F860     		str	r0, [r7, #12]
 991 0008 B960     		str	r1, [r7, #8]
 992 000a 3B60     		str	r3, [r7]
 993 000c 1346     		mov	r3, r2	@ movhi
 994 000e FB80     		strh	r3, [r7, #6]	@ movhi
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *pdata16bits;
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 995              		.loc 1 1097 0
 996 0010 FB68     		ldr	r3, [r7, #12]
 997 0012 9B6F     		ldr	r3, [r3, #120]
 998 0014 202B     		cmp	r3, #32
 999 0016 40F0BB80 		bne	.L48
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1000              		.loc 1 1099 0
 1001 001a BB68     		ldr	r3, [r7, #8]
 1002 001c 002B     		cmp	r3, #0
 1003 001e 02D0     		beq	.L49
 1004              		.loc 1 1099 0 is_stmt 0 discriminator 1
 1005 0020 FB88     		ldrh	r3, [r7, #6]
 1006 0022 002B     		cmp	r3, #0
 1007 0024 01D1     		bne	.L50
 1008              	.L49:
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 1009              		.loc 1 1101 0 is_stmt 1
 1010 0026 0123     		movs	r3, #1
 1011 0028 B3E0     		b	.L51
 1012              	.L50:
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1013              		.loc 1 1104 0
 1014 002a FB68     		ldr	r3, [r7, #12]
 1015 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1016 0030 012B     		cmp	r3, #1
 1017 0032 01D1     		bne	.L52
 1018              		.loc 1 1104 0 is_stmt 0 discriminator 1
 1019 0034 0223     		movs	r3, #2
 1020 0036 ACE0     		b	.L51
 1021              	.L52:
ARM GAS  /tmp/ccfCzef7.s 			page 38


 1022              		.loc 1 1104 0 discriminator 2
 1023 0038 FB68     		ldr	r3, [r7, #12]
 1024 003a 0122     		movs	r2, #1
 1025 003c 83F87020 		strb	r2, [r3, #112]
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1026              		.loc 1 1106 0 is_stmt 1 discriminator 2
 1027 0040 FB68     		ldr	r3, [r7, #12]
 1028 0042 0022     		movs	r2, #0
 1029 0044 DA67     		str	r2, [r3, #124]
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1030              		.loc 1 1107 0 discriminator 2
 1031 0046 FB68     		ldr	r3, [r7, #12]
 1032 0048 2222     		movs	r2, #34
 1033 004a 9A67     		str	r2, [r3, #120]
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1034              		.loc 1 1110 0 discriminator 2
 1035 004c FFF7FEFF 		bl	HAL_GetTick
 1036 0050 7861     		str	r0, [r7, #20]
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1037              		.loc 1 1112 0 discriminator 2
 1038 0052 FB68     		ldr	r3, [r7, #12]
 1039 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1040 0056 A3F85820 		strh	r2, [r3, #88]	@ movhi
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 1041              		.loc 1 1113 0 discriminator 2
 1042 005a FB68     		ldr	r3, [r7, #12]
 1043 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1044 005e A3F85A20 		strh	r2, [r3, #90]	@ movhi
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1045              		.loc 1 1116 0 discriminator 2
 1046 0062 FB68     		ldr	r3, [r7, #12]
 1047 0064 9B68     		ldr	r3, [r3, #8]
 1048 0066 B3F5805F 		cmp	r3, #4096
 1049 006a 0ED1     		bne	.L53
 1050              		.loc 1 1116 0 is_stmt 0 discriminator 1
 1051 006c FB68     		ldr	r3, [r7, #12]
 1052 006e 1B69     		ldr	r3, [r3, #16]
 1053 0070 002B     		cmp	r3, #0
 1054 0072 05D1     		bne	.L54
 1055              		.loc 1 1116 0 discriminator 3
 1056 0074 FB68     		ldr	r3, [r7, #12]
 1057 0076 40F2FF12 		movw	r2, #511
 1058 007a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1059 007e 2DE0     		b	.L56
 1060              	.L54:
 1061              		.loc 1 1116 0 discriminator 4
 1062 0080 FB68     		ldr	r3, [r7, #12]
 1063 0082 FF22     		movs	r2, #255
 1064 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1065 0088 28E0     		b	.L56
 1066              	.L53:
ARM GAS  /tmp/ccfCzef7.s 			page 39


 1067              		.loc 1 1116 0 discriminator 2
 1068 008a FB68     		ldr	r3, [r7, #12]
 1069 008c 9B68     		ldr	r3, [r3, #8]
 1070 008e 002B     		cmp	r3, #0
 1071 0090 0DD1     		bne	.L57
 1072              		.loc 1 1116 0 discriminator 5
 1073 0092 FB68     		ldr	r3, [r7, #12]
 1074 0094 1B69     		ldr	r3, [r3, #16]
 1075 0096 002B     		cmp	r3, #0
 1076 0098 04D1     		bne	.L58
 1077              		.loc 1 1116 0 discriminator 7
 1078 009a FB68     		ldr	r3, [r7, #12]
 1079 009c FF22     		movs	r2, #255
 1080 009e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1081 00a2 1BE0     		b	.L56
 1082              	.L58:
 1083              		.loc 1 1116 0 discriminator 8
 1084 00a4 FB68     		ldr	r3, [r7, #12]
 1085 00a6 7F22     		movs	r2, #127
 1086 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1087 00ac 16E0     		b	.L56
 1088              	.L57:
 1089              		.loc 1 1116 0 discriminator 6
 1090 00ae FB68     		ldr	r3, [r7, #12]
 1091 00b0 9B68     		ldr	r3, [r3, #8]
 1092 00b2 B3F1805F 		cmp	r3, #268435456
 1093 00b6 0DD1     		bne	.L60
 1094              		.loc 1 1116 0 discriminator 9
 1095 00b8 FB68     		ldr	r3, [r7, #12]
 1096 00ba 1B69     		ldr	r3, [r3, #16]
 1097 00bc 002B     		cmp	r3, #0
 1098 00be 04D1     		bne	.L61
 1099              		.loc 1 1116 0 discriminator 11
 1100 00c0 FB68     		ldr	r3, [r7, #12]
 1101 00c2 7F22     		movs	r2, #127
 1102 00c4 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1103 00c8 08E0     		b	.L56
 1104              	.L61:
 1105              		.loc 1 1116 0 discriminator 12
 1106 00ca FB68     		ldr	r3, [r7, #12]
 1107 00cc 3F22     		movs	r2, #63
 1108 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1109 00d2 03E0     		b	.L56
 1110              	.L60:
 1111              		.loc 1 1116 0 discriminator 10
 1112 00d4 FB68     		ldr	r3, [r7, #12]
 1113 00d6 0022     		movs	r2, #0
 1114 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1115              	.L56:
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 1116              		.loc 1 1117 0 is_stmt 1
 1117 00dc FB68     		ldr	r3, [r7, #12]
 1118 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1119 00e2 7B82     		strh	r3, [r7, #18]	@ movhi
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
ARM GAS  /tmp/ccfCzef7.s 			page 40


 1120              		.loc 1 1120 0
 1121 00e4 FB68     		ldr	r3, [r7, #12]
 1122 00e6 9B68     		ldr	r3, [r3, #8]
 1123 00e8 B3F5805F 		cmp	r3, #4096
 1124 00ec 08D1     		bne	.L63
 1125              		.loc 1 1120 0 is_stmt 0 discriminator 1
 1126 00ee FB68     		ldr	r3, [r7, #12]
 1127 00f0 1B69     		ldr	r3, [r3, #16]
 1128 00f2 002B     		cmp	r3, #0
 1129 00f4 04D1     		bne	.L63
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = NULL;
 1130              		.loc 1 1122 0 is_stmt 1
 1131 00f6 0023     		movs	r3, #0
 1132 00f8 FB61     		str	r3, [r7, #28]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1133              		.loc 1 1123 0
 1134 00fa BB68     		ldr	r3, [r7, #8]
 1135 00fc BB61     		str	r3, [r7, #24]
 1136 00fe 03E0     		b	.L64
 1137              	.L63:
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = pData;
 1138              		.loc 1 1127 0
 1139 0100 BB68     		ldr	r3, [r7, #8]
 1140 0102 FB61     		str	r3, [r7, #28]
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = NULL;
 1141              		.loc 1 1128 0
 1142 0104 0023     		movs	r3, #0
 1143 0106 BB61     		str	r3, [r7, #24]
 1144              	.L64:
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1145              		.loc 1 1132 0
 1146 0108 33E0     		b	.L65
 1147              	.L69:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1148              		.loc 1 1134 0
 1149 010a 3B68     		ldr	r3, [r7]
 1150 010c 0093     		str	r3, [sp]
 1151 010e 7B69     		ldr	r3, [r7, #20]
 1152 0110 0022     		movs	r2, #0
 1153 0112 2021     		movs	r1, #32
 1154 0114 F868     		ldr	r0, [r7, #12]
 1155 0116 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1156 011a 0346     		mov	r3, r0
 1157 011c 002B     		cmp	r3, #0
 1158 011e 01D0     		beq	.L66
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 1159              		.loc 1 1136 0
 1160 0120 0323     		movs	r3, #3
ARM GAS  /tmp/ccfCzef7.s 			page 41


 1161 0122 36E0     		b	.L51
 1162              	.L66:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (pdata8bits == NULL)
 1163              		.loc 1 1138 0
 1164 0124 FB69     		ldr	r3, [r7, #28]
 1165 0126 002B     		cmp	r3, #0
 1166 0128 0CD1     		bne	.L67
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1167              		.loc 1 1140 0
 1168 012a FB68     		ldr	r3, [r7, #12]
 1169 012c 1B68     		ldr	r3, [r3]
 1170 012e 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1171 0130 9AB2     		uxth	r2, r3
 1172 0132 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1173 0134 1340     		ands	r3, r3, r2
 1174 0136 9AB2     		uxth	r2, r3
 1175 0138 BB69     		ldr	r3, [r7, #24]
 1176 013a 1A80     		strh	r2, [r3]	@ movhi
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
 1177              		.loc 1 1141 0
 1178 013c BB69     		ldr	r3, [r7, #24]
 1179 013e 0233     		adds	r3, r3, #2
 1180 0140 BB61     		str	r3, [r7, #24]
 1181 0142 0DE0     		b	.L68
 1182              	.L67:
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1183              		.loc 1 1145 0
 1184 0144 FB68     		ldr	r3, [r7, #12]
 1185 0146 1B68     		ldr	r3, [r3]
 1186 0148 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1187 014a 9BB2     		uxth	r3, r3
 1188 014c DAB2     		uxtb	r2, r3
 1189 014e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1190 0150 DBB2     		uxtb	r3, r3
 1191 0152 1340     		ands	r3, r3, r2
 1192 0154 DAB2     		uxtb	r2, r3
 1193 0156 FB69     		ldr	r3, [r7, #28]
 1194 0158 1A70     		strb	r2, [r3]
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
 1195              		.loc 1 1146 0
 1196 015a FB69     		ldr	r3, [r7, #28]
 1197 015c 0133     		adds	r3, r3, #1
 1198 015e FB61     		str	r3, [r7, #28]
 1199              	.L68:
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 1200              		.loc 1 1148 0
 1201 0160 FB68     		ldr	r3, [r7, #12]
 1202 0162 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1203 0166 9BB2     		uxth	r3, r3
 1204 0168 013B     		subs	r3, r3, #1
 1205 016a 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccfCzef7.s 			page 42


 1206 016c FB68     		ldr	r3, [r7, #12]
 1207 016e A3F85A20 		strh	r2, [r3, #90]	@ movhi
 1208              	.L65:
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1209              		.loc 1 1132 0
 1210 0172 FB68     		ldr	r3, [r7, #12]
 1211 0174 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1212 0178 9BB2     		uxth	r3, r3
 1213 017a 002B     		cmp	r3, #0
 1214 017c C5D1     		bne	.L69
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1215              		.loc 1 1152 0
 1216 017e FB68     		ldr	r3, [r7, #12]
 1217 0180 2022     		movs	r2, #32
 1218 0182 9A67     		str	r2, [r3, #120]
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1219              		.loc 1 1154 0
 1220 0184 FB68     		ldr	r3, [r7, #12]
 1221 0186 0022     		movs	r2, #0
 1222 0188 83F87020 		strb	r2, [r3, #112]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1223              		.loc 1 1156 0
 1224 018c 0023     		movs	r3, #0
 1225 018e 00E0     		b	.L51
 1226              	.L48:
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1227              		.loc 1 1160 0
 1228 0190 0223     		movs	r3, #2
 1229              	.L51:
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1230              		.loc 1 1162 0
 1231 0192 1846     		mov	r0, r3
 1232 0194 2037     		adds	r7, r7, #32
 1233              	.LCFI45:
 1234              		.cfi_def_cfa_offset 8
 1235 0196 BD46     		mov	sp, r7
 1236              	.LCFI46:
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed
 1239 0198 80BD     		pop	{r7, pc}
 1240              		.cfi_endproc
 1241              	.LFE131:
 1243              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1244              		.align	1
 1245              		.global	HAL_UART_Transmit_IT
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
ARM GAS  /tmp/ccfCzef7.s 			page 43


 1249              		.fpu fpv4-sp-d16
 1251              	HAL_UART_Transmit_IT:
 1252              	.LFB132:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1253              		.loc 1 1175 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 16
 1256              		@ frame_needed = 1, uses_anonymous_args = 0
 1257              		@ link register save eliminated.
 1258 0000 80B4     		push	{r7}
 1259              	.LCFI47:
 1260              		.cfi_def_cfa_offset 4
 1261              		.cfi_offset 7, -4
 1262 0002 85B0     		sub	sp, sp, #20
 1263              	.LCFI48:
 1264              		.cfi_def_cfa_offset 24
 1265 0004 00AF     		add	r7, sp, #0
 1266              	.LCFI49:
 1267              		.cfi_def_cfa_register 7
 1268 0006 F860     		str	r0, [r7, #12]
 1269 0008 B960     		str	r1, [r7, #8]
 1270 000a 1346     		mov	r3, r2
 1271 000c FB80     		strh	r3, [r7, #6]	@ movhi
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1272              		.loc 1 1177 0
 1273 000e FB68     		ldr	r3, [r7, #12]
 1274 0010 5B6F     		ldr	r3, [r3, #116]
 1275 0012 202B     		cmp	r3, #32
 1276 0014 44D1     		bne	.L71
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1277              		.loc 1 1179 0
 1278 0016 BB68     		ldr	r3, [r7, #8]
 1279 0018 002B     		cmp	r3, #0
 1280 001a 02D0     		beq	.L72
 1281              		.loc 1 1179 0 is_stmt 0 discriminator 1
 1282 001c FB88     		ldrh	r3, [r7, #6]
 1283 001e 002B     		cmp	r3, #0
 1284 0020 01D1     		bne	.L73
 1285              	.L72:
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1286              		.loc 1 1181 0 is_stmt 1
 1287 0022 0123     		movs	r3, #1
ARM GAS  /tmp/ccfCzef7.s 			page 44


 1288 0024 3DE0     		b	.L74
 1289              	.L73:
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1290              		.loc 1 1184 0
 1291 0026 FB68     		ldr	r3, [r7, #12]
 1292 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1293 002c 012B     		cmp	r3, #1
 1294 002e 01D1     		bne	.L75
 1295              		.loc 1 1184 0 is_stmt 0 discriminator 1
 1296 0030 0223     		movs	r3, #2
 1297 0032 36E0     		b	.L74
 1298              	.L75:
 1299              		.loc 1 1184 0 discriminator 2
 1300 0034 FB68     		ldr	r3, [r7, #12]
 1301 0036 0122     		movs	r2, #1
 1302 0038 83F87020 		strb	r2, [r3, #112]
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1303              		.loc 1 1186 0 is_stmt 1 discriminator 2
 1304 003c FB68     		ldr	r3, [r7, #12]
 1305 003e BA68     		ldr	r2, [r7, #8]
 1306 0040 DA64     		str	r2, [r3, #76]
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1307              		.loc 1 1187 0 discriminator 2
 1308 0042 FB68     		ldr	r3, [r7, #12]
 1309 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1310 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 1311              		.loc 1 1188 0 discriminator 2
 1312 004a FB68     		ldr	r3, [r7, #12]
 1313 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1314 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR       = NULL;
 1315              		.loc 1 1189 0 discriminator 2
 1316 0052 FB68     		ldr	r3, [r7, #12]
 1317 0054 0022     		movs	r2, #0
 1318 0056 5A66     		str	r2, [r3, #100]
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1319              		.loc 1 1191 0 discriminator 2
 1320 0058 FB68     		ldr	r3, [r7, #12]
 1321 005a 0022     		movs	r2, #0
 1322 005c DA67     		str	r2, [r3, #124]
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1323              		.loc 1 1192 0 discriminator 2
 1324 005e FB68     		ldr	r3, [r7, #12]
 1325 0060 2122     		movs	r2, #33
 1326 0062 5A67     		str	r2, [r3, #116]
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1327              		.loc 1 1195 0 discriminator 2
 1328 0064 FB68     		ldr	r3, [r7, #12]
 1329 0066 9B68     		ldr	r3, [r3, #8]
 1330 0068 B3F5805F 		cmp	r3, #4096
ARM GAS  /tmp/ccfCzef7.s 			page 45


 1331 006c 07D1     		bne	.L76
 1332              		.loc 1 1195 0 is_stmt 0 discriminator 1
 1333 006e FB68     		ldr	r3, [r7, #12]
 1334 0070 1B69     		ldr	r3, [r3, #16]
 1335 0072 002B     		cmp	r3, #0
 1336 0074 03D1     		bne	.L76
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1337              		.loc 1 1197 0 is_stmt 1
 1338 0076 FB68     		ldr	r3, [r7, #12]
 1339 0078 0D4A     		ldr	r2, .L78
 1340 007a 5A66     		str	r2, [r3, #100]
 1341 007c 02E0     		b	.L77
 1342              	.L76:
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1343              		.loc 1 1201 0
 1344 007e FB68     		ldr	r3, [r7, #12]
 1345 0080 0C4A     		ldr	r2, .L78+4
 1346 0082 5A66     		str	r2, [r3, #100]
 1347              	.L77:
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1348              		.loc 1 1204 0
 1349 0084 FB68     		ldr	r3, [r7, #12]
 1350 0086 0022     		movs	r2, #0
 1351 0088 83F87020 		strb	r2, [r3, #112]
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1352              		.loc 1 1207 0
 1353 008c FB68     		ldr	r3, [r7, #12]
 1354 008e 1B68     		ldr	r3, [r3]
 1355 0090 1A68     		ldr	r2, [r3]
 1356 0092 FB68     		ldr	r3, [r7, #12]
 1357 0094 1B68     		ldr	r3, [r3]
 1358 0096 42F08002 		orr	r2, r2, #128
 1359 009a 1A60     		str	r2, [r3]
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1360              		.loc 1 1209 0
 1361 009c 0023     		movs	r3, #0
 1362 009e 00E0     		b	.L74
 1363              	.L71:
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1364              		.loc 1 1213 0
 1365 00a0 0223     		movs	r3, #2
 1366              	.L74:
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1367              		.loc 1 1215 0
ARM GAS  /tmp/ccfCzef7.s 			page 46


 1368 00a2 1846     		mov	r0, r3
 1369 00a4 1437     		adds	r7, r7, #20
 1370              	.LCFI50:
 1371              		.cfi_def_cfa_offset 4
 1372 00a6 BD46     		mov	sp, r7
 1373              	.LCFI51:
 1374              		.cfi_def_cfa_register 13
 1375              		@ sp needed
 1376 00a8 5DF8047B 		ldr	r7, [sp], #4
 1377              	.LCFI52:
 1378              		.cfi_restore 7
 1379              		.cfi_def_cfa_offset 0
 1380 00ac 7047     		bx	lr
 1381              	.L79:
 1382 00ae 00BF     		.align	2
 1383              	.L78:
 1384 00b0 00000000 		.word	UART_TxISR_16BIT
 1385 00b4 00000000 		.word	UART_TxISR_8BIT
 1386              		.cfi_endproc
 1387              	.LFE132:
 1389              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1390              		.align	1
 1391              		.global	HAL_UART_Receive_IT
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1395              		.fpu fpv4-sp-d16
 1397              	HAL_UART_Receive_IT:
 1398              	.LFB133:
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1399              		.loc 1 1228 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 16
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403              		@ link register save eliminated.
 1404 0000 80B4     		push	{r7}
 1405              	.LCFI53:
 1406              		.cfi_def_cfa_offset 4
 1407              		.cfi_offset 7, -4
 1408 0002 85B0     		sub	sp, sp, #20
 1409              	.LCFI54:
 1410              		.cfi_def_cfa_offset 24
 1411 0004 00AF     		add	r7, sp, #0
 1412              	.LCFI55:
 1413              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccfCzef7.s 			page 47


 1414 0006 F860     		str	r0, [r7, #12]
 1415 0008 B960     		str	r1, [r7, #8]
 1416 000a 1346     		mov	r3, r2
 1417 000c FB80     		strh	r3, [r7, #6]	@ movhi
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1418              		.loc 1 1230 0
 1419 000e FB68     		ldr	r3, [r7, #12]
 1420 0010 9B6F     		ldr	r3, [r3, #120]
 1421 0012 202B     		cmp	r3, #32
 1422 0014 40F08A80 		bne	.L81
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1423              		.loc 1 1232 0
 1424 0018 BB68     		ldr	r3, [r7, #8]
 1425 001a 002B     		cmp	r3, #0
 1426 001c 02D0     		beq	.L82
 1427              		.loc 1 1232 0 is_stmt 0 discriminator 1
 1428 001e FB88     		ldrh	r3, [r7, #6]
 1429 0020 002B     		cmp	r3, #0
 1430 0022 01D1     		bne	.L83
 1431              	.L82:
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1432              		.loc 1 1234 0 is_stmt 1
 1433 0024 0123     		movs	r3, #1
 1434 0026 82E0     		b	.L84
 1435              	.L83:
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1436              		.loc 1 1237 0
 1437 0028 FB68     		ldr	r3, [r7, #12]
 1438 002a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1439 002e 012B     		cmp	r3, #1
 1440 0030 01D1     		bne	.L85
 1441              		.loc 1 1237 0 is_stmt 0 discriminator 1
 1442 0032 0223     		movs	r3, #2
 1443 0034 7BE0     		b	.L84
 1444              	.L85:
 1445              		.loc 1 1237 0 discriminator 2
 1446 0036 FB68     		ldr	r3, [r7, #12]
 1447 0038 0122     		movs	r2, #1
 1448 003a 83F87020 		strb	r2, [r3, #112]
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
 1449              		.loc 1 1239 0 is_stmt 1 discriminator 2
 1450 003e FB68     		ldr	r3, [r7, #12]
 1451 0040 BA68     		ldr	r2, [r7, #8]
 1452 0042 5A65     		str	r2, [r3, #84]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1453              		.loc 1 1240 0 discriminator 2
 1454 0044 FB68     		ldr	r3, [r7, #12]
 1455 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1456 0048 A3F85820 		strh	r2, [r3, #88]	@ movhi
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 1457              		.loc 1 1241 0 discriminator 2
ARM GAS  /tmp/ccfCzef7.s 			page 48


 1458 004c FB68     		ldr	r3, [r7, #12]
 1459 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1460 0050 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR       = NULL;
 1461              		.loc 1 1242 0 discriminator 2
 1462 0054 FB68     		ldr	r3, [r7, #12]
 1463 0056 0022     		movs	r2, #0
 1464 0058 1A66     		str	r2, [r3, #96]
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1465              		.loc 1 1245 0 discriminator 2
 1466 005a FB68     		ldr	r3, [r7, #12]
 1467 005c 9B68     		ldr	r3, [r3, #8]
 1468 005e B3F5805F 		cmp	r3, #4096
 1469 0062 0ED1     		bne	.L86
 1470              		.loc 1 1245 0 is_stmt 0 discriminator 1
 1471 0064 FB68     		ldr	r3, [r7, #12]
 1472 0066 1B69     		ldr	r3, [r3, #16]
 1473 0068 002B     		cmp	r3, #0
 1474 006a 05D1     		bne	.L87
 1475              		.loc 1 1245 0 discriminator 3
 1476 006c FB68     		ldr	r3, [r7, #12]
 1477 006e 40F2FF12 		movw	r2, #511
 1478 0072 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1479 0076 2DE0     		b	.L89
 1480              	.L87:
 1481              		.loc 1 1245 0 discriminator 4
 1482 0078 FB68     		ldr	r3, [r7, #12]
 1483 007a FF22     		movs	r2, #255
 1484 007c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1485 0080 28E0     		b	.L89
 1486              	.L86:
 1487              		.loc 1 1245 0 discriminator 2
 1488 0082 FB68     		ldr	r3, [r7, #12]
 1489 0084 9B68     		ldr	r3, [r3, #8]
 1490 0086 002B     		cmp	r3, #0
 1491 0088 0DD1     		bne	.L90
 1492              		.loc 1 1245 0 discriminator 5
 1493 008a FB68     		ldr	r3, [r7, #12]
 1494 008c 1B69     		ldr	r3, [r3, #16]
 1495 008e 002B     		cmp	r3, #0
 1496 0090 04D1     		bne	.L91
 1497              		.loc 1 1245 0 discriminator 7
 1498 0092 FB68     		ldr	r3, [r7, #12]
 1499 0094 FF22     		movs	r2, #255
 1500 0096 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1501 009a 1BE0     		b	.L89
 1502              	.L91:
 1503              		.loc 1 1245 0 discriminator 8
 1504 009c FB68     		ldr	r3, [r7, #12]
 1505 009e 7F22     		movs	r2, #127
 1506 00a0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1507 00a4 16E0     		b	.L89
 1508              	.L90:
 1509              		.loc 1 1245 0 discriminator 6
 1510 00a6 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccfCzef7.s 			page 49


 1511 00a8 9B68     		ldr	r3, [r3, #8]
 1512 00aa B3F1805F 		cmp	r3, #268435456
 1513 00ae 0DD1     		bne	.L93
 1514              		.loc 1 1245 0 discriminator 9
 1515 00b0 FB68     		ldr	r3, [r7, #12]
 1516 00b2 1B69     		ldr	r3, [r3, #16]
 1517 00b4 002B     		cmp	r3, #0
 1518 00b6 04D1     		bne	.L94
 1519              		.loc 1 1245 0 discriminator 11
 1520 00b8 FB68     		ldr	r3, [r7, #12]
 1521 00ba 7F22     		movs	r2, #127
 1522 00bc A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1523 00c0 08E0     		b	.L89
 1524              	.L94:
 1525              		.loc 1 1245 0 discriminator 12
 1526 00c2 FB68     		ldr	r3, [r7, #12]
 1527 00c4 3F22     		movs	r2, #63
 1528 00c6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1529 00ca 03E0     		b	.L89
 1530              	.L93:
 1531              		.loc 1 1245 0 discriminator 10
 1532 00cc FB68     		ldr	r3, [r7, #12]
 1533 00ce 0022     		movs	r2, #0
 1534 00d0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1535              	.L89:
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1536              		.loc 1 1247 0 is_stmt 1
 1537 00d4 FB68     		ldr	r3, [r7, #12]
 1538 00d6 0022     		movs	r2, #0
 1539 00d8 DA67     		str	r2, [r3, #124]
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1540              		.loc 1 1248 0
 1541 00da FB68     		ldr	r3, [r7, #12]
 1542 00dc 2222     		movs	r2, #34
 1543 00de 9A67     		str	r2, [r3, #120]
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1544              		.loc 1 1251 0
 1545 00e0 FB68     		ldr	r3, [r7, #12]
 1546 00e2 1B68     		ldr	r3, [r3]
 1547 00e4 9A68     		ldr	r2, [r3, #8]
 1548 00e6 FB68     		ldr	r3, [r7, #12]
 1549 00e8 1B68     		ldr	r3, [r3]
 1550 00ea 42F00102 		orr	r2, r2, #1
 1551 00ee 9A60     		str	r2, [r3, #8]
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1552              		.loc 1 1254 0
 1553 00f0 FB68     		ldr	r3, [r7, #12]
 1554 00f2 9B68     		ldr	r3, [r3, #8]
 1555 00f4 B3F5805F 		cmp	r3, #4096
 1556 00f8 07D1     		bne	.L96
 1557              		.loc 1 1254 0 is_stmt 0 discriminator 1
 1558 00fa FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccfCzef7.s 			page 50


 1559 00fc 1B69     		ldr	r3, [r3, #16]
 1560 00fe 002B     		cmp	r3, #0
 1561 0100 03D1     		bne	.L96
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 1562              		.loc 1 1256 0 is_stmt 1
 1563 0102 FB68     		ldr	r3, [r7, #12]
 1564 0104 0D4A     		ldr	r2, .L98
 1565 0106 1A66     		str	r2, [r3, #96]
 1566 0108 02E0     		b	.L97
 1567              	.L96:
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 1568              		.loc 1 1260 0
 1569 010a FB68     		ldr	r3, [r7, #12]
 1570 010c 0C4A     		ldr	r2, .L98+4
 1571 010e 1A66     		str	r2, [r3, #96]
 1572              	.L97:
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1573              		.loc 1 1263 0
 1574 0110 FB68     		ldr	r3, [r7, #12]
 1575 0112 0022     		movs	r2, #0
 1576 0114 83F87020 		strb	r2, [r3, #112]
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1577              		.loc 1 1266 0
 1578 0118 FB68     		ldr	r3, [r7, #12]
 1579 011a 1B68     		ldr	r3, [r3]
 1580 011c 1A68     		ldr	r2, [r3]
 1581 011e FB68     		ldr	r3, [r7, #12]
 1582 0120 1B68     		ldr	r3, [r3]
 1583 0122 42F49072 		orr	r2, r2, #288
 1584 0126 1A60     		str	r2, [r3]
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1585              		.loc 1 1268 0
 1586 0128 0023     		movs	r3, #0
 1587 012a 00E0     		b	.L84
 1588              	.L81:
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1589              		.loc 1 1272 0
 1590 012c 0223     		movs	r3, #2
 1591              	.L84:
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1592              		.loc 1 1274 0
 1593 012e 1846     		mov	r0, r3
 1594 0130 1437     		adds	r7, r7, #20
 1595              	.LCFI56:
ARM GAS  /tmp/ccfCzef7.s 			page 51


 1596              		.cfi_def_cfa_offset 4
 1597 0132 BD46     		mov	sp, r7
 1598              	.LCFI57:
 1599              		.cfi_def_cfa_register 13
 1600              		@ sp needed
 1601 0134 5DF8047B 		ldr	r7, [sp], #4
 1602              	.LCFI58:
 1603              		.cfi_restore 7
 1604              		.cfi_def_cfa_offset 0
 1605 0138 7047     		bx	lr
 1606              	.L99:
 1607 013a 00BF     		.align	2
 1608              	.L98:
 1609 013c 00000000 		.word	UART_RxISR_16BIT
 1610 0140 00000000 		.word	UART_RxISR_8BIT
 1611              		.cfi_endproc
 1612              	.LFE133:
 1614              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1615              		.align	1
 1616              		.global	HAL_UART_Transmit_DMA
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu fpv4-sp-d16
 1622              	HAL_UART_Transmit_DMA:
 1623              	.LFB134:
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1624              		.loc 1 1287 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 16
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628 0000 80B5     		push	{r7, lr}
 1629              	.LCFI59:
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 84B0     		sub	sp, sp, #16
 1634              	.LCFI60:
 1635              		.cfi_def_cfa_offset 24
 1636 0004 00AF     		add	r7, sp, #0
 1637              	.LCFI61:
 1638              		.cfi_def_cfa_register 7
 1639 0006 F860     		str	r0, [r7, #12]
 1640 0008 B960     		str	r1, [r7, #8]
 1641 000a 1346     		mov	r3, r2
ARM GAS  /tmp/ccfCzef7.s 			page 52


 1642 000c FB80     		strh	r3, [r7, #6]	@ movhi
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1643              		.loc 1 1289 0
 1644 000e FB68     		ldr	r3, [r7, #12]
 1645 0010 5B6F     		ldr	r3, [r3, #116]
 1646 0012 202B     		cmp	r3, #32
 1647 0014 64D1     		bne	.L101
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1648              		.loc 1 1291 0
 1649 0016 BB68     		ldr	r3, [r7, #8]
 1650 0018 002B     		cmp	r3, #0
 1651 001a 02D0     		beq	.L102
 1652              		.loc 1 1291 0 is_stmt 0 discriminator 1
 1653 001c FB88     		ldrh	r3, [r7, #6]
 1654 001e 002B     		cmp	r3, #0
 1655 0020 01D1     		bne	.L103
 1656              	.L102:
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1657              		.loc 1 1293 0 is_stmt 1
 1658 0022 0123     		movs	r3, #1
 1659 0024 5DE0     		b	.L104
 1660              	.L103:
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1661              		.loc 1 1296 0
 1662 0026 FB68     		ldr	r3, [r7, #12]
 1663 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1664 002c 012B     		cmp	r3, #1
 1665 002e 01D1     		bne	.L105
 1666              		.loc 1 1296 0 is_stmt 0 discriminator 1
 1667 0030 0223     		movs	r3, #2
 1668 0032 56E0     		b	.L104
 1669              	.L105:
 1670              		.loc 1 1296 0 discriminator 2
 1671 0034 FB68     		ldr	r3, [r7, #12]
 1672 0036 0122     		movs	r2, #1
 1673 0038 83F87020 		strb	r2, [r3, #112]
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1674              		.loc 1 1298 0 is_stmt 1 discriminator 2
 1675 003c FB68     		ldr	r3, [r7, #12]
 1676 003e BA68     		ldr	r2, [r7, #8]
 1677 0040 DA64     		str	r2, [r3, #76]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1678              		.loc 1 1299 0 discriminator 2
 1679 0042 FB68     		ldr	r3, [r7, #12]
 1680 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1681 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 1682              		.loc 1 1300 0 discriminator 2
 1683 004a FB68     		ldr	r3, [r7, #12]
 1684 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1685 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
ARM GAS  /tmp/ccfCzef7.s 			page 53


1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1686              		.loc 1 1302 0 discriminator 2
 1687 0052 FB68     		ldr	r3, [r7, #12]
 1688 0054 0022     		movs	r2, #0
 1689 0056 DA67     		str	r2, [r3, #124]
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1690              		.loc 1 1303 0 discriminator 2
 1691 0058 FB68     		ldr	r3, [r7, #12]
 1692 005a 2122     		movs	r2, #33
 1693 005c 5A67     		str	r2, [r3, #116]
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1694              		.loc 1 1305 0 discriminator 2
 1695 005e FB68     		ldr	r3, [r7, #12]
 1696 0060 9B6E     		ldr	r3, [r3, #104]
 1697 0062 002B     		cmp	r3, #0
 1698 0064 2AD0     		beq	.L106
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1699              		.loc 1 1308 0
 1700 0066 FB68     		ldr	r3, [r7, #12]
 1701 0068 9B6E     		ldr	r3, [r3, #104]
 1702 006a 204A     		ldr	r2, .L107
 1703 006c 9A62     		str	r2, [r3, #40]
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1704              		.loc 1 1311 0
 1705 006e FB68     		ldr	r3, [r7, #12]
 1706 0070 9B6E     		ldr	r3, [r3, #104]
 1707 0072 1F4A     		ldr	r2, .L107+4
 1708 0074 DA62     		str	r2, [r3, #44]
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA error callback */
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1709              		.loc 1 1314 0
 1710 0076 FB68     		ldr	r3, [r7, #12]
 1711 0078 9B6E     		ldr	r3, [r3, #104]
 1712 007a 1E4A     		ldr	r2, .L107+8
 1713 007c 1A63     		str	r2, [r3, #48]
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA abort callback */
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1714              		.loc 1 1317 0
 1715 007e FB68     		ldr	r3, [r7, #12]
 1716 0080 9B6E     		ldr	r3, [r3, #104]
 1717 0082 0022     		movs	r2, #0
 1718 0084 5A63     		str	r2, [r3, #52]
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1719              		.loc 1 1320 0
 1720 0086 FB68     		ldr	r3, [r7, #12]
 1721 0088 986E     		ldr	r0, [r3, #104]
 1722 008a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccfCzef7.s 			page 54


 1723 008c DB6C     		ldr	r3, [r3, #76]
 1724 008e 1946     		mov	r1, r3
 1725 0090 FB68     		ldr	r3, [r7, #12]
 1726 0092 1B68     		ldr	r3, [r3]
 1727 0094 2833     		adds	r3, r3, #40
 1728 0096 1A46     		mov	r2, r3
 1729 0098 FB88     		ldrh	r3, [r7, #6]
 1730 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1731 009e 0346     		mov	r3, r0
 1732 00a0 002B     		cmp	r3, #0
 1733 00a2 0BD0     		beq	.L106
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Set error code to DMA */
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1734              		.loc 1 1323 0
 1735 00a4 FB68     		ldr	r3, [r7, #12]
 1736 00a6 1022     		movs	r2, #16
 1737 00a8 DA67     		str	r2, [r3, #124]
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1738              		.loc 1 1325 0
 1739 00aa FB68     		ldr	r3, [r7, #12]
 1740 00ac 0022     		movs	r2, #0
 1741 00ae 83F87020 		strb	r2, [r3, #112]
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Restore huart->gState to ready */
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1742              		.loc 1 1328 0
 1743 00b2 FB68     		ldr	r3, [r7, #12]
 1744 00b4 2022     		movs	r2, #32
 1745 00b6 5A67     		str	r2, [r3, #116]
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_ERROR;
 1746              		.loc 1 1330 0
 1747 00b8 0123     		movs	r3, #1
 1748 00ba 12E0     		b	.L104
 1749              	.L106:
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1750              		.loc 1 1334 0
 1751 00bc FB68     		ldr	r3, [r7, #12]
 1752 00be 1B68     		ldr	r3, [r3]
 1753 00c0 4022     		movs	r2, #64
 1754 00c2 1A62     		str	r2, [r3, #32]
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1755              		.loc 1 1336 0
 1756 00c4 FB68     		ldr	r3, [r7, #12]
 1757 00c6 0022     		movs	r2, #0
 1758 00c8 83F87020 		strb	r2, [r3, #112]
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in the UART CR3 register */
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1759              		.loc 1 1340 0
ARM GAS  /tmp/ccfCzef7.s 			page 55


 1760 00cc FB68     		ldr	r3, [r7, #12]
 1761 00ce 1B68     		ldr	r3, [r3]
 1762 00d0 9A68     		ldr	r2, [r3, #8]
 1763 00d2 FB68     		ldr	r3, [r7, #12]
 1764 00d4 1B68     		ldr	r3, [r3]
 1765 00d6 42F08002 		orr	r2, r2, #128
 1766 00da 9A60     		str	r2, [r3, #8]
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1767              		.loc 1 1342 0
 1768 00dc 0023     		movs	r3, #0
 1769 00de 00E0     		b	.L104
 1770              	.L101:
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1771              		.loc 1 1346 0
 1772 00e0 0223     		movs	r3, #2
 1773              	.L104:
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1774              		.loc 1 1348 0
 1775 00e2 1846     		mov	r0, r3
 1776 00e4 1037     		adds	r7, r7, #16
 1777              	.LCFI62:
 1778              		.cfi_def_cfa_offset 8
 1779 00e6 BD46     		mov	sp, r7
 1780              	.LCFI63:
 1781              		.cfi_def_cfa_register 13
 1782              		@ sp needed
 1783 00e8 80BD     		pop	{r7, pc}
 1784              	.L108:
 1785 00ea 00BF     		.align	2
 1786              	.L107:
 1787 00ec 00000000 		.word	UART_DMATransmitCplt
 1788 00f0 00000000 		.word	UART_DMATxHalfCplt
 1789 00f4 00000000 		.word	UART_DMAError
 1790              		.cfi_endproc
 1791              	.LFE134:
 1793              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1794              		.align	1
 1795              		.global	HAL_UART_Receive_DMA
 1796              		.syntax unified
 1797              		.thumb
 1798              		.thumb_func
 1799              		.fpu fpv4-sp-d16
 1801              	HAL_UART_Receive_DMA:
 1802              	.LFB135:
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
ARM GAS  /tmp/ccfCzef7.s 			page 56


1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1803              		.loc 1 1363 0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 16
 1806              		@ frame_needed = 1, uses_anonymous_args = 0
 1807 0000 80B5     		push	{r7, lr}
 1808              	.LCFI64:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 84B0     		sub	sp, sp, #16
 1813              	.LCFI65:
 1814              		.cfi_def_cfa_offset 24
 1815 0004 00AF     		add	r7, sp, #0
 1816              	.LCFI66:
 1817              		.cfi_def_cfa_register 7
 1818 0006 F860     		str	r0, [r7, #12]
 1819 0008 B960     		str	r1, [r7, #8]
 1820 000a 1346     		mov	r3, r2
 1821 000c FB80     		strh	r3, [r7, #6]	@ movhi
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1822              		.loc 1 1365 0
 1823 000e FB68     		ldr	r3, [r7, #12]
 1824 0010 9B6F     		ldr	r3, [r3, #120]
 1825 0012 202B     		cmp	r3, #32
 1826 0014 6CD1     		bne	.L110
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1827              		.loc 1 1367 0
 1828 0016 BB68     		ldr	r3, [r7, #8]
 1829 0018 002B     		cmp	r3, #0
 1830 001a 02D0     		beq	.L111
 1831              		.loc 1 1367 0 is_stmt 0 discriminator 1
 1832 001c FB88     		ldrh	r3, [r7, #6]
 1833 001e 002B     		cmp	r3, #0
 1834 0020 01D1     		bne	.L112
 1835              	.L111:
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 1836              		.loc 1 1369 0 is_stmt 1
 1837 0022 0123     		movs	r3, #1
 1838 0024 65E0     		b	.L113
 1839              	.L112:
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1840              		.loc 1 1372 0
 1841 0026 FB68     		ldr	r3, [r7, #12]
 1842 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1843 002c 012B     		cmp	r3, #1
ARM GAS  /tmp/ccfCzef7.s 			page 57


 1844 002e 01D1     		bne	.L114
 1845              		.loc 1 1372 0 is_stmt 0 discriminator 1
 1846 0030 0223     		movs	r3, #2
 1847 0032 5EE0     		b	.L113
 1848              	.L114:
 1849              		.loc 1 1372 0 discriminator 2
 1850 0034 FB68     		ldr	r3, [r7, #12]
 1851 0036 0122     		movs	r2, #1
 1852 0038 83F87020 		strb	r2, [r3, #112]
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1853              		.loc 1 1374 0 is_stmt 1 discriminator 2
 1854 003c FB68     		ldr	r3, [r7, #12]
 1855 003e BA68     		ldr	r2, [r7, #8]
 1856 0040 5A65     		str	r2, [r3, #84]
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 1857              		.loc 1 1375 0 discriminator 2
 1858 0042 FB68     		ldr	r3, [r7, #12]
 1859 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1860 0046 A3F85820 		strh	r2, [r3, #88]	@ movhi
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1861              		.loc 1 1377 0 discriminator 2
 1862 004a FB68     		ldr	r3, [r7, #12]
 1863 004c 0022     		movs	r2, #0
 1864 004e DA67     		str	r2, [r3, #124]
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1865              		.loc 1 1378 0 discriminator 2
 1866 0050 FB68     		ldr	r3, [r7, #12]
 1867 0052 2222     		movs	r2, #34
 1868 0054 9A67     		str	r2, [r3, #120]
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 1869              		.loc 1 1380 0 discriminator 2
 1870 0056 FB68     		ldr	r3, [r7, #12]
 1871 0058 DB6E     		ldr	r3, [r3, #108]
 1872 005a 002B     		cmp	r3, #0
 1873 005c 2AD0     		beq	.L115
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1874              		.loc 1 1383 0
 1875 005e FB68     		ldr	r3, [r7, #12]
 1876 0060 DB6E     		ldr	r3, [r3, #108]
 1877 0062 264A     		ldr	r2, .L116
 1878 0064 9A62     		str	r2, [r3, #40]
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1879              		.loc 1 1386 0
 1880 0066 FB68     		ldr	r3, [r7, #12]
 1881 0068 DB6E     		ldr	r3, [r3, #108]
 1882 006a 254A     		ldr	r2, .L116+4
 1883 006c DA62     		str	r2, [r3, #44]
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA error callback */
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
ARM GAS  /tmp/ccfCzef7.s 			page 58


 1884              		.loc 1 1389 0
 1885 006e FB68     		ldr	r3, [r7, #12]
 1886 0070 DB6E     		ldr	r3, [r3, #108]
 1887 0072 244A     		ldr	r2, .L116+8
 1888 0074 1A63     		str	r2, [r3, #48]
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA abort callback */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 1889              		.loc 1 1392 0
 1890 0076 FB68     		ldr	r3, [r7, #12]
 1891 0078 DB6E     		ldr	r3, [r3, #108]
 1892 007a 0022     		movs	r2, #0
 1893 007c 5A63     		str	r2, [r3, #52]
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the DMA channel */
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
 1894              		.loc 1 1395 0
 1895 007e FB68     		ldr	r3, [r7, #12]
 1896 0080 D86E     		ldr	r0, [r3, #108]
 1897 0082 FB68     		ldr	r3, [r7, #12]
 1898 0084 1B68     		ldr	r3, [r3]
 1899 0086 2433     		adds	r3, r3, #36
 1900 0088 1946     		mov	r1, r3
 1901 008a FB68     		ldr	r3, [r7, #12]
 1902 008c 5B6D     		ldr	r3, [r3, #84]
 1903 008e 1A46     		mov	r2, r3
 1904 0090 FB88     		ldrh	r3, [r7, #6]
 1905 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1906 0096 0346     		mov	r3, r0
 1907 0098 002B     		cmp	r3, #0
 1908 009a 0BD0     		beq	.L115
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Set error code to DMA */
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1909              		.loc 1 1398 0
 1910 009c FB68     		ldr	r3, [r7, #12]
 1911 009e 1022     		movs	r2, #16
 1912 00a0 DA67     		str	r2, [r3, #124]
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1913              		.loc 1 1400 0
 1914 00a2 FB68     		ldr	r3, [r7, #12]
 1915 00a4 0022     		movs	r2, #0
 1916 00a6 83F87020 		strb	r2, [r3, #112]
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Restore huart->gState to ready */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1917              		.loc 1 1403 0
 1918 00aa FB68     		ldr	r3, [r7, #12]
 1919 00ac 2022     		movs	r2, #32
 1920 00ae 5A67     		str	r2, [r3, #116]
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_ERROR;
 1921              		.loc 1 1405 0
 1922 00b0 0123     		movs	r3, #1
 1923 00b2 1EE0     		b	.L113
 1924              	.L115:
ARM GAS  /tmp/ccfCzef7.s 			page 59


1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1925              		.loc 1 1408 0
 1926 00b4 FB68     		ldr	r3, [r7, #12]
 1927 00b6 0022     		movs	r2, #0
 1928 00b8 83F87020 		strb	r2, [r3, #112]
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1929              		.loc 1 1411 0
 1930 00bc FB68     		ldr	r3, [r7, #12]
 1931 00be 1B68     		ldr	r3, [r3]
 1932 00c0 1A68     		ldr	r2, [r3]
 1933 00c2 FB68     		ldr	r3, [r7, #12]
 1934 00c4 1B68     		ldr	r3, [r3]
 1935 00c6 42F48072 		orr	r2, r2, #256
 1936 00ca 1A60     		str	r2, [r3]
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1937              		.loc 1 1414 0
 1938 00cc FB68     		ldr	r3, [r7, #12]
 1939 00ce 1B68     		ldr	r3, [r3]
 1940 00d0 9A68     		ldr	r2, [r3, #8]
 1941 00d2 FB68     		ldr	r3, [r7, #12]
 1942 00d4 1B68     		ldr	r3, [r3]
 1943 00d6 42F00102 		orr	r2, r2, #1
 1944 00da 9A60     		str	r2, [r3, #8]
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in the UART CR3 register */
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1945              		.loc 1 1418 0
 1946 00dc FB68     		ldr	r3, [r7, #12]
 1947 00de 1B68     		ldr	r3, [r3]
 1948 00e0 9A68     		ldr	r2, [r3, #8]
 1949 00e2 FB68     		ldr	r3, [r7, #12]
 1950 00e4 1B68     		ldr	r3, [r3]
 1951 00e6 42F04002 		orr	r2, r2, #64
 1952 00ea 9A60     		str	r2, [r3, #8]
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1953              		.loc 1 1420 0
 1954 00ec 0023     		movs	r3, #0
 1955 00ee 00E0     		b	.L113
 1956              	.L110:
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 1957              		.loc 1 1424 0
 1958 00f0 0223     		movs	r3, #2
 1959              	.L113:
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1960              		.loc 1 1426 0
ARM GAS  /tmp/ccfCzef7.s 			page 60


 1961 00f2 1846     		mov	r0, r3
 1962 00f4 1037     		adds	r7, r7, #16
 1963              	.LCFI67:
 1964              		.cfi_def_cfa_offset 8
 1965 00f6 BD46     		mov	sp, r7
 1966              	.LCFI68:
 1967              		.cfi_def_cfa_register 13
 1968              		@ sp needed
 1969 00f8 80BD     		pop	{r7, pc}
 1970              	.L117:
 1971 00fa 00BF     		.align	2
 1972              	.L116:
 1973 00fc 00000000 		.word	UART_DMAReceiveCplt
 1974 0100 00000000 		.word	UART_DMARxHalfCplt
 1975 0104 00000000 		.word	UART_DMAError
 1976              		.cfi_endproc
 1977              	.LFE135:
 1979              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1980              		.align	1
 1981              		.global	HAL_UART_DMAPause
 1982              		.syntax unified
 1983              		.thumb
 1984              		.thumb_func
 1985              		.fpu fpv4-sp-d16
 1987              	HAL_UART_DMAPause:
 1988              	.LFB136:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1989              		.loc 1 1434 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 16
 1992              		@ frame_needed = 1, uses_anonymous_args = 0
 1993              		@ link register save eliminated.
 1994 0000 80B4     		push	{r7}
 1995              	.LCFI69:
 1996              		.cfi_def_cfa_offset 4
 1997              		.cfi_offset 7, -4
 1998 0002 85B0     		sub	sp, sp, #20
 1999              	.LCFI70:
 2000              		.cfi_def_cfa_offset 24
 2001 0004 00AF     		add	r7, sp, #0
 2002              	.LCFI71:
 2003              		.cfi_def_cfa_register 7
 2004 0006 7860     		str	r0, [r7, #4]
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2005              		.loc 1 1435 0
 2006 0008 7B68     		ldr	r3, [r7, #4]
 2007 000a 5B6F     		ldr	r3, [r3, #116]
 2008 000c FB60     		str	r3, [r7, #12]
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2009              		.loc 1 1436 0
ARM GAS  /tmp/ccfCzef7.s 			page 61


 2010 000e 7B68     		ldr	r3, [r7, #4]
 2011 0010 9B6F     		ldr	r3, [r3, #120]
 2012 0012 BB60     		str	r3, [r7, #8]
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 2013              		.loc 1 1438 0
 2014 0014 7B68     		ldr	r3, [r7, #4]
 2015 0016 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 2016 001a 012B     		cmp	r3, #1
 2017 001c 01D1     		bne	.L119
 2018              		.loc 1 1438 0 is_stmt 0 discriminator 1
 2019 001e 0223     		movs	r3, #2
 2020 0020 3CE0     		b	.L120
 2021              	.L119:
 2022              		.loc 1 1438 0 discriminator 2
 2023 0022 7B68     		ldr	r3, [r7, #4]
 2024 0024 0122     		movs	r2, #1
 2025 0026 83F87020 		strb	r2, [r3, #112]
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2026              		.loc 1 1440 0 is_stmt 1 discriminator 2
 2027 002a 7B68     		ldr	r3, [r7, #4]
 2028 002c 1B68     		ldr	r3, [r3]
 2029 002e 9B68     		ldr	r3, [r3, #8]
 2030 0030 03F08003 		and	r3, r3, #128
 2031 0034 802B     		cmp	r3, #128
 2032 0036 0AD1     		bne	.L121
 2033              		.loc 1 1440 0 is_stmt 0 discriminator 1
 2034 0038 FB68     		ldr	r3, [r7, #12]
 2035 003a 212B     		cmp	r3, #33
 2036 003c 07D1     		bne	.L121
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2037              		.loc 1 1444 0 is_stmt 1
 2038 003e 7B68     		ldr	r3, [r7, #4]
 2039 0040 1B68     		ldr	r3, [r3]
 2040 0042 9A68     		ldr	r2, [r3, #8]
 2041 0044 7B68     		ldr	r3, [r7, #4]
 2042 0046 1B68     		ldr	r3, [r3]
 2043 0048 22F08002 		bic	r2, r2, #128
 2044 004c 9A60     		str	r2, [r3, #8]
 2045              	.L121:
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2046              		.loc 1 1446 0
 2047 004e 7B68     		ldr	r3, [r7, #4]
 2048 0050 1B68     		ldr	r3, [r3]
 2049 0052 9B68     		ldr	r3, [r3, #8]
 2050 0054 03F04003 		and	r3, r3, #64
 2051 0058 402B     		cmp	r3, #64
 2052 005a 1AD1     		bne	.L122
 2053              		.loc 1 1446 0 is_stmt 0 discriminator 1
 2054 005c BB68     		ldr	r3, [r7, #8]
 2055 005e 222B     		cmp	r3, #34
 2056 0060 17D1     		bne	.L122
ARM GAS  /tmp/ccfCzef7.s 			page 62


1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2057              		.loc 1 1450 0 is_stmt 1
 2058 0062 7B68     		ldr	r3, [r7, #4]
 2059 0064 1B68     		ldr	r3, [r3]
 2060 0066 1A68     		ldr	r2, [r3]
 2061 0068 7B68     		ldr	r3, [r7, #4]
 2062 006a 1B68     		ldr	r3, [r3]
 2063 006c 22F48072 		bic	r2, r2, #256
 2064 0070 1A60     		str	r2, [r3]
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2065              		.loc 1 1451 0
 2066 0072 7B68     		ldr	r3, [r7, #4]
 2067 0074 1B68     		ldr	r3, [r3]
 2068 0076 9A68     		ldr	r2, [r3, #8]
 2069 0078 7B68     		ldr	r3, [r7, #4]
 2070 007a 1B68     		ldr	r3, [r3]
 2071 007c 22F00102 		bic	r2, r2, #1
 2072 0080 9A60     		str	r2, [r3, #8]
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2073              		.loc 1 1454 0
 2074 0082 7B68     		ldr	r3, [r7, #4]
 2075 0084 1B68     		ldr	r3, [r3]
 2076 0086 9A68     		ldr	r2, [r3, #8]
 2077 0088 7B68     		ldr	r3, [r7, #4]
 2078 008a 1B68     		ldr	r3, [r3]
 2079 008c 22F04002 		bic	r2, r2, #64
 2080 0090 9A60     		str	r2, [r3, #8]
 2081              	.L122:
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2082              		.loc 1 1457 0
 2083 0092 7B68     		ldr	r3, [r7, #4]
 2084 0094 0022     		movs	r2, #0
 2085 0096 83F87020 		strb	r2, [r3, #112]
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2086              		.loc 1 1459 0
 2087 009a 0023     		movs	r3, #0
 2088              	.L120:
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2089              		.loc 1 1460 0
 2090 009c 1846     		mov	r0, r3
 2091 009e 1437     		adds	r7, r7, #20
 2092              	.LCFI72:
 2093              		.cfi_def_cfa_offset 4
 2094 00a0 BD46     		mov	sp, r7
 2095              	.LCFI73:
 2096              		.cfi_def_cfa_register 13
 2097              		@ sp needed
 2098 00a2 5DF8047B 		ldr	r7, [sp], #4
 2099              	.LCFI74:
ARM GAS  /tmp/ccfCzef7.s 			page 63


 2100              		.cfi_restore 7
 2101              		.cfi_def_cfa_offset 0
 2102 00a6 7047     		bx	lr
 2103              		.cfi_endproc
 2104              	.LFE136:
 2106              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2107              		.align	1
 2108              		.global	HAL_UART_DMAResume
 2109              		.syntax unified
 2110              		.thumb
 2111              		.thumb_func
 2112              		.fpu fpv4-sp-d16
 2114              	HAL_UART_DMAResume:
 2115              	.LFB137:
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2116              		.loc 1 1468 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 8
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120              		@ link register save eliminated.
 2121 0000 80B4     		push	{r7}
 2122              	.LCFI75:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 7, -4
 2125 0002 83B0     		sub	sp, sp, #12
 2126              	.LCFI76:
 2127              		.cfi_def_cfa_offset 16
 2128 0004 00AF     		add	r7, sp, #0
 2129              	.LCFI77:
 2130              		.cfi_def_cfa_register 7
 2131 0006 7860     		str	r0, [r7, #4]
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 2132              		.loc 1 1469 0
 2133 0008 7B68     		ldr	r3, [r7, #4]
 2134 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 2135 000e 012B     		cmp	r3, #1
 2136 0010 01D1     		bne	.L124
 2137              		.loc 1 1469 0 is_stmt 0 discriminator 1
 2138 0012 0223     		movs	r3, #2
 2139 0014 34E0     		b	.L125
 2140              	.L124:
 2141              		.loc 1 1469 0 discriminator 2
 2142 0016 7B68     		ldr	r3, [r7, #4]
 2143 0018 0122     		movs	r2, #1
 2144 001a 83F87020 		strb	r2, [r3, #112]
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2145              		.loc 1 1471 0 is_stmt 1 discriminator 2
 2146 001e 7B68     		ldr	r3, [r7, #4]
 2147 0020 5B6F     		ldr	r3, [r3, #116]
ARM GAS  /tmp/ccfCzef7.s 			page 64


 2148 0022 212B     		cmp	r3, #33
 2149 0024 07D1     		bne	.L126
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2150              		.loc 1 1474 0
 2151 0026 7B68     		ldr	r3, [r7, #4]
 2152 0028 1B68     		ldr	r3, [r3]
 2153 002a 9A68     		ldr	r2, [r3, #8]
 2154 002c 7B68     		ldr	r3, [r7, #4]
 2155 002e 1B68     		ldr	r3, [r3]
 2156 0030 42F08002 		orr	r2, r2, #128
 2157 0034 9A60     		str	r2, [r3, #8]
 2158              	.L126:
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2159              		.loc 1 1476 0
 2160 0036 7B68     		ldr	r3, [r7, #4]
 2161 0038 9B6F     		ldr	r3, [r3, #120]
 2162 003a 222B     		cmp	r3, #34
 2163 003c 1BD1     		bne	.L127
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2164              		.loc 1 1479 0
 2165 003e 7B68     		ldr	r3, [r7, #4]
 2166 0040 1B68     		ldr	r3, [r3]
 2167 0042 0822     		movs	r2, #8
 2168 0044 1A62     		str	r2, [r3, #32]
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2169              		.loc 1 1482 0
 2170 0046 7B68     		ldr	r3, [r7, #4]
 2171 0048 1B68     		ldr	r3, [r3]
 2172 004a 1A68     		ldr	r2, [r3]
 2173 004c 7B68     		ldr	r3, [r7, #4]
 2174 004e 1B68     		ldr	r3, [r3]
 2175 0050 42F48072 		orr	r2, r2, #256
 2176 0054 1A60     		str	r2, [r3]
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2177              		.loc 1 1483 0
 2178 0056 7B68     		ldr	r3, [r7, #4]
 2179 0058 1B68     		ldr	r3, [r3]
 2180 005a 9A68     		ldr	r2, [r3, #8]
 2181 005c 7B68     		ldr	r3, [r7, #4]
 2182 005e 1B68     		ldr	r3, [r3]
 2183 0060 42F00102 		orr	r2, r2, #1
 2184 0064 9A60     		str	r2, [r3, #8]
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2185              		.loc 1 1486 0
 2186 0066 7B68     		ldr	r3, [r7, #4]
 2187 0068 1B68     		ldr	r3, [r3]
 2188 006a 9A68     		ldr	r2, [r3, #8]
 2189 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 65


 2190 006e 1B68     		ldr	r3, [r3]
 2191 0070 42F04002 		orr	r2, r2, #64
 2192 0074 9A60     		str	r2, [r3, #8]
 2193              	.L127:
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2194              		.loc 1 1489 0
 2195 0076 7B68     		ldr	r3, [r7, #4]
 2196 0078 0022     		movs	r2, #0
 2197 007a 83F87020 		strb	r2, [r3, #112]
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2198              		.loc 1 1491 0
 2199 007e 0023     		movs	r3, #0
 2200              	.L125:
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2201              		.loc 1 1492 0
 2202 0080 1846     		mov	r0, r3
 2203 0082 0C37     		adds	r7, r7, #12
 2204              	.LCFI78:
 2205              		.cfi_def_cfa_offset 4
 2206 0084 BD46     		mov	sp, r7
 2207              	.LCFI79:
 2208              		.cfi_def_cfa_register 13
 2209              		@ sp needed
 2210 0086 5DF8047B 		ldr	r7, [sp], #4
 2211              	.LCFI80:
 2212              		.cfi_restore 7
 2213              		.cfi_def_cfa_offset 0
 2214 008a 7047     		bx	lr
 2215              		.cfi_endproc
 2216              	.LFE137:
 2218              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2219              		.align	1
 2220              		.global	HAL_UART_DMAStop
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2224              		.fpu fpv4-sp-d16
 2226              	HAL_UART_DMAStop:
 2227              	.LFB138:
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2228              		.loc 1 1500 0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 16
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232 0000 80B5     		push	{r7, lr}
 2233              	.LCFI81:
 2234              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfCzef7.s 			page 66


 2235              		.cfi_offset 7, -8
 2236              		.cfi_offset 14, -4
 2237 0002 84B0     		sub	sp, sp, #16
 2238              	.LCFI82:
 2239              		.cfi_def_cfa_offset 24
 2240 0004 00AF     		add	r7, sp, #0
 2241              	.LCFI83:
 2242              		.cfi_def_cfa_register 7
 2243 0006 7860     		str	r0, [r7, #4]
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2244              		.loc 1 1508 0
 2245 0008 7B68     		ldr	r3, [r7, #4]
 2246 000a 5B6F     		ldr	r3, [r3, #116]
 2247 000c FB60     		str	r3, [r7, #12]
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2248              		.loc 1 1509 0
 2249 000e 7B68     		ldr	r3, [r7, #4]
 2250 0010 9B6F     		ldr	r3, [r3, #120]
 2251 0012 BB60     		str	r3, [r7, #8]
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2252              		.loc 1 1512 0
 2253 0014 7B68     		ldr	r3, [r7, #4]
 2254 0016 1B68     		ldr	r3, [r3]
 2255 0018 9B68     		ldr	r3, [r3, #8]
 2256 001a 03F08003 		and	r3, r3, #128
 2257 001e 802B     		cmp	r3, #128
 2258 0020 26D1     		bne	.L129
 2259              		.loc 1 1512 0 is_stmt 0 discriminator 1
 2260 0022 FB68     		ldr	r3, [r7, #12]
 2261 0024 212B     		cmp	r3, #33
 2262 0026 23D1     		bne	.L129
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2263              		.loc 1 1515 0 is_stmt 1
 2264 0028 7B68     		ldr	r3, [r7, #4]
 2265 002a 1B68     		ldr	r3, [r3]
 2266 002c 9A68     		ldr	r2, [r3, #8]
 2267 002e 7B68     		ldr	r3, [r7, #4]
 2268 0030 1B68     		ldr	r3, [r3]
 2269 0032 22F08002 		bic	r2, r2, #128
 2270 0036 9A60     		str	r2, [r3, #8]
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2271              		.loc 1 1518 0
 2272 0038 7B68     		ldr	r3, [r7, #4]
 2273 003a 9B6E     		ldr	r3, [r3, #104]
ARM GAS  /tmp/ccfCzef7.s 			page 67


 2274 003c 002B     		cmp	r3, #0
 2275 003e 14D0     		beq	.L130
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2276              		.loc 1 1520 0
 2277 0040 7B68     		ldr	r3, [r7, #4]
 2278 0042 9B6E     		ldr	r3, [r3, #104]
 2279 0044 1846     		mov	r0, r3
 2280 0046 FFF7FEFF 		bl	HAL_DMA_Abort
 2281 004a 0346     		mov	r3, r0
 2282 004c 002B     		cmp	r3, #0
 2283 004e 0CD0     		beq	.L130
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2284              		.loc 1 1522 0
 2285 0050 7B68     		ldr	r3, [r7, #4]
 2286 0052 9B6E     		ldr	r3, [r3, #104]
 2287 0054 1846     		mov	r0, r3
 2288 0056 FFF7FEFF 		bl	HAL_DMA_GetError
 2289 005a 0346     		mov	r3, r0
 2290 005c 202B     		cmp	r3, #32
 2291 005e 04D1     		bne	.L130
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2292              		.loc 1 1525 0
 2293 0060 7B68     		ldr	r3, [r7, #4]
 2294 0062 1022     		movs	r2, #16
 2295 0064 DA67     		str	r2, [r3, #124]
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2296              		.loc 1 1527 0
 2297 0066 0323     		movs	r3, #3
 2298 0068 31E0     		b	.L131
 2299              	.L130:
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2300              		.loc 1 1532 0
 2301 006a 7868     		ldr	r0, [r7, #4]
 2302 006c FFF7FEFF 		bl	UART_EndTxTransfer
 2303              	.L129:
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2304              		.loc 1 1536 0
 2305 0070 7B68     		ldr	r3, [r7, #4]
 2306 0072 1B68     		ldr	r3, [r3]
 2307 0074 9B68     		ldr	r3, [r3, #8]
 2308 0076 03F04003 		and	r3, r3, #64
 2309 007a 402B     		cmp	r3, #64
 2310 007c 26D1     		bne	.L132
 2311              		.loc 1 1536 0 is_stmt 0 discriminator 1
 2312 007e BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccfCzef7.s 			page 68


 2313 0080 222B     		cmp	r3, #34
 2314 0082 23D1     		bne	.L132
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2315              		.loc 1 1539 0 is_stmt 1
 2316 0084 7B68     		ldr	r3, [r7, #4]
 2317 0086 1B68     		ldr	r3, [r3]
 2318 0088 9A68     		ldr	r2, [r3, #8]
 2319 008a 7B68     		ldr	r3, [r7, #4]
 2320 008c 1B68     		ldr	r3, [r3]
 2321 008e 22F04002 		bic	r2, r2, #64
 2322 0092 9A60     		str	r2, [r3, #8]
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2323              		.loc 1 1542 0
 2324 0094 7B68     		ldr	r3, [r7, #4]
 2325 0096 DB6E     		ldr	r3, [r3, #108]
 2326 0098 002B     		cmp	r3, #0
 2327 009a 14D0     		beq	.L133
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2328              		.loc 1 1544 0
 2329 009c 7B68     		ldr	r3, [r7, #4]
 2330 009e DB6E     		ldr	r3, [r3, #108]
 2331 00a0 1846     		mov	r0, r3
 2332 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2333 00a6 0346     		mov	r3, r0
 2334 00a8 002B     		cmp	r3, #0
 2335 00aa 0CD0     		beq	.L133
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2336              		.loc 1 1546 0
 2337 00ac 7B68     		ldr	r3, [r7, #4]
 2338 00ae DB6E     		ldr	r3, [r3, #108]
 2339 00b0 1846     		mov	r0, r3
 2340 00b2 FFF7FEFF 		bl	HAL_DMA_GetError
 2341 00b6 0346     		mov	r3, r0
 2342 00b8 202B     		cmp	r3, #32
 2343 00ba 04D1     		bne	.L133
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2344              		.loc 1 1549 0
 2345 00bc 7B68     		ldr	r3, [r7, #4]
 2346 00be 1022     		movs	r2, #16
 2347 00c0 DA67     		str	r2, [r3, #124]
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2348              		.loc 1 1551 0
 2349 00c2 0323     		movs	r3, #3
 2350 00c4 03E0     		b	.L131
 2351              	.L133:
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/ccfCzef7.s 			page 69


1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2352              		.loc 1 1556 0
 2353 00c6 7868     		ldr	r0, [r7, #4]
 2354 00c8 FFF7FEFF 		bl	UART_EndRxTransfer
 2355              	.L132:
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2356              		.loc 1 1559 0
 2357 00cc 0023     		movs	r3, #0
 2358              	.L131:
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2359              		.loc 1 1560 0
 2360 00ce 1846     		mov	r0, r3
 2361 00d0 1037     		adds	r7, r7, #16
 2362              	.LCFI84:
 2363              		.cfi_def_cfa_offset 8
 2364 00d2 BD46     		mov	sp, r7
 2365              	.LCFI85:
 2366              		.cfi_def_cfa_register 13
 2367              		@ sp needed
 2368 00d4 80BD     		pop	{r7, pc}
 2369              		.cfi_endproc
 2370              	.LFE138:
 2372              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2373              		.align	1
 2374              		.global	HAL_UART_Abort
 2375              		.syntax unified
 2376              		.thumb
 2377              		.thumb_func
 2378              		.fpu fpv4-sp-d16
 2380              	HAL_UART_Abort:
 2381              	.LFB139:
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2382              		.loc 1 1575 0
 2383              		.cfi_startproc
 2384              		@ args = 0, pretend = 0, frame = 8
 2385              		@ frame_needed = 1, uses_anonymous_args = 0
 2386 0000 80B5     		push	{r7, lr}
 2387              	.LCFI86:
 2388              		.cfi_def_cfa_offset 8
 2389              		.cfi_offset 7, -8
ARM GAS  /tmp/ccfCzef7.s 			page 70


 2390              		.cfi_offset 14, -4
 2391 0002 82B0     		sub	sp, sp, #8
 2392              	.LCFI87:
 2393              		.cfi_def_cfa_offset 16
 2394 0004 00AF     		add	r7, sp, #0
 2395              	.LCFI88:
 2396              		.cfi_def_cfa_register 7
 2397 0006 7860     		str	r0, [r7, #4]
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2398              		.loc 1 1577 0
 2399 0008 7B68     		ldr	r3, [r7, #4]
 2400 000a 1B68     		ldr	r3, [r3]
 2401 000c 1A68     		ldr	r2, [r3]
 2402 000e 7B68     		ldr	r3, [r7, #4]
 2403 0010 1B68     		ldr	r3, [r3]
 2404 0012 22F4F072 		bic	r2, r2, #480
 2405 0016 1A60     		str	r2, [r3]
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2406              		.loc 1 1578 0
 2407 0018 7B68     		ldr	r3, [r7, #4]
 2408 001a 1B68     		ldr	r3, [r3]
 2409 001c 9A68     		ldr	r2, [r3, #8]
 2410 001e 7B68     		ldr	r3, [r7, #4]
 2411 0020 1B68     		ldr	r3, [r3]
 2412 0022 22F00102 		bic	r2, r2, #1
 2413 0026 9A60     		str	r2, [r3, #8]
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2414              		.loc 1 1581 0
 2415 0028 7B68     		ldr	r3, [r7, #4]
 2416 002a 1B68     		ldr	r3, [r3]
 2417 002c 9B68     		ldr	r3, [r3, #8]
 2418 002e 03F08003 		and	r3, r3, #128
 2419 0032 802B     		cmp	r3, #128
 2420 0034 24D1     		bne	.L135
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2421              		.loc 1 1583 0
 2422 0036 7B68     		ldr	r3, [r7, #4]
 2423 0038 1B68     		ldr	r3, [r3]
 2424 003a 9A68     		ldr	r2, [r3, #8]
 2425 003c 7B68     		ldr	r3, [r7, #4]
 2426 003e 1B68     		ldr	r3, [r3]
 2427 0040 22F08002 		bic	r2, r2, #128
 2428 0044 9A60     		str	r2, [r3, #8]
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2429              		.loc 1 1586 0
 2430 0046 7B68     		ldr	r3, [r7, #4]
 2431 0048 9B6E     		ldr	r3, [r3, #104]
 2432 004a 002B     		cmp	r3, #0
 2433 004c 18D0     		beq	.L135
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
ARM GAS  /tmp/ccfCzef7.s 			page 71


1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2434              		.loc 1 1590 0
 2435 004e 7B68     		ldr	r3, [r7, #4]
 2436 0050 9B6E     		ldr	r3, [r3, #104]
 2437 0052 0022     		movs	r2, #0
 2438 0054 5A63     		str	r2, [r3, #52]
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2439              		.loc 1 1592 0
 2440 0056 7B68     		ldr	r3, [r7, #4]
 2441 0058 9B6E     		ldr	r3, [r3, #104]
 2442 005a 1846     		mov	r0, r3
 2443 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2444 0060 0346     		mov	r3, r0
 2445 0062 002B     		cmp	r3, #0
 2446 0064 0CD0     		beq	.L135
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2447              		.loc 1 1594 0
 2448 0066 7B68     		ldr	r3, [r7, #4]
 2449 0068 9B6E     		ldr	r3, [r3, #104]
 2450 006a 1846     		mov	r0, r3
 2451 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2452 0070 0346     		mov	r3, r0
 2453 0072 202B     		cmp	r3, #32
 2454 0074 04D1     		bne	.L135
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2455              		.loc 1 1597 0
 2456 0076 7B68     		ldr	r3, [r7, #4]
 2457 0078 1022     		movs	r2, #16
 2458 007a DA67     		str	r2, [r3, #124]
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2459              		.loc 1 1599 0
 2460 007c 0323     		movs	r3, #3
 2461 007e 49E0     		b	.L136
 2462              	.L135:
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2463              		.loc 1 1606 0
 2464 0080 7B68     		ldr	r3, [r7, #4]
 2465 0082 1B68     		ldr	r3, [r3]
 2466 0084 9B68     		ldr	r3, [r3, #8]
 2467 0086 03F04003 		and	r3, r3, #64
 2468 008a 402B     		cmp	r3, #64
 2469 008c 24D1     		bne	.L137
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2470              		.loc 1 1608 0
ARM GAS  /tmp/ccfCzef7.s 			page 72


 2471 008e 7B68     		ldr	r3, [r7, #4]
 2472 0090 1B68     		ldr	r3, [r3]
 2473 0092 9A68     		ldr	r2, [r3, #8]
 2474 0094 7B68     		ldr	r3, [r7, #4]
 2475 0096 1B68     		ldr	r3, [r3]
 2476 0098 22F04002 		bic	r2, r2, #64
 2477 009c 9A60     		str	r2, [r3, #8]
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2478              		.loc 1 1611 0
 2479 009e 7B68     		ldr	r3, [r7, #4]
 2480 00a0 DB6E     		ldr	r3, [r3, #108]
 2481 00a2 002B     		cmp	r3, #0
 2482 00a4 18D0     		beq	.L137
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2483              		.loc 1 1615 0
 2484 00a6 7B68     		ldr	r3, [r7, #4]
 2485 00a8 DB6E     		ldr	r3, [r3, #108]
 2486 00aa 0022     		movs	r2, #0
 2487 00ac 5A63     		str	r2, [r3, #52]
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2488              		.loc 1 1617 0
 2489 00ae 7B68     		ldr	r3, [r7, #4]
 2490 00b0 DB6E     		ldr	r3, [r3, #108]
 2491 00b2 1846     		mov	r0, r3
 2492 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2493 00b8 0346     		mov	r3, r0
 2494 00ba 002B     		cmp	r3, #0
 2495 00bc 0CD0     		beq	.L137
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2496              		.loc 1 1619 0
 2497 00be 7B68     		ldr	r3, [r7, #4]
 2498 00c0 DB6E     		ldr	r3, [r3, #108]
 2499 00c2 1846     		mov	r0, r3
 2500 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2501 00c8 0346     		mov	r3, r0
 2502 00ca 202B     		cmp	r3, #32
 2503 00cc 04D1     		bne	.L137
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2504              		.loc 1 1622 0
 2505 00ce 7B68     		ldr	r3, [r7, #4]
 2506 00d0 1022     		movs	r2, #16
 2507 00d2 DA67     		str	r2, [r3, #124]
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2508              		.loc 1 1624 0
 2509 00d4 0323     		movs	r3, #3
 2510 00d6 1DE0     		b	.L136
 2511              	.L137:
ARM GAS  /tmp/ccfCzef7.s 			page 73


1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2512              		.loc 1 1631 0
 2513 00d8 7B68     		ldr	r3, [r7, #4]
 2514 00da 0022     		movs	r2, #0
 2515 00dc A3F85220 		strh	r2, [r3, #82]	@ movhi
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2516              		.loc 1 1632 0
 2517 00e0 7B68     		ldr	r3, [r7, #4]
 2518 00e2 0022     		movs	r2, #0
 2519 00e4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2520              		.loc 1 1635 0
 2521 00e8 7B68     		ldr	r3, [r7, #4]
 2522 00ea 1B68     		ldr	r3, [r3]
 2523 00ec 0F22     		movs	r2, #15
 2524 00ee 1A62     		str	r2, [r3, #32]
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2525              		.loc 1 1639 0
 2526 00f0 7B68     		ldr	r3, [r7, #4]
 2527 00f2 1B68     		ldr	r3, [r3]
 2528 00f4 9A69     		ldr	r2, [r3, #24]
 2529 00f6 7B68     		ldr	r3, [r7, #4]
 2530 00f8 1B68     		ldr	r3, [r3]
 2531 00fa 42F00802 		orr	r2, r2, #8
 2532 00fe 9A61     		str	r2, [r3, #24]
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2533              		.loc 1 1642 0
 2534 0100 7B68     		ldr	r3, [r7, #4]
 2535 0102 2022     		movs	r2, #32
 2536 0104 5A67     		str	r2, [r3, #116]
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2537              		.loc 1 1643 0
 2538 0106 7B68     		ldr	r3, [r7, #4]
 2539 0108 2022     		movs	r2, #32
 2540 010a 9A67     		str	r2, [r3, #120]
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2541              		.loc 1 1645 0
 2542 010c 7B68     		ldr	r3, [r7, #4]
 2543 010e 0022     		movs	r2, #0
 2544 0110 DA67     		str	r2, [r3, #124]
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2545              		.loc 1 1647 0
ARM GAS  /tmp/ccfCzef7.s 			page 74


 2546 0112 0023     		movs	r3, #0
 2547              	.L136:
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2548              		.loc 1 1648 0
 2549 0114 1846     		mov	r0, r3
 2550 0116 0837     		adds	r7, r7, #8
 2551              	.LCFI89:
 2552              		.cfi_def_cfa_offset 8
 2553 0118 BD46     		mov	sp, r7
 2554              	.LCFI90:
 2555              		.cfi_def_cfa_register 13
 2556              		@ sp needed
 2557 011a 80BD     		pop	{r7, pc}
 2558              		.cfi_endproc
 2559              	.LFE139:
 2561              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2562              		.align	1
 2563              		.global	HAL_UART_AbortTransmit
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2567              		.fpu fpv4-sp-d16
 2569              	HAL_UART_AbortTransmit:
 2570              	.LFB140:
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2571              		.loc 1 1663 0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 8
 2574              		@ frame_needed = 1, uses_anonymous_args = 0
 2575 0000 80B5     		push	{r7, lr}
 2576              	.LCFI91:
 2577              		.cfi_def_cfa_offset 8
 2578              		.cfi_offset 7, -8
 2579              		.cfi_offset 14, -4
 2580 0002 82B0     		sub	sp, sp, #8
 2581              	.LCFI92:
 2582              		.cfi_def_cfa_offset 16
 2583 0004 00AF     		add	r7, sp, #0
 2584              	.LCFI93:
 2585              		.cfi_def_cfa_register 7
 2586 0006 7860     		str	r0, [r7, #4]
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
ARM GAS  /tmp/ccfCzef7.s 			page 75


 2587              		.loc 1 1665 0
 2588 0008 7B68     		ldr	r3, [r7, #4]
 2589 000a 1B68     		ldr	r3, [r3]
 2590 000c 1A68     		ldr	r2, [r3]
 2591 000e 7B68     		ldr	r3, [r7, #4]
 2592 0010 1B68     		ldr	r3, [r3]
 2593 0012 22F0C002 		bic	r2, r2, #192
 2594 0016 1A60     		str	r2, [r3]
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2595              		.loc 1 1668 0
 2596 0018 7B68     		ldr	r3, [r7, #4]
 2597 001a 1B68     		ldr	r3, [r3]
 2598 001c 9B68     		ldr	r3, [r3, #8]
 2599 001e 03F08003 		and	r3, r3, #128
 2600 0022 802B     		cmp	r3, #128
 2601 0024 24D1     		bne	.L139
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2602              		.loc 1 1670 0
 2603 0026 7B68     		ldr	r3, [r7, #4]
 2604 0028 1B68     		ldr	r3, [r3]
 2605 002a 9A68     		ldr	r2, [r3, #8]
 2606 002c 7B68     		ldr	r3, [r7, #4]
 2607 002e 1B68     		ldr	r3, [r3]
 2608 0030 22F08002 		bic	r2, r2, #128
 2609 0034 9A60     		str	r2, [r3, #8]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2610              		.loc 1 1673 0
 2611 0036 7B68     		ldr	r3, [r7, #4]
 2612 0038 9B6E     		ldr	r3, [r3, #104]
 2613 003a 002B     		cmp	r3, #0
 2614 003c 18D0     		beq	.L139
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2615              		.loc 1 1677 0
 2616 003e 7B68     		ldr	r3, [r7, #4]
 2617 0040 9B6E     		ldr	r3, [r3, #104]
 2618 0042 0022     		movs	r2, #0
 2619 0044 5A63     		str	r2, [r3, #52]
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2620              		.loc 1 1679 0
 2621 0046 7B68     		ldr	r3, [r7, #4]
 2622 0048 9B6E     		ldr	r3, [r3, #104]
 2623 004a 1846     		mov	r0, r3
 2624 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2625 0050 0346     		mov	r3, r0
 2626 0052 002B     		cmp	r3, #0
 2627 0054 0CD0     		beq	.L139
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/ccfCzef7.s 			page 76


 2628              		.loc 1 1681 0
 2629 0056 7B68     		ldr	r3, [r7, #4]
 2630 0058 9B6E     		ldr	r3, [r3, #104]
 2631 005a 1846     		mov	r0, r3
 2632 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2633 0060 0346     		mov	r3, r0
 2634 0062 202B     		cmp	r3, #32
 2635 0064 04D1     		bne	.L139
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2636              		.loc 1 1684 0
 2637 0066 7B68     		ldr	r3, [r7, #4]
 2638 0068 1022     		movs	r2, #16
 2639 006a DA67     		str	r2, [r3, #124]
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2640              		.loc 1 1686 0
 2641 006c 0323     		movs	r3, #3
 2642 006e 07E0     		b	.L140
 2643              	.L139:
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2644              		.loc 1 1693 0
 2645 0070 7B68     		ldr	r3, [r7, #4]
 2646 0072 0022     		movs	r2, #0
 2647 0074 A3F85220 		strh	r2, [r3, #82]	@ movhi
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2648              		.loc 1 1697 0
 2649 0078 7B68     		ldr	r3, [r7, #4]
 2650 007a 2022     		movs	r2, #32
 2651 007c 5A67     		str	r2, [r3, #116]
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2652              		.loc 1 1699 0
 2653 007e 0023     		movs	r3, #0
 2654              	.L140:
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2655              		.loc 1 1700 0
 2656 0080 1846     		mov	r0, r3
 2657 0082 0837     		adds	r7, r7, #8
 2658              	.LCFI94:
 2659              		.cfi_def_cfa_offset 8
 2660 0084 BD46     		mov	sp, r7
 2661              	.LCFI95:
 2662              		.cfi_def_cfa_register 13
 2663              		@ sp needed
 2664 0086 80BD     		pop	{r7, pc}
 2665              		.cfi_endproc
ARM GAS  /tmp/ccfCzef7.s 			page 77


 2666              	.LFE140:
 2668              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2669              		.align	1
 2670              		.global	HAL_UART_AbortReceive
 2671              		.syntax unified
 2672              		.thumb
 2673              		.thumb_func
 2674              		.fpu fpv4-sp-d16
 2676              	HAL_UART_AbortReceive:
 2677              	.LFB141:
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2678              		.loc 1 1715 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 8
 2681              		@ frame_needed = 1, uses_anonymous_args = 0
 2682 0000 80B5     		push	{r7, lr}
 2683              	.LCFI96:
 2684              		.cfi_def_cfa_offset 8
 2685              		.cfi_offset 7, -8
 2686              		.cfi_offset 14, -4
 2687 0002 82B0     		sub	sp, sp, #8
 2688              	.LCFI97:
 2689              		.cfi_def_cfa_offset 16
 2690 0004 00AF     		add	r7, sp, #0
 2691              	.LCFI98:
 2692              		.cfi_def_cfa_register 7
 2693 0006 7860     		str	r0, [r7, #4]
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2694              		.loc 1 1717 0
 2695 0008 7B68     		ldr	r3, [r7, #4]
 2696 000a 1B68     		ldr	r3, [r3]
 2697 000c 1A68     		ldr	r2, [r3]
 2698 000e 7B68     		ldr	r3, [r7, #4]
 2699 0010 1B68     		ldr	r3, [r3]
 2700 0012 22F49072 		bic	r2, r2, #288
 2701 0016 1A60     		str	r2, [r3]
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2702              		.loc 1 1718 0
 2703 0018 7B68     		ldr	r3, [r7, #4]
 2704 001a 1B68     		ldr	r3, [r3]
 2705 001c 9A68     		ldr	r2, [r3, #8]
 2706 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 78


 2707 0020 1B68     		ldr	r3, [r3]
 2708 0022 22F00102 		bic	r2, r2, #1
 2709 0026 9A60     		str	r2, [r3, #8]
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2710              		.loc 1 1721 0
 2711 0028 7B68     		ldr	r3, [r7, #4]
 2712 002a 1B68     		ldr	r3, [r3]
 2713 002c 9B68     		ldr	r3, [r3, #8]
 2714 002e 03F04003 		and	r3, r3, #64
 2715 0032 402B     		cmp	r3, #64
 2716 0034 24D1     		bne	.L142
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2717              		.loc 1 1723 0
 2718 0036 7B68     		ldr	r3, [r7, #4]
 2719 0038 1B68     		ldr	r3, [r3]
 2720 003a 9A68     		ldr	r2, [r3, #8]
 2721 003c 7B68     		ldr	r3, [r7, #4]
 2722 003e 1B68     		ldr	r3, [r3]
 2723 0040 22F04002 		bic	r2, r2, #64
 2724 0044 9A60     		str	r2, [r3, #8]
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2725              		.loc 1 1726 0
 2726 0046 7B68     		ldr	r3, [r7, #4]
 2727 0048 DB6E     		ldr	r3, [r3, #108]
 2728 004a 002B     		cmp	r3, #0
 2729 004c 18D0     		beq	.L142
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2730              		.loc 1 1730 0
 2731 004e 7B68     		ldr	r3, [r7, #4]
 2732 0050 DB6E     		ldr	r3, [r3, #108]
 2733 0052 0022     		movs	r2, #0
 2734 0054 5A63     		str	r2, [r3, #52]
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2735              		.loc 1 1732 0
 2736 0056 7B68     		ldr	r3, [r7, #4]
 2737 0058 DB6E     		ldr	r3, [r3, #108]
 2738 005a 1846     		mov	r0, r3
 2739 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2740 0060 0346     		mov	r3, r0
 2741 0062 002B     		cmp	r3, #0
 2742 0064 0CD0     		beq	.L142
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2743              		.loc 1 1734 0
 2744 0066 7B68     		ldr	r3, [r7, #4]
 2745 0068 DB6E     		ldr	r3, [r3, #108]
 2746 006a 1846     		mov	r0, r3
 2747 006c FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  /tmp/ccfCzef7.s 			page 79


 2748 0070 0346     		mov	r3, r0
 2749 0072 202B     		cmp	r3, #32
 2750 0074 04D1     		bne	.L142
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2751              		.loc 1 1737 0
 2752 0076 7B68     		ldr	r3, [r7, #4]
 2753 0078 1022     		movs	r2, #16
 2754 007a DA67     		str	r2, [r3, #124]
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2755              		.loc 1 1739 0
 2756 007c 0323     		movs	r3, #3
 2757 007e 13E0     		b	.L143
 2758              	.L142:
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2759              		.loc 1 1746 0
 2760 0080 7B68     		ldr	r3, [r7, #4]
 2761 0082 0022     		movs	r2, #0
 2762 0084 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2763              		.loc 1 1749 0
 2764 0088 7B68     		ldr	r3, [r7, #4]
 2765 008a 1B68     		ldr	r3, [r3]
 2766 008c 0F22     		movs	r2, #15
 2767 008e 1A62     		str	r2, [r3, #32]
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2768              		.loc 1 1752 0
 2769 0090 7B68     		ldr	r3, [r7, #4]
 2770 0092 1B68     		ldr	r3, [r3]
 2771 0094 9A69     		ldr	r2, [r3, #24]
 2772 0096 7B68     		ldr	r3, [r7, #4]
 2773 0098 1B68     		ldr	r3, [r3]
 2774 009a 42F00802 		orr	r2, r2, #8
 2775 009e 9A61     		str	r2, [r3, #24]
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2776              		.loc 1 1755 0
 2777 00a0 7B68     		ldr	r3, [r7, #4]
 2778 00a2 2022     		movs	r2, #32
 2779 00a4 9A67     		str	r2, [r3, #120]
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2780              		.loc 1 1757 0
 2781 00a6 0023     		movs	r3, #0
ARM GAS  /tmp/ccfCzef7.s 			page 80


 2782              	.L143:
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2783              		.loc 1 1758 0
 2784 00a8 1846     		mov	r0, r3
 2785 00aa 0837     		adds	r7, r7, #8
 2786              	.LCFI99:
 2787              		.cfi_def_cfa_offset 8
 2788 00ac BD46     		mov	sp, r7
 2789              	.LCFI100:
 2790              		.cfi_def_cfa_register 13
 2791              		@ sp needed
 2792 00ae 80BD     		pop	{r7, pc}
 2793              		.cfi_endproc
 2794              	.LFE141:
 2796              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2797              		.align	1
 2798              		.global	HAL_UART_Abort_IT
 2799              		.syntax unified
 2800              		.thumb
 2801              		.thumb_func
 2802              		.fpu fpv4-sp-d16
 2804              	HAL_UART_Abort_IT:
 2805              	.LFB142:
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2806              		.loc 1 1775 0
 2807              		.cfi_startproc
 2808              		@ args = 0, pretend = 0, frame = 16
 2809              		@ frame_needed = 1, uses_anonymous_args = 0
 2810 0000 80B5     		push	{r7, lr}
 2811              	.LCFI101:
 2812              		.cfi_def_cfa_offset 8
 2813              		.cfi_offset 7, -8
 2814              		.cfi_offset 14, -4
 2815 0002 84B0     		sub	sp, sp, #16
 2816              	.LCFI102:
 2817              		.cfi_def_cfa_offset 24
 2818 0004 00AF     		add	r7, sp, #0
 2819              	.LCFI103:
 2820              		.cfi_def_cfa_register 7
 2821 0006 7860     		str	r0, [r7, #4]
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
ARM GAS  /tmp/ccfCzef7.s 			page 81


 2822              		.loc 1 1776 0
 2823 0008 0123     		movs	r3, #1
 2824 000a FB60     		str	r3, [r7, #12]
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2825              		.loc 1 1779 0
 2826 000c 7B68     		ldr	r3, [r7, #4]
 2827 000e 1B68     		ldr	r3, [r3]
 2828 0010 1A68     		ldr	r2, [r3]
 2829 0012 7B68     		ldr	r3, [r7, #4]
 2830 0014 1B68     		ldr	r3, [r3]
 2831 0016 22F4F072 		bic	r2, r2, #480
 2832 001a 1A60     		str	r2, [r3]
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2833              		.loc 1 1780 0
 2834 001c 7B68     		ldr	r3, [r7, #4]
 2835 001e 1B68     		ldr	r3, [r3]
 2836 0020 9A68     		ldr	r2, [r3, #8]
 2837 0022 7B68     		ldr	r3, [r7, #4]
 2838 0024 1B68     		ldr	r3, [r3]
 2839 0026 22F00102 		bic	r2, r2, #1
 2840 002a 9A60     		str	r2, [r3, #8]
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 2841              		.loc 1 1785 0
 2842 002c 7B68     		ldr	r3, [r7, #4]
 2843 002e 9B6E     		ldr	r3, [r3, #104]
 2844 0030 002B     		cmp	r3, #0
 2845 0032 0FD0     		beq	.L145
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2846              		.loc 1 1789 0
 2847 0034 7B68     		ldr	r3, [r7, #4]
 2848 0036 1B68     		ldr	r3, [r3]
 2849 0038 9B68     		ldr	r3, [r3, #8]
 2850 003a 03F08003 		and	r3, r3, #128
 2851 003e 802B     		cmp	r3, #128
 2852 0040 04D1     		bne	.L146
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2853              		.loc 1 1791 0
 2854 0042 7B68     		ldr	r3, [r7, #4]
 2855 0044 9B6E     		ldr	r3, [r3, #104]
 2856 0046 474A     		ldr	r2, .L155
 2857 0048 5A63     		str	r2, [r3, #52]
 2858 004a 03E0     		b	.L145
 2859              	.L146:
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccfCzef7.s 			page 82


 2860              		.loc 1 1795 0
 2861 004c 7B68     		ldr	r3, [r7, #4]
 2862 004e 9B6E     		ldr	r3, [r3, #104]
 2863 0050 0022     		movs	r2, #0
 2864 0052 5A63     		str	r2, [r3, #52]
 2865              	.L145:
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 2866              		.loc 1 1799 0
 2867 0054 7B68     		ldr	r3, [r7, #4]
 2868 0056 DB6E     		ldr	r3, [r3, #108]
 2869 0058 002B     		cmp	r3, #0
 2870 005a 0FD0     		beq	.L147
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2871              		.loc 1 1803 0
 2872 005c 7B68     		ldr	r3, [r7, #4]
 2873 005e 1B68     		ldr	r3, [r3]
 2874 0060 9B68     		ldr	r3, [r3, #8]
 2875 0062 03F04003 		and	r3, r3, #64
 2876 0066 402B     		cmp	r3, #64
 2877 0068 04D1     		bne	.L148
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2878              		.loc 1 1805 0
 2879 006a 7B68     		ldr	r3, [r7, #4]
 2880 006c DB6E     		ldr	r3, [r3, #108]
 2881 006e 3E4A     		ldr	r2, .L155+4
 2882 0070 5A63     		str	r2, [r3, #52]
 2883 0072 03E0     		b	.L147
 2884              	.L148:
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2885              		.loc 1 1809 0
 2886 0074 7B68     		ldr	r3, [r7, #4]
 2887 0076 DB6E     		ldr	r3, [r3, #108]
 2888 0078 0022     		movs	r2, #0
 2889 007a 5A63     		str	r2, [r3, #52]
 2890              	.L147:
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2891              		.loc 1 1814 0
 2892 007c 7B68     		ldr	r3, [r7, #4]
 2893 007e 1B68     		ldr	r3, [r3]
 2894 0080 9B68     		ldr	r3, [r3, #8]
 2895 0082 03F08003 		and	r3, r3, #128
 2896 0086 802B     		cmp	r3, #128
 2897 0088 1AD1     		bne	.L149
ARM GAS  /tmp/ccfCzef7.s 			page 83


1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2898              		.loc 1 1817 0
 2899 008a 7B68     		ldr	r3, [r7, #4]
 2900 008c 1B68     		ldr	r3, [r3]
 2901 008e 9A68     		ldr	r2, [r3, #8]
 2902 0090 7B68     		ldr	r3, [r7, #4]
 2903 0092 1B68     		ldr	r3, [r3]
 2904 0094 22F08002 		bic	r2, r2, #128
 2905 0098 9A60     		str	r2, [r3, #8]
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2906              		.loc 1 1820 0
 2907 009a 7B68     		ldr	r3, [r7, #4]
 2908 009c 9B6E     		ldr	r3, [r3, #104]
 2909 009e 002B     		cmp	r3, #0
 2910 00a0 0ED0     		beq	.L149
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2911              		.loc 1 1826 0
 2912 00a2 7B68     		ldr	r3, [r7, #4]
 2913 00a4 9B6E     		ldr	r3, [r3, #104]
 2914 00a6 1846     		mov	r0, r3
 2915 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2916 00ac 0346     		mov	r3, r0
 2917 00ae 002B     		cmp	r3, #0
 2918 00b0 04D0     		beq	.L150
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2919              		.loc 1 1828 0
 2920 00b2 7B68     		ldr	r3, [r7, #4]
 2921 00b4 9B6E     		ldr	r3, [r3, #104]
 2922 00b6 0022     		movs	r2, #0
 2923 00b8 5A63     		str	r2, [r3, #52]
 2924 00ba 01E0     		b	.L149
 2925              	.L150:
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
 2926              		.loc 1 1832 0
 2927 00bc 0023     		movs	r3, #0
 2928 00be FB60     		str	r3, [r7, #12]
 2929              	.L149:
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2930              		.loc 1 1838 0
ARM GAS  /tmp/ccfCzef7.s 			page 84


 2931 00c0 7B68     		ldr	r3, [r7, #4]
 2932 00c2 1B68     		ldr	r3, [r3]
 2933 00c4 9B68     		ldr	r3, [r3, #8]
 2934 00c6 03F04003 		and	r3, r3, #64
 2935 00ca 402B     		cmp	r3, #64
 2936 00cc 1CD1     		bne	.L151
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2937              		.loc 1 1840 0
 2938 00ce 7B68     		ldr	r3, [r7, #4]
 2939 00d0 1B68     		ldr	r3, [r3]
 2940 00d2 9A68     		ldr	r2, [r3, #8]
 2941 00d4 7B68     		ldr	r3, [r7, #4]
 2942 00d6 1B68     		ldr	r3, [r3]
 2943 00d8 22F04002 		bic	r2, r2, #64
 2944 00dc 9A60     		str	r2, [r3, #8]
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2945              		.loc 1 1843 0
 2946 00de 7B68     		ldr	r3, [r7, #4]
 2947 00e0 DB6E     		ldr	r3, [r3, #108]
 2948 00e2 002B     		cmp	r3, #0
 2949 00e4 10D0     		beq	.L151
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2950              		.loc 1 1849 0
 2951 00e6 7B68     		ldr	r3, [r7, #4]
 2952 00e8 DB6E     		ldr	r3, [r3, #108]
 2953 00ea 1846     		mov	r0, r3
 2954 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2955 00f0 0346     		mov	r3, r0
 2956 00f2 002B     		cmp	r3, #0
 2957 00f4 06D0     		beq	.L152
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2958              		.loc 1 1851 0
 2959 00f6 7B68     		ldr	r3, [r7, #4]
 2960 00f8 DB6E     		ldr	r3, [r3, #108]
 2961 00fa 0022     		movs	r2, #0
 2962 00fc 5A63     		str	r2, [r3, #52]
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 2963              		.loc 1 1852 0
 2964 00fe 0123     		movs	r3, #1
 2965 0100 FB60     		str	r3, [r7, #12]
 2966 0102 01E0     		b	.L151
 2967              	.L152:
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
 2968              		.loc 1 1856 0
 2969 0104 0023     		movs	r3, #0
ARM GAS  /tmp/ccfCzef7.s 			page 85


 2970 0106 FB60     		str	r3, [r7, #12]
 2971              	.L151:
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
 2972              		.loc 1 1862 0
 2973 0108 FB68     		ldr	r3, [r7, #12]
 2974 010a 012B     		cmp	r3, #1
 2975 010c 25D1     		bne	.L153
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 2976              		.loc 1 1865 0
 2977 010e 7B68     		ldr	r3, [r7, #4]
 2978 0110 0022     		movs	r2, #0
 2979 0112 A3F85220 		strh	r2, [r3, #82]	@ movhi
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2980              		.loc 1 1866 0
 2981 0116 7B68     		ldr	r3, [r7, #4]
 2982 0118 0022     		movs	r2, #0
 2983 011a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear ISR function pointers */
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR = NULL;
 2984              		.loc 1 1869 0
 2985 011e 7B68     		ldr	r3, [r7, #4]
 2986 0120 0022     		movs	r2, #0
 2987 0122 1A66     		str	r2, [r3, #96]
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
 2988              		.loc 1 1870 0
 2989 0124 7B68     		ldr	r3, [r7, #4]
 2990 0126 0022     		movs	r2, #0
 2991 0128 5A66     		str	r2, [r3, #100]
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2992              		.loc 1 1873 0
 2993 012a 7B68     		ldr	r3, [r7, #4]
 2994 012c 0022     		movs	r2, #0
 2995 012e DA67     		str	r2, [r3, #124]
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 2996              		.loc 1 1876 0
 2997 0130 7B68     		ldr	r3, [r7, #4]
 2998 0132 1B68     		ldr	r3, [r3]
 2999 0134 0F22     		movs	r2, #15
 3000 0136 1A62     		str	r2, [r3, #32]
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Discard the received data */
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3001              		.loc 1 1880 0
 3002 0138 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 86


 3003 013a 1B68     		ldr	r3, [r3]
 3004 013c 9A69     		ldr	r2, [r3, #24]
 3005 013e 7B68     		ldr	r3, [r7, #4]
 3006 0140 1B68     		ldr	r3, [r3]
 3007 0142 42F00802 		orr	r2, r2, #8
 3008 0146 9A61     		str	r2, [r3, #24]
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3009              		.loc 1 1883 0
 3010 0148 7B68     		ldr	r3, [r7, #4]
 3011 014a 2022     		movs	r2, #32
 3012 014c 5A67     		str	r2, [r3, #116]
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3013              		.loc 1 1884 0
 3014 014e 7B68     		ldr	r3, [r7, #4]
 3015 0150 2022     		movs	r2, #32
 3016 0152 9A67     		str	r2, [r3, #120]
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort complete callback */
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3017              		.loc 1 1892 0
 3018 0154 7868     		ldr	r0, [r7, #4]
 3019 0156 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3020              	.L153:
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 3021              		.loc 1 1896 0
 3022 015a 0023     		movs	r3, #0
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3023              		.loc 1 1897 0
 3024 015c 1846     		mov	r0, r3
 3025 015e 1037     		adds	r7, r7, #16
 3026              	.LCFI104:
 3027              		.cfi_def_cfa_offset 8
 3028 0160 BD46     		mov	sp, r7
 3029              	.LCFI105:
 3030              		.cfi_def_cfa_register 13
 3031              		@ sp needed
 3032 0162 80BD     		pop	{r7, pc}
 3033              	.L156:
 3034              		.align	2
 3035              	.L155:
 3036 0164 00000000 		.word	UART_DMATxAbortCallback
 3037 0168 00000000 		.word	UART_DMARxAbortCallback
 3038              		.cfi_endproc
 3039              	.LFE142:
 3041              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3042              		.align	1
 3043              		.global	HAL_UART_AbortTransmit_IT
ARM GAS  /tmp/ccfCzef7.s 			page 87


 3044              		.syntax unified
 3045              		.thumb
 3046              		.thumb_func
 3047              		.fpu fpv4-sp-d16
 3049              	HAL_UART_AbortTransmit_IT:
 3050              	.LFB143:
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3051              		.loc 1 1914 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 8
 3054              		@ frame_needed = 1, uses_anonymous_args = 0
 3055 0000 80B5     		push	{r7, lr}
 3056              	.LCFI106:
 3057              		.cfi_def_cfa_offset 8
 3058              		.cfi_offset 7, -8
 3059              		.cfi_offset 14, -4
 3060 0002 82B0     		sub	sp, sp, #8
 3061              	.LCFI107:
 3062              		.cfi_def_cfa_offset 16
 3063 0004 00AF     		add	r7, sp, #0
 3064              	.LCFI108:
 3065              		.cfi_def_cfa_register 7
 3066 0006 7860     		str	r0, [r7, #4]
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3067              		.loc 1 1916 0
 3068 0008 7B68     		ldr	r3, [r7, #4]
 3069 000a 1B68     		ldr	r3, [r3]
 3070 000c 1A68     		ldr	r2, [r3]
 3071 000e 7B68     		ldr	r3, [r7, #4]
 3072 0010 1B68     		ldr	r3, [r3]
 3073 0012 22F0C002 		bic	r2, r2, #192
 3074 0016 1A60     		str	r2, [r3]
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3075              		.loc 1 1919 0
 3076 0018 7B68     		ldr	r3, [r7, #4]
 3077 001a 1B68     		ldr	r3, [r3]
 3078 001c 9B68     		ldr	r3, [r3, #8]
 3079 001e 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/ccfCzef7.s 			page 88


 3080 0022 802B     		cmp	r3, #128
 3081 0024 2DD1     		bne	.L158
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3082              		.loc 1 1921 0
 3083 0026 7B68     		ldr	r3, [r7, #4]
 3084 0028 1B68     		ldr	r3, [r3]
 3085 002a 9A68     		ldr	r2, [r3, #8]
 3086 002c 7B68     		ldr	r3, [r7, #4]
 3087 002e 1B68     		ldr	r3, [r3]
 3088 0030 22F08002 		bic	r2, r2, #128
 3089 0034 9A60     		str	r2, [r3, #8]
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3090              		.loc 1 1924 0
 3091 0036 7B68     		ldr	r3, [r7, #4]
 3092 0038 9B6E     		ldr	r3, [r3, #104]
 3093 003a 002B     		cmp	r3, #0
 3094 003c 13D0     		beq	.L159
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3095              		.loc 1 1928 0
 3096 003e 7B68     		ldr	r3, [r7, #4]
 3097 0040 9B6E     		ldr	r3, [r3, #104]
 3098 0042 194A     		ldr	r2, .L164
 3099 0044 5A63     		str	r2, [r3, #52]
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3100              		.loc 1 1931 0
 3101 0046 7B68     		ldr	r3, [r7, #4]
 3102 0048 9B6E     		ldr	r3, [r3, #104]
 3103 004a 1846     		mov	r0, r3
 3104 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3105 0050 0346     		mov	r3, r0
 3106 0052 002B     		cmp	r3, #0
 3107 0054 22D0     		beq	.L162
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3108              		.loc 1 1934 0
 3109 0056 7B68     		ldr	r3, [r7, #4]
 3110 0058 9B6E     		ldr	r3, [r3, #104]
 3111 005a 5B6B     		ldr	r3, [r3, #52]
 3112 005c 7A68     		ldr	r2, [r7, #4]
 3113 005e 926E     		ldr	r2, [r2, #104]
 3114 0060 1046     		mov	r0, r2
 3115 0062 9847     		blx	r3
 3116              	.LVL0:
 3117 0064 1AE0     		b	.L162
 3118              	.L159:
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
ARM GAS  /tmp/ccfCzef7.s 			page 89


1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3119              		.loc 1 1940 0
 3120 0066 7B68     		ldr	r3, [r7, #4]
 3121 0068 0022     		movs	r2, #0
 3122 006a A3F85220 		strh	r2, [r3, #82]	@ movhi
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear TxISR function pointers */
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = NULL;
 3123              		.loc 1 1943 0
 3124 006e 7B68     		ldr	r3, [r7, #4]
 3125 0070 0022     		movs	r2, #0
 3126 0072 5A66     		str	r2, [r3, #100]
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3127              		.loc 1 1946 0
 3128 0074 7B68     		ldr	r3, [r7, #4]
 3129 0076 2022     		movs	r2, #32
 3130 0078 5A67     		str	r2, [r3, #116]
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3131              		.loc 1 1954 0
 3132 007a 7868     		ldr	r0, [r7, #4]
 3133 007c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3134 0080 0CE0     		b	.L162
 3135              	.L158:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3136              		.loc 1 1961 0
 3137 0082 7B68     		ldr	r3, [r7, #4]
 3138 0084 0022     		movs	r2, #0
 3139 0086 A3F85220 		strh	r2, [r3, #82]	@ movhi
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear TxISR function pointers */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
 3140              		.loc 1 1964 0
 3141 008a 7B68     		ldr	r3, [r7, #4]
 3142 008c 0022     		movs	r2, #0
 3143 008e 5A66     		str	r2, [r3, #100]
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3144              		.loc 1 1968 0
ARM GAS  /tmp/ccfCzef7.s 			page 90


 3145 0090 7B68     		ldr	r3, [r7, #4]
 3146 0092 2022     		movs	r2, #32
 3147 0094 5A67     		str	r2, [r3, #116]
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3148              		.loc 1 1976 0
 3149 0096 7868     		ldr	r0, [r7, #4]
 3150 0098 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3151              	.L162:
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 3152              		.loc 1 1980 0
 3153 009c 0023     		movs	r3, #0
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3154              		.loc 1 1981 0
 3155 009e 1846     		mov	r0, r3
 3156 00a0 0837     		adds	r7, r7, #8
 3157              	.LCFI109:
 3158              		.cfi_def_cfa_offset 8
 3159 00a2 BD46     		mov	sp, r7
 3160              	.LCFI110:
 3161              		.cfi_def_cfa_register 13
 3162              		@ sp needed
 3163 00a4 80BD     		pop	{r7, pc}
 3164              	.L165:
 3165 00a6 00BF     		.align	2
 3166              	.L164:
 3167 00a8 00000000 		.word	UART_DMATxOnlyAbortCallback
 3168              		.cfi_endproc
 3169              	.LFE143:
 3171              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3172              		.align	1
 3173              		.global	HAL_UART_AbortReceive_IT
 3174              		.syntax unified
 3175              		.thumb
 3176              		.thumb_func
 3177              		.fpu fpv4-sp-d16
 3179              	HAL_UART_AbortReceive_IT:
 3180              	.LFB144:
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccfCzef7.s 			page 91


1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3181              		.loc 1 1998 0
 3182              		.cfi_startproc
 3183              		@ args = 0, pretend = 0, frame = 8
 3184              		@ frame_needed = 1, uses_anonymous_args = 0
 3185 0000 80B5     		push	{r7, lr}
 3186              	.LCFI111:
 3187              		.cfi_def_cfa_offset 8
 3188              		.cfi_offset 7, -8
 3189              		.cfi_offset 14, -4
 3190 0002 82B0     		sub	sp, sp, #8
 3191              	.LCFI112:
 3192              		.cfi_def_cfa_offset 16
 3193 0004 00AF     		add	r7, sp, #0
 3194              	.LCFI113:
 3195              		.cfi_def_cfa_register 7
 3196 0006 7860     		str	r0, [r7, #4]
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3197              		.loc 1 2000 0
 3198 0008 7B68     		ldr	r3, [r7, #4]
 3199 000a 1B68     		ldr	r3, [r3]
 3200 000c 1A68     		ldr	r2, [r3]
 3201 000e 7B68     		ldr	r3, [r7, #4]
 3202 0010 1B68     		ldr	r3, [r3]
 3203 0012 22F49072 		bic	r2, r2, #288
 3204 0016 1A60     		str	r2, [r3]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3205              		.loc 1 2001 0
 3206 0018 7B68     		ldr	r3, [r7, #4]
 3207 001a 1B68     		ldr	r3, [r3]
 3208 001c 9A68     		ldr	r2, [r3, #8]
 3209 001e 7B68     		ldr	r3, [r7, #4]
 3210 0020 1B68     		ldr	r3, [r3]
 3211 0022 22F00102 		bic	r2, r2, #1
 3212 0026 9A60     		str	r2, [r3, #8]
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3213              		.loc 1 2004 0
 3214 0028 7B68     		ldr	r3, [r7, #4]
 3215 002a 1B68     		ldr	r3, [r3]
 3216 002c 9B68     		ldr	r3, [r3, #8]
 3217 002e 03F04003 		and	r3, r3, #64
 3218 0032 402B     		cmp	r3, #64
 3219 0034 39D1     		bne	.L167
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3220              		.loc 1 2006 0
 3221 0036 7B68     		ldr	r3, [r7, #4]
 3222 0038 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 92


 3223 003a 9A68     		ldr	r2, [r3, #8]
 3224 003c 7B68     		ldr	r3, [r7, #4]
 3225 003e 1B68     		ldr	r3, [r3]
 3226 0040 22F04002 		bic	r2, r2, #64
 3227 0044 9A60     		str	r2, [r3, #8]
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3228              		.loc 1 2009 0
 3229 0046 7B68     		ldr	r3, [r7, #4]
 3230 0048 DB6E     		ldr	r3, [r3, #108]
 3231 004a 002B     		cmp	r3, #0
 3232 004c 13D0     		beq	.L168
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3233              		.loc 1 2013 0
 3234 004e 7B68     		ldr	r3, [r7, #4]
 3235 0050 DB6E     		ldr	r3, [r3, #108]
 3236 0052 214A     		ldr	r2, .L173
 3237 0054 5A63     		str	r2, [r3, #52]
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3238              		.loc 1 2016 0
 3239 0056 7B68     		ldr	r3, [r7, #4]
 3240 0058 DB6E     		ldr	r3, [r3, #108]
 3241 005a 1846     		mov	r0, r3
 3242 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3243 0060 0346     		mov	r3, r0
 3244 0062 002B     		cmp	r3, #0
 3245 0064 32D0     		beq	.L171
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3246              		.loc 1 2019 0
 3247 0066 7B68     		ldr	r3, [r7, #4]
 3248 0068 DB6E     		ldr	r3, [r3, #108]
 3249 006a 5B6B     		ldr	r3, [r3, #52]
 3250 006c 7A68     		ldr	r2, [r7, #4]
 3251 006e D26E     		ldr	r2, [r2, #108]
 3252 0070 1046     		mov	r0, r2
 3253 0072 9847     		blx	r3
 3254              	.LVL1:
 3255 0074 2AE0     		b	.L171
 3256              	.L168:
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3257              		.loc 1 2025 0
 3258 0076 7B68     		ldr	r3, [r7, #4]
 3259 0078 0022     		movs	r2, #0
 3260 007a A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /tmp/ccfCzef7.s 			page 93


2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3261              		.loc 1 2028 0
 3262 007e 7B68     		ldr	r3, [r7, #4]
 3263 0080 0022     		movs	r2, #0
 3264 0082 5A65     		str	r2, [r3, #84]
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3265              		.loc 1 2031 0
 3266 0084 7B68     		ldr	r3, [r7, #4]
 3267 0086 1B68     		ldr	r3, [r3]
 3268 0088 0F22     		movs	r2, #15
 3269 008a 1A62     		str	r2, [r3, #32]
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Discard the received data */
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3270              		.loc 1 2034 0
 3271 008c 7B68     		ldr	r3, [r7, #4]
 3272 008e 1B68     		ldr	r3, [r3]
 3273 0090 9A69     		ldr	r2, [r3, #24]
 3274 0092 7B68     		ldr	r3, [r7, #4]
 3275 0094 1B68     		ldr	r3, [r3]
 3276 0096 42F00802 		orr	r2, r2, #8
 3277 009a 9A61     		str	r2, [r3, #24]
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3278              		.loc 1 2037 0
 3279 009c 7B68     		ldr	r3, [r7, #4]
 3280 009e 2022     		movs	r2, #32
 3281 00a0 9A67     		str	r2, [r3, #120]
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3282              		.loc 1 2045 0
 3283 00a2 7868     		ldr	r0, [r7, #4]
 3284 00a4 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3285 00a8 10E0     		b	.L171
 3286              	.L167:
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3287              		.loc 1 2052 0
 3288 00aa 7B68     		ldr	r3, [r7, #4]
 3289 00ac 0022     		movs	r2, #0
 3290 00ae A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /tmp/ccfCzef7.s 			page 94


2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RxISR function pointer */
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3291              		.loc 1 2055 0
 3292 00b2 7B68     		ldr	r3, [r7, #4]
 3293 00b4 0022     		movs	r2, #0
 3294 00b6 5A65     		str	r2, [r3, #84]
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3295              		.loc 1 2058 0
 3296 00b8 7B68     		ldr	r3, [r7, #4]
 3297 00ba 1B68     		ldr	r3, [r3]
 3298 00bc 0F22     		movs	r2, #15
 3299 00be 1A62     		str	r2, [r3, #32]
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3300              		.loc 1 2061 0
 3301 00c0 7B68     		ldr	r3, [r7, #4]
 3302 00c2 2022     		movs	r2, #32
 3303 00c4 9A67     		str	r2, [r3, #120]
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3304              		.loc 1 2069 0
 3305 00c6 7868     		ldr	r0, [r7, #4]
 3306 00c8 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3307              	.L171:
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 3308              		.loc 1 2073 0
 3309 00cc 0023     		movs	r3, #0
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3310              		.loc 1 2074 0
 3311 00ce 1846     		mov	r0, r3
 3312 00d0 0837     		adds	r7, r7, #8
 3313              	.LCFI114:
 3314              		.cfi_def_cfa_offset 8
 3315 00d2 BD46     		mov	sp, r7
 3316              	.LCFI115:
 3317              		.cfi_def_cfa_register 13
 3318              		@ sp needed
 3319 00d4 80BD     		pop	{r7, pc}
 3320              	.L174:
 3321 00d6 00BF     		.align	2
 3322              	.L173:
 3323 00d8 00000000 		.word	UART_DMARxOnlyAbortCallback
 3324              		.cfi_endproc
 3325              	.LFE144:
ARM GAS  /tmp/ccfCzef7.s 			page 95


 3327              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3328              		.align	1
 3329              		.global	HAL_UART_IRQHandler
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	HAL_UART_IRQHandler:
 3336              	.LFB145:
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3337              		.loc 1 2082 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 32
 3340              		@ frame_needed = 1, uses_anonymous_args = 0
 3341 0000 80B5     		push	{r7, lr}
 3342              	.LCFI116:
 3343              		.cfi_def_cfa_offset 8
 3344              		.cfi_offset 7, -8
 3345              		.cfi_offset 14, -4
 3346 0002 88B0     		sub	sp, sp, #32
 3347              	.LCFI117:
 3348              		.cfi_def_cfa_offset 40
 3349 0004 00AF     		add	r7, sp, #0
 3350              	.LCFI118:
 3351              		.cfi_def_cfa_register 7
 3352 0006 7860     		str	r0, [r7, #4]
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3353              		.loc 1 2083 0
 3354 0008 7B68     		ldr	r3, [r7, #4]
 3355 000a 1B68     		ldr	r3, [r3]
 3356 000c DB69     		ldr	r3, [r3, #28]
 3357 000e FB61     		str	r3, [r7, #28]
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3358              		.loc 1 2084 0
 3359 0010 7B68     		ldr	r3, [r7, #4]
 3360 0012 1B68     		ldr	r3, [r3]
 3361 0014 1B68     		ldr	r3, [r3]
 3362 0016 BB61     		str	r3, [r7, #24]
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3363              		.loc 1 2085 0
 3364 0018 7B68     		ldr	r3, [r7, #4]
 3365 001a 1B68     		ldr	r3, [r3]
 3366 001c 9B68     		ldr	r3, [r3, #8]
 3367 001e 7B61     		str	r3, [r7, #20]
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorcode;
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
ARM GAS  /tmp/ccfCzef7.s 			page 96


 3368              		.loc 1 2091 0
 3369 0020 FA69     		ldr	r2, [r7, #28]
 3370 0022 40F60F03 		movw	r3, #2063
 3371 0026 1340     		ands	r3, r3, r2
 3372 0028 3B61     		str	r3, [r7, #16]
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == 0U)
 3373              		.loc 1 2092 0
 3374 002a 3B69     		ldr	r3, [r7, #16]
 3375 002c 002B     		cmp	r3, #0
 3376 002e 13D1     		bne	.L176
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 3377              		.loc 1 2095 0
 3378 0030 FB69     		ldr	r3, [r7, #28]
 3379 0032 03F02003 		and	r3, r3, #32
 3380 0036 002B     		cmp	r3, #0
 3381 0038 0ED0     		beq	.L176
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3382              		.loc 1 2096 0
 3383 003a BB69     		ldr	r3, [r7, #24]
 3384 003c 03F02003 		and	r3, r3, #32
 3385 0040 002B     		cmp	r3, #0
 3386 0042 09D0     		beq	.L176
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3387              		.loc 1 2098 0
 3388 0044 7B68     		ldr	r3, [r7, #4]
 3389 0046 1B6E     		ldr	r3, [r3, #96]
 3390 0048 002B     		cmp	r3, #0
 3391 004a 00F01481 		beq	.L199
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxISR(huart);
 3392              		.loc 1 2100 0
 3393 004e 7B68     		ldr	r3, [r7, #4]
 3394 0050 1B6E     		ldr	r3, [r3, #96]
 3395 0052 7868     		ldr	r0, [r7, #4]
 3396 0054 9847     		blx	r3
 3397              	.LVL2:
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 3398              		.loc 1 2102 0
 3399 0056 0EE1     		b	.L199
 3400              	.L176:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((errorflags != 0U)
 3401              		.loc 1 2107 0
 3402 0058 3B69     		ldr	r3, [r7, #16]
 3403 005a 002B     		cmp	r3, #0
 3404 005c 00F0D680 		beq	.L179
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 3405              		.loc 1 2108 0
 3406 0060 7B69     		ldr	r3, [r7, #20]
 3407 0062 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccfCzef7.s 			page 97


 3408 0066 002B     		cmp	r3, #0
 3409 0068 05D1     		bne	.L180
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 3410              		.loc 1 2109 0
 3411 006a BB69     		ldr	r3, [r7, #24]
 3412 006c 03F49073 		and	r3, r3, #288
 3413 0070 002B     		cmp	r3, #0
 3414 0072 00F0CB80 		beq	.L179
 3415              	.L180:
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3416              		.loc 1 2112 0
 3417 0076 FB69     		ldr	r3, [r7, #28]
 3418 0078 03F00103 		and	r3, r3, #1
 3419 007c 002B     		cmp	r3, #0
 3420 007e 0ED0     		beq	.L181
 3421              		.loc 1 2112 0 is_stmt 0 discriminator 1
 3422 0080 BB69     		ldr	r3, [r7, #24]
 3423 0082 03F48073 		and	r3, r3, #256
 3424 0086 002B     		cmp	r3, #0
 3425 0088 09D0     		beq	.L181
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3426              		.loc 1 2114 0 is_stmt 1
 3427 008a 7B68     		ldr	r3, [r7, #4]
 3428 008c 1B68     		ldr	r3, [r3]
 3429 008e 0122     		movs	r2, #1
 3430 0090 1A62     		str	r2, [r3, #32]
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3431              		.loc 1 2116 0
 3432 0092 7B68     		ldr	r3, [r7, #4]
 3433 0094 DB6F     		ldr	r3, [r3, #124]
 3434 0096 43F00102 		orr	r2, r3, #1
 3435 009a 7B68     		ldr	r3, [r7, #4]
 3436 009c DA67     		str	r2, [r3, #124]
 3437              	.L181:
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3438              		.loc 1 2120 0
 3439 009e FB69     		ldr	r3, [r7, #28]
 3440 00a0 03F00203 		and	r3, r3, #2
 3441 00a4 002B     		cmp	r3, #0
 3442 00a6 0ED0     		beq	.L182
 3443              		.loc 1 2120 0 is_stmt 0 discriminator 1
 3444 00a8 7B69     		ldr	r3, [r7, #20]
 3445 00aa 03F00103 		and	r3, r3, #1
 3446 00ae 002B     		cmp	r3, #0
 3447 00b0 09D0     		beq	.L182
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3448              		.loc 1 2122 0 is_stmt 1
 3449 00b2 7B68     		ldr	r3, [r7, #4]
 3450 00b4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 98


 3451 00b6 0222     		movs	r2, #2
 3452 00b8 1A62     		str	r2, [r3, #32]
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3453              		.loc 1 2124 0
 3454 00ba 7B68     		ldr	r3, [r7, #4]
 3455 00bc DB6F     		ldr	r3, [r3, #124]
 3456 00be 43F00402 		orr	r2, r3, #4
 3457 00c2 7B68     		ldr	r3, [r7, #4]
 3458 00c4 DA67     		str	r2, [r3, #124]
 3459              	.L182:
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3460              		.loc 1 2128 0
 3461 00c6 FB69     		ldr	r3, [r7, #28]
 3462 00c8 03F00403 		and	r3, r3, #4
 3463 00cc 002B     		cmp	r3, #0
 3464 00ce 0ED0     		beq	.L183
 3465              		.loc 1 2128 0 is_stmt 0 discriminator 1
 3466 00d0 7B69     		ldr	r3, [r7, #20]
 3467 00d2 03F00103 		and	r3, r3, #1
 3468 00d6 002B     		cmp	r3, #0
 3469 00d8 09D0     		beq	.L183
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3470              		.loc 1 2130 0 is_stmt 1
 3471 00da 7B68     		ldr	r3, [r7, #4]
 3472 00dc 1B68     		ldr	r3, [r3]
 3473 00de 0422     		movs	r2, #4
 3474 00e0 1A62     		str	r2, [r3, #32]
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3475              		.loc 1 2132 0
 3476 00e2 7B68     		ldr	r3, [r7, #4]
 3477 00e4 DB6F     		ldr	r3, [r3, #124]
 3478 00e6 43F00202 		orr	r2, r3, #2
 3479 00ea 7B68     		ldr	r3, [r7, #4]
 3480 00ec DA67     		str	r2, [r3, #124]
 3481              	.L183:
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3482              		.loc 1 2136 0
 3483 00ee FB69     		ldr	r3, [r7, #28]
 3484 00f0 03F00803 		and	r3, r3, #8
 3485 00f4 002B     		cmp	r3, #0
 3486 00f6 13D0     		beq	.L184
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3487              		.loc 1 2137 0
 3488 00f8 BB69     		ldr	r3, [r7, #24]
 3489 00fa 03F02003 		and	r3, r3, #32
 3490 00fe 002B     		cmp	r3, #0
 3491 0100 04D1     		bne	.L185
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
ARM GAS  /tmp/ccfCzef7.s 			page 99


 3492              		.loc 1 2138 0 discriminator 1
 3493 0102 7B69     		ldr	r3, [r7, #20]
 3494 0104 03F00103 		and	r3, r3, #1
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3495              		.loc 1 2137 0 discriminator 1
 3496 0108 002B     		cmp	r3, #0
 3497 010a 09D0     		beq	.L184
 3498              	.L185:
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3499              		.loc 1 2140 0
 3500 010c 7B68     		ldr	r3, [r7, #4]
 3501 010e 1B68     		ldr	r3, [r3]
 3502 0110 0822     		movs	r2, #8
 3503 0112 1A62     		str	r2, [r3, #32]
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3504              		.loc 1 2142 0
 3505 0114 7B68     		ldr	r3, [r7, #4]
 3506 0116 DB6F     		ldr	r3, [r3, #124]
 3507 0118 43F00802 		orr	r2, r3, #8
 3508 011c 7B68     		ldr	r3, [r7, #4]
 3509 011e DA67     		str	r2, [r3, #124]
 3510              	.L184:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 3511              		.loc 1 2146 0
 3512 0120 FB69     		ldr	r3, [r7, #28]
 3513 0122 03F40063 		and	r3, r3, #2048
 3514 0126 002B     		cmp	r3, #0
 3515 0128 0FD0     		beq	.L186
 3516              		.loc 1 2146 0 is_stmt 0 discriminator 1
 3517 012a BB69     		ldr	r3, [r7, #24]
 3518 012c 03F08063 		and	r3, r3, #67108864
 3519 0130 002B     		cmp	r3, #0
 3520 0132 0AD0     		beq	.L186
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 3521              		.loc 1 2148 0 is_stmt 1
 3522 0134 7B68     		ldr	r3, [r7, #4]
 3523 0136 1B68     		ldr	r3, [r3]
 3524 0138 4FF40062 		mov	r2, #2048
 3525 013c 1A62     		str	r2, [r3, #32]
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 3526              		.loc 1 2150 0
 3527 013e 7B68     		ldr	r3, [r7, #4]
 3528 0140 DB6F     		ldr	r3, [r3, #124]
 3529 0142 43F02002 		orr	r2, r3, #32
 3530 0146 7B68     		ldr	r3, [r7, #4]
 3531 0148 DA67     		str	r2, [r3, #124]
 3532              	.L186:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
ARM GAS  /tmp/ccfCzef7.s 			page 100


2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3533              		.loc 1 2154 0
 3534 014a 7B68     		ldr	r3, [r7, #4]
 3535 014c DB6F     		ldr	r3, [r3, #124]
 3536 014e 002B     		cmp	r3, #0
 3537 0150 00F09380 		beq	.L200
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 3538              		.loc 1 2157 0
 3539 0154 FB69     		ldr	r3, [r7, #28]
 3540 0156 03F02003 		and	r3, r3, #32
 3541 015a 002B     		cmp	r3, #0
 3542 015c 0CD0     		beq	.L188
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3543              		.loc 1 2158 0
 3544 015e BB69     		ldr	r3, [r7, #24]
 3545 0160 03F02003 		and	r3, r3, #32
 3546 0164 002B     		cmp	r3, #0
 3547 0166 07D0     		beq	.L188
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (huart->RxISR != NULL)
 3548              		.loc 1 2160 0
 3549 0168 7B68     		ldr	r3, [r7, #4]
 3550 016a 1B6E     		ldr	r3, [r3, #96]
 3551 016c 002B     		cmp	r3, #0
 3552 016e 03D0     		beq	.L188
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxISR(huart);
 3553              		.loc 1 2162 0
 3554 0170 7B68     		ldr	r3, [r7, #4]
 3555 0172 1B6E     		ldr	r3, [r3, #96]
 3556 0174 7868     		ldr	r0, [r7, #4]
 3557 0176 9847     		blx	r3
 3558              	.LVL3:
 3559              	.L188:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - Receiver Timeout error in Reception
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - Overrun error in Reception
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - any error occurs in DMA mode reception
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       */
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 3560              		.loc 1 2171 0
 3561 0178 7B68     		ldr	r3, [r7, #4]
 3562 017a DB6F     		ldr	r3, [r3, #124]
 3563 017c FB60     		str	r3, [r7, #12]
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3564              		.loc 1 2172 0
 3565 017e 7B68     		ldr	r3, [r7, #4]
 3566 0180 1B68     		ldr	r3, [r3]
 3567 0182 9B68     		ldr	r3, [r3, #8]
 3568 0184 03F04003 		and	r3, r3, #64
 3569 0188 402B     		cmp	r3, #64
 3570 018a 04D0     		beq	.L189
ARM GAS  /tmp/ccfCzef7.s 			page 101


2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 3571              		.loc 1 2173 0 discriminator 1
 3572 018c FB68     		ldr	r3, [r7, #12]
 3573 018e 03F02803 		and	r3, r3, #40
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3574              		.loc 1 2172 0 discriminator 1
 3575 0192 002B     		cmp	r3, #0
 3576 0194 31D0     		beq	.L190
 3577              	.L189:
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3578              		.loc 1 2178 0
 3579 0196 7868     		ldr	r0, [r7, #4]
 3580 0198 FFF7FEFF 		bl	UART_EndRxTransfer
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3581              		.loc 1 2181 0
 3582 019c 7B68     		ldr	r3, [r7, #4]
 3583 019e 1B68     		ldr	r3, [r3]
 3584 01a0 9B68     		ldr	r3, [r3, #8]
 3585 01a2 03F04003 		and	r3, r3, #64
 3586 01a6 402B     		cmp	r3, #64
 3587 01a8 23D1     		bne	.L191
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3588              		.loc 1 2183 0
 3589 01aa 7B68     		ldr	r3, [r7, #4]
 3590 01ac 1B68     		ldr	r3, [r3]
 3591 01ae 9A68     		ldr	r2, [r3, #8]
 3592 01b0 7B68     		ldr	r3, [r7, #4]
 3593 01b2 1B68     		ldr	r3, [r3]
 3594 01b4 22F04002 		bic	r2, r2, #64
 3595 01b8 9A60     		str	r2, [r3, #8]
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3596              		.loc 1 2186 0
 3597 01ba 7B68     		ldr	r3, [r7, #4]
 3598 01bc DB6E     		ldr	r3, [r3, #108]
 3599 01be 002B     		cmp	r3, #0
 3600 01c0 13D0     		beq	.L192
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3601              		.loc 1 2190 0
 3602 01c2 7B68     		ldr	r3, [r7, #4]
 3603 01c4 DB6E     		ldr	r3, [r3, #108]
 3604 01c6 304A     		ldr	r2, .L203
 3605 01c8 5A63     		str	r2, [r3, #52]
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccfCzef7.s 			page 102


 3606              		.loc 1 2193 0
 3607 01ca 7B68     		ldr	r3, [r7, #4]
 3608 01cc DB6E     		ldr	r3, [r3, #108]
 3609 01ce 1846     		mov	r0, r3
 3610 01d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3611 01d4 0346     		mov	r3, r0
 3612 01d6 002B     		cmp	r3, #0
 3613 01d8 16D0     		beq	.L201
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3614              		.loc 1 2196 0
 3615 01da 7B68     		ldr	r3, [r7, #4]
 3616 01dc DB6E     		ldr	r3, [r3, #108]
 3617 01de 5B6B     		ldr	r3, [r3, #52]
 3618 01e0 7A68     		ldr	r2, [r7, #4]
 3619 01e2 D26E     		ldr	r2, [r2, #108]
 3620 01e4 1046     		mov	r0, r2
 3621 01e6 9847     		blx	r3
 3622              	.LVL4:
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3623              		.loc 1 2181 0
 3624 01e8 0EE0     		b	.L201
 3625              	.L192:
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /*Call registered error callback*/
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->ErrorCallback(huart);
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /*Call legacy weak error callback*/
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3626              		.loc 1 2207 0
 3627 01ea 7868     		ldr	r0, [r7, #4]
 3628 01ec FFF7FEFF 		bl	HAL_UART_ErrorCallback
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3629              		.loc 1 2181 0
 3630 01f0 0AE0     		b	.L201
 3631              	.L191:
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /*Call registered error callback*/
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCallback(huart);
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /*Call legacy weak error callback*/
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3632              		.loc 1 2220 0
 3633 01f2 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 103


 3634 01f4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3635              		.loc 1 2181 0
 3636 01f8 06E0     		b	.L201
 3637              	.L190:
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /*Call registered error callback*/
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback(huart);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /*Call legacy weak error callback*/
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3638              		.loc 1 2233 0
 3639 01fa 7868     		ldr	r0, [r7, #4]
 3640 01fc FFF7FEFF 		bl	HAL_UART_ErrorCallback
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3641              		.loc 1 2235 0
 3642 0200 7B68     		ldr	r3, [r7, #4]
 3643 0202 0022     		movs	r2, #0
 3644 0204 DA67     		str	r2, [r3, #124]
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3645              		.loc 1 2238 0
 3646 0206 38E0     		b	.L200
 3647              	.L201:
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3648              		.loc 1 2181 0
 3649 0208 00BF     		nop
 3650              		.loc 1 2238 0
 3651 020a 36E0     		b	.L200
 3652              	.L179:
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 3653              		.loc 1 2243 0
 3654 020c FB69     		ldr	r3, [r7, #28]
 3655 020e 03F48013 		and	r3, r3, #1048576
 3656 0212 002B     		cmp	r3, #0
 3657 0214 0DD0     		beq	.L196
 3658              		.loc 1 2243 0 is_stmt 0 discriminator 1
 3659 0216 7B69     		ldr	r3, [r7, #20]
 3660 0218 03F48003 		and	r3, r3, #4194304
 3661 021c 002B     		cmp	r3, #0
 3662 021e 08D0     		beq	.L196
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 3663              		.loc 1 2245 0 is_stmt 1
ARM GAS  /tmp/ccfCzef7.s 			page 104


 3664 0220 7B68     		ldr	r3, [r7, #4]
 3665 0222 1B68     		ldr	r3, [r3]
 3666 0224 4FF48012 		mov	r2, #1048576
 3667 0228 1A62     		str	r2, [r3, #32]
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->WakeupCallback(huart);
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3668              		.loc 1 2255 0
 3669 022a 7868     		ldr	r0, [r7, #4]
 3670 022c FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3671              		.loc 1 2257 0
 3672 0230 26E0     		b	.L175
 3673              	.L196:
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 3674              		.loc 1 2261 0
 3675 0232 FB69     		ldr	r3, [r7, #28]
 3676 0234 03F08003 		and	r3, r3, #128
 3677 0238 002B     		cmp	r3, #0
 3678 023a 0DD0     		beq	.L197
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 3679              		.loc 1 2262 0
 3680 023c BB69     		ldr	r3, [r7, #24]
 3681 023e 03F08003 		and	r3, r3, #128
 3682 0242 002B     		cmp	r3, #0
 3683 0244 08D0     		beq	.L197
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxISR != NULL)
 3684              		.loc 1 2264 0
 3685 0246 7B68     		ldr	r3, [r7, #4]
 3686 0248 5B6E     		ldr	r3, [r3, #100]
 3687 024a 002B     		cmp	r3, #0
 3688 024c 17D0     		beq	.L202
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR(huart);
 3689              		.loc 1 2266 0
 3690 024e 7B68     		ldr	r3, [r7, #4]
 3691 0250 5B6E     		ldr	r3, [r3, #100]
 3692 0252 7868     		ldr	r0, [r7, #4]
 3693 0254 9847     		blx	r3
 3694              	.LVL5:
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3695              		.loc 1 2268 0
 3696 0256 12E0     		b	.L202
 3697              	.L197:
ARM GAS  /tmp/ccfCzef7.s 			page 105


2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 3698              		.loc 1 2272 0
 3699 0258 FB69     		ldr	r3, [r7, #28]
 3700 025a 03F04003 		and	r3, r3, #64
 3701 025e 002B     		cmp	r3, #0
 3702 0260 0ED0     		beq	.L175
 3703              		.loc 1 2272 0 is_stmt 0 discriminator 1
 3704 0262 BB69     		ldr	r3, [r7, #24]
 3705 0264 03F04003 		and	r3, r3, #64
 3706 0268 002B     		cmp	r3, #0
 3707 026a 09D0     		beq	.L175
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3708              		.loc 1 2274 0 is_stmt 1
 3709 026c 7868     		ldr	r0, [r7, #4]
 3710 026e FFF7FEFF 		bl	UART_EndTransmit_IT
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 3711              		.loc 1 2275 0
 3712 0272 00BF     		nop
 3713 0274 04E0     		b	.L175
 3714              	.L199:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3715              		.loc 1 2102 0
 3716 0276 00BF     		nop
 3717 0278 02E0     		b	.L175
 3718              	.L200:
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3719              		.loc 1 2238 0
 3720 027a 00BF     		nop
 3721 027c 00E0     		b	.L175
 3722              	.L202:
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3723              		.loc 1 2268 0
 3724 027e 00BF     		nop
 3725              	.L175:
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3726              		.loc 1 2278 0
 3727 0280 2037     		adds	r7, r7, #32
 3728              	.LCFI119:
 3729              		.cfi_def_cfa_offset 8
 3730 0282 BD46     		mov	sp, r7
 3731              	.LCFI120:
 3732              		.cfi_def_cfa_register 13
 3733              		@ sp needed
 3734 0284 80BD     		pop	{r7, pc}
 3735              	.L204:
 3736 0286 00BF     		.align	2
 3737              	.L203:
 3738 0288 00000000 		.word	UART_DMAAbortOnError
 3739              		.cfi_endproc
 3740              	.LFE145:
 3742              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccfCzef7.s 			page 106


 3743              		.align	1
 3744              		.weak	HAL_UART_TxCpltCallback
 3745              		.syntax unified
 3746              		.thumb
 3747              		.thumb_func
 3748              		.fpu fpv4-sp-d16
 3750              	HAL_UART_TxCpltCallback:
 3751              	.LFB146:
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3752              		.loc 1 2286 0
 3753              		.cfi_startproc
 3754              		@ args = 0, pretend = 0, frame = 8
 3755              		@ frame_needed = 1, uses_anonymous_args = 0
 3756              		@ link register save eliminated.
 3757 0000 80B4     		push	{r7}
 3758              	.LCFI121:
 3759              		.cfi_def_cfa_offset 4
 3760              		.cfi_offset 7, -4
 3761 0002 83B0     		sub	sp, sp, #12
 3762              	.LCFI122:
 3763              		.cfi_def_cfa_offset 16
 3764 0004 00AF     		add	r7, sp, #0
 3765              	.LCFI123:
 3766              		.cfi_def_cfa_register 7
 3767 0006 7860     		str	r0, [r7, #4]
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3768              		.loc 1 2293 0
 3769 0008 00BF     		nop
 3770 000a 0C37     		adds	r7, r7, #12
 3771              	.LCFI124:
 3772              		.cfi_def_cfa_offset 4
 3773 000c BD46     		mov	sp, r7
 3774              	.LCFI125:
 3775              		.cfi_def_cfa_register 13
 3776              		@ sp needed
 3777 000e 5DF8047B 		ldr	r7, [sp], #4
 3778              	.LCFI126:
 3779              		.cfi_restore 7
 3780              		.cfi_def_cfa_offset 0
 3781 0012 7047     		bx	lr
 3782              		.cfi_endproc
 3783              	.LFE146:
 3785              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3786              		.align	1
ARM GAS  /tmp/ccfCzef7.s 			page 107


 3787              		.weak	HAL_UART_TxHalfCpltCallback
 3788              		.syntax unified
 3789              		.thumb
 3790              		.thumb_func
 3791              		.fpu fpv4-sp-d16
 3793              	HAL_UART_TxHalfCpltCallback:
 3794              	.LFB147:
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3795              		.loc 1 2301 0
 3796              		.cfi_startproc
 3797              		@ args = 0, pretend = 0, frame = 8
 3798              		@ frame_needed = 1, uses_anonymous_args = 0
 3799              		@ link register save eliminated.
 3800 0000 80B4     		push	{r7}
 3801              	.LCFI127:
 3802              		.cfi_def_cfa_offset 4
 3803              		.cfi_offset 7, -4
 3804 0002 83B0     		sub	sp, sp, #12
 3805              	.LCFI128:
 3806              		.cfi_def_cfa_offset 16
 3807 0004 00AF     		add	r7, sp, #0
 3808              	.LCFI129:
 3809              		.cfi_def_cfa_register 7
 3810 0006 7860     		str	r0, [r7, #4]
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3811              		.loc 1 2308 0
 3812 0008 00BF     		nop
 3813 000a 0C37     		adds	r7, r7, #12
 3814              	.LCFI130:
 3815              		.cfi_def_cfa_offset 4
 3816 000c BD46     		mov	sp, r7
 3817              	.LCFI131:
 3818              		.cfi_def_cfa_register 13
 3819              		@ sp needed
 3820 000e 5DF8047B 		ldr	r7, [sp], #4
 3821              	.LCFI132:
 3822              		.cfi_restore 7
 3823              		.cfi_def_cfa_offset 0
 3824 0012 7047     		bx	lr
 3825              		.cfi_endproc
 3826              	.LFE147:
 3828              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3829              		.align	1
 3830              		.weak	HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccfCzef7.s 			page 108


 3831              		.syntax unified
 3832              		.thumb
 3833              		.thumb_func
 3834              		.fpu fpv4-sp-d16
 3836              	HAL_UART_RxCpltCallback:
 3837              	.LFB148:
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3838              		.loc 1 2316 0
 3839              		.cfi_startproc
 3840              		@ args = 0, pretend = 0, frame = 8
 3841              		@ frame_needed = 1, uses_anonymous_args = 0
 3842              		@ link register save eliminated.
 3843 0000 80B4     		push	{r7}
 3844              	.LCFI133:
 3845              		.cfi_def_cfa_offset 4
 3846              		.cfi_offset 7, -4
 3847 0002 83B0     		sub	sp, sp, #12
 3848              	.LCFI134:
 3849              		.cfi_def_cfa_offset 16
 3850 0004 00AF     		add	r7, sp, #0
 3851              	.LCFI135:
 3852              		.cfi_def_cfa_register 7
 3853 0006 7860     		str	r0, [r7, #4]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3854              		.loc 1 2323 0
 3855 0008 00BF     		nop
 3856 000a 0C37     		adds	r7, r7, #12
 3857              	.LCFI136:
 3858              		.cfi_def_cfa_offset 4
 3859 000c BD46     		mov	sp, r7
 3860              	.LCFI137:
 3861              		.cfi_def_cfa_register 13
 3862              		@ sp needed
 3863 000e 5DF8047B 		ldr	r7, [sp], #4
 3864              	.LCFI138:
 3865              		.cfi_restore 7
 3866              		.cfi_def_cfa_offset 0
 3867 0012 7047     		bx	lr
 3868              		.cfi_endproc
 3869              	.LFE148:
 3871              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3872              		.align	1
 3873              		.weak	HAL_UART_RxHalfCpltCallback
 3874              		.syntax unified
ARM GAS  /tmp/ccfCzef7.s 			page 109


 3875              		.thumb
 3876              		.thumb_func
 3877              		.fpu fpv4-sp-d16
 3879              	HAL_UART_RxHalfCpltCallback:
 3880              	.LFB149:
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3881              		.loc 1 2331 0
 3882              		.cfi_startproc
 3883              		@ args = 0, pretend = 0, frame = 8
 3884              		@ frame_needed = 1, uses_anonymous_args = 0
 3885              		@ link register save eliminated.
 3886 0000 80B4     		push	{r7}
 3887              	.LCFI139:
 3888              		.cfi_def_cfa_offset 4
 3889              		.cfi_offset 7, -4
 3890 0002 83B0     		sub	sp, sp, #12
 3891              	.LCFI140:
 3892              		.cfi_def_cfa_offset 16
 3893 0004 00AF     		add	r7, sp, #0
 3894              	.LCFI141:
 3895              		.cfi_def_cfa_register 7
 3896 0006 7860     		str	r0, [r7, #4]
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3897              		.loc 1 2338 0
 3898 0008 00BF     		nop
 3899 000a 0C37     		adds	r7, r7, #12
 3900              	.LCFI142:
 3901              		.cfi_def_cfa_offset 4
 3902 000c BD46     		mov	sp, r7
 3903              	.LCFI143:
 3904              		.cfi_def_cfa_register 13
 3905              		@ sp needed
 3906 000e 5DF8047B 		ldr	r7, [sp], #4
 3907              	.LCFI144:
 3908              		.cfi_restore 7
 3909              		.cfi_def_cfa_offset 0
 3910 0012 7047     		bx	lr
 3911              		.cfi_endproc
 3912              	.LFE149:
 3914              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3915              		.align	1
 3916              		.weak	HAL_UART_ErrorCallback
 3917              		.syntax unified
 3918              		.thumb
ARM GAS  /tmp/ccfCzef7.s 			page 110


 3919              		.thumb_func
 3920              		.fpu fpv4-sp-d16
 3922              	HAL_UART_ErrorCallback:
 3923              	.LFB150:
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART error callback.
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3924              		.loc 1 2346 0
 3925              		.cfi_startproc
 3926              		@ args = 0, pretend = 0, frame = 8
 3927              		@ frame_needed = 1, uses_anonymous_args = 0
 3928              		@ link register save eliminated.
 3929 0000 80B4     		push	{r7}
 3930              	.LCFI145:
 3931              		.cfi_def_cfa_offset 4
 3932              		.cfi_offset 7, -4
 3933 0002 83B0     		sub	sp, sp, #12
 3934              	.LCFI146:
 3935              		.cfi_def_cfa_offset 16
 3936 0004 00AF     		add	r7, sp, #0
 3937              	.LCFI147:
 3938              		.cfi_def_cfa_register 7
 3939 0006 7860     		str	r0, [r7, #4]
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3940              		.loc 1 2353 0
 3941 0008 00BF     		nop
 3942 000a 0C37     		adds	r7, r7, #12
 3943              	.LCFI148:
 3944              		.cfi_def_cfa_offset 4
 3945 000c BD46     		mov	sp, r7
 3946              	.LCFI149:
 3947              		.cfi_def_cfa_register 13
 3948              		@ sp needed
 3949 000e 5DF8047B 		ldr	r7, [sp], #4
 3950              	.LCFI150:
 3951              		.cfi_restore 7
 3952              		.cfi_def_cfa_offset 0
 3953 0012 7047     		bx	lr
 3954              		.cfi_endproc
 3955              	.LFE150:
 3957              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3958              		.align	1
 3959              		.weak	HAL_UART_AbortCpltCallback
 3960              		.syntax unified
 3961              		.thumb
 3962              		.thumb_func
ARM GAS  /tmp/ccfCzef7.s 			page 111


 3963              		.fpu fpv4-sp-d16
 3965              	HAL_UART_AbortCpltCallback:
 3966              	.LFB151:
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3967              		.loc 1 2361 0
 3968              		.cfi_startproc
 3969              		@ args = 0, pretend = 0, frame = 8
 3970              		@ frame_needed = 1, uses_anonymous_args = 0
 3971              		@ link register save eliminated.
 3972 0000 80B4     		push	{r7}
 3973              	.LCFI151:
 3974              		.cfi_def_cfa_offset 4
 3975              		.cfi_offset 7, -4
 3976 0002 83B0     		sub	sp, sp, #12
 3977              	.LCFI152:
 3978              		.cfi_def_cfa_offset 16
 3979 0004 00AF     		add	r7, sp, #0
 3980              	.LCFI153:
 3981              		.cfi_def_cfa_register 7
 3982 0006 7860     		str	r0, [r7, #4]
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3983              		.loc 1 2368 0
 3984 0008 00BF     		nop
 3985 000a 0C37     		adds	r7, r7, #12
 3986              	.LCFI154:
 3987              		.cfi_def_cfa_offset 4
 3988 000c BD46     		mov	sp, r7
 3989              	.LCFI155:
 3990              		.cfi_def_cfa_register 13
 3991              		@ sp needed
 3992 000e 5DF8047B 		ldr	r7, [sp], #4
 3993              	.LCFI156:
 3994              		.cfi_restore 7
 3995              		.cfi_def_cfa_offset 0
 3996 0012 7047     		bx	lr
 3997              		.cfi_endproc
 3998              	.LFE151:
 4000              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4001              		.align	1
 4002              		.weak	HAL_UART_AbortTransmitCpltCallback
 4003              		.syntax unified
 4004              		.thumb
 4005              		.thumb_func
 4006              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccfCzef7.s 			page 112


 4008              	HAL_UART_AbortTransmitCpltCallback:
 4009              	.LFB152:
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4010              		.loc 1 2376 0
 4011              		.cfi_startproc
 4012              		@ args = 0, pretend = 0, frame = 8
 4013              		@ frame_needed = 1, uses_anonymous_args = 0
 4014              		@ link register save eliminated.
 4015 0000 80B4     		push	{r7}
 4016              	.LCFI157:
 4017              		.cfi_def_cfa_offset 4
 4018              		.cfi_offset 7, -4
 4019 0002 83B0     		sub	sp, sp, #12
 4020              	.LCFI158:
 4021              		.cfi_def_cfa_offset 16
 4022 0004 00AF     		add	r7, sp, #0
 4023              	.LCFI159:
 4024              		.cfi_def_cfa_register 7
 4025 0006 7860     		str	r0, [r7, #4]
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4026              		.loc 1 2383 0
 4027 0008 00BF     		nop
 4028 000a 0C37     		adds	r7, r7, #12
 4029              	.LCFI160:
 4030              		.cfi_def_cfa_offset 4
 4031 000c BD46     		mov	sp, r7
 4032              	.LCFI161:
 4033              		.cfi_def_cfa_register 13
 4034              		@ sp needed
 4035 000e 5DF8047B 		ldr	r7, [sp], #4
 4036              	.LCFI162:
 4037              		.cfi_restore 7
 4038              		.cfi_def_cfa_offset 0
 4039 0012 7047     		bx	lr
 4040              		.cfi_endproc
 4041              	.LFE152:
 4043              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4044              		.align	1
 4045              		.weak	HAL_UART_AbortReceiveCpltCallback
 4046              		.syntax unified
 4047              		.thumb
 4048              		.thumb_func
 4049              		.fpu fpv4-sp-d16
 4051              	HAL_UART_AbortReceiveCpltCallback:
ARM GAS  /tmp/ccfCzef7.s 			page 113


 4052              	.LFB153:
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4053              		.loc 1 2391 0
 4054              		.cfi_startproc
 4055              		@ args = 0, pretend = 0, frame = 8
 4056              		@ frame_needed = 1, uses_anonymous_args = 0
 4057              		@ link register save eliminated.
 4058 0000 80B4     		push	{r7}
 4059              	.LCFI163:
 4060              		.cfi_def_cfa_offset 4
 4061              		.cfi_offset 7, -4
 4062 0002 83B0     		sub	sp, sp, #12
 4063              	.LCFI164:
 4064              		.cfi_def_cfa_offset 16
 4065 0004 00AF     		add	r7, sp, #0
 4066              	.LCFI165:
 4067              		.cfi_def_cfa_register 7
 4068 0006 7860     		str	r0, [r7, #4]
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4069              		.loc 1 2398 0
 4070 0008 00BF     		nop
 4071 000a 0C37     		adds	r7, r7, #12
 4072              	.LCFI166:
 4073              		.cfi_def_cfa_offset 4
 4074 000c BD46     		mov	sp, r7
 4075              	.LCFI167:
 4076              		.cfi_def_cfa_register 13
 4077              		@ sp needed
 4078 000e 5DF8047B 		ldr	r7, [sp], #4
 4079              	.LCFI168:
 4080              		.cfi_restore 7
 4081              		.cfi_def_cfa_offset 0
 4082 0012 7047     		bx	lr
 4083              		.cfi_endproc
 4084              	.LFE153:
 4086              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 4087              		.align	1
 4088              		.global	HAL_UART_ReceiverTimeout_Config
 4089              		.syntax unified
 4090              		.thumb
 4091              		.thumb_func
 4092              		.fpu fpv4-sp-d16
 4094              	HAL_UART_ReceiverTimeout_Config:
 4095              	.LFB154:
ARM GAS  /tmp/ccfCzef7.s 			page 114


2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4096              		.loc 1 2438 0
 4097              		.cfi_startproc
 4098              		@ args = 0, pretend = 0, frame = 8
 4099              		@ frame_needed = 1, uses_anonymous_args = 0
 4100              		@ link register save eliminated.
 4101 0000 80B4     		push	{r7}
 4102              	.LCFI169:
 4103              		.cfi_def_cfa_offset 4
 4104              		.cfi_offset 7, -4
 4105 0002 83B0     		sub	sp, sp, #12
 4106              	.LCFI170:
 4107              		.cfi_def_cfa_offset 16
 4108 0004 00AF     		add	r7, sp, #0
 4109              	.LCFI171:
 4110              		.cfi_def_cfa_register 7
 4111 0006 7860     		str	r0, [r7, #4]
 4112 0008 3960     		str	r1, [r7]
ARM GAS  /tmp/ccfCzef7.s 			page 115


2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 4113              		.loc 1 2440 0
 4114 000a 7B68     		ldr	r3, [r7, #4]
 4115 000c 1B68     		ldr	r3, [r3]
 4116 000e 5B69     		ldr	r3, [r3, #20]
 4117 0010 03F07F41 		and	r1, r3, #-16777216
 4118 0014 7B68     		ldr	r3, [r7, #4]
 4119 0016 1B68     		ldr	r3, [r3]
 4120 0018 3A68     		ldr	r2, [r7]
 4121 001a 0A43     		orrs	r2, r2, r1
 4122 001c 5A61     		str	r2, [r3, #20]
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4123              		.loc 1 2441 0
 4124 001e 00BF     		nop
 4125 0020 0C37     		adds	r7, r7, #12
 4126              	.LCFI172:
 4127              		.cfi_def_cfa_offset 4
 4128 0022 BD46     		mov	sp, r7
 4129              	.LCFI173:
 4130              		.cfi_def_cfa_register 13
 4131              		@ sp needed
 4132 0024 5DF8047B 		ldr	r7, [sp], #4
 4133              	.LCFI174:
 4134              		.cfi_restore 7
 4135              		.cfi_def_cfa_offset 0
 4136 0028 7047     		bx	lr
 4137              		.cfi_endproc
 4138              	.LFE154:
 4140              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 4141              		.align	1
 4142              		.global	HAL_UART_EnableReceiverTimeout
 4143              		.syntax unified
 4144              		.thumb
 4145              		.thumb_func
 4146              		.fpu fpv4-sp-d16
 4148              	HAL_UART_EnableReceiverTimeout:
 4149              	.LFB155:
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4150              		.loc 1 2450 0
 4151              		.cfi_startproc
 4152              		@ args = 0, pretend = 0, frame = 8
 4153              		@ frame_needed = 1, uses_anonymous_args = 0
 4154              		@ link register save eliminated.
 4155 0000 80B4     		push	{r7}
 4156              	.LCFI175:
 4157              		.cfi_def_cfa_offset 4
 4158              		.cfi_offset 7, -4
 4159 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccfCzef7.s 			page 116


 4160              	.LCFI176:
 4161              		.cfi_def_cfa_offset 16
 4162 0004 00AF     		add	r7, sp, #0
 4163              	.LCFI177:
 4164              		.cfi_def_cfa_register 7
 4165 0006 7860     		str	r0, [r7, #4]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 4166              		.loc 1 2451 0
 4167 0008 7B68     		ldr	r3, [r7, #4]
 4168 000a 5B6F     		ldr	r3, [r3, #116]
 4169 000c 202B     		cmp	r3, #32
 4170 000e 1ED1     		bne	.L215
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 4171              		.loc 1 2454 0
 4172 0010 7B68     		ldr	r3, [r7, #4]
 4173 0012 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4174 0016 012B     		cmp	r3, #1
 4175 0018 01D1     		bne	.L216
 4176              		.loc 1 2454 0 is_stmt 0 discriminator 1
 4177 001a 0223     		movs	r3, #2
 4178 001c 18E0     		b	.L217
 4179              	.L216:
 4180              		.loc 1 2454 0 discriminator 2
 4181 001e 7B68     		ldr	r3, [r7, #4]
 4182 0020 0122     		movs	r2, #1
 4183 0022 83F87020 		strb	r2, [r3, #112]
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 4184              		.loc 1 2456 0 is_stmt 1 discriminator 2
 4185 0026 7B68     		ldr	r3, [r7, #4]
 4186 0028 2422     		movs	r2, #36
 4187 002a 5A67     		str	r2, [r3, #116]
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4188              		.loc 1 2459 0 discriminator 2
 4189 002c 7B68     		ldr	r3, [r7, #4]
 4190 002e 1B68     		ldr	r3, [r3]
 4191 0030 5A68     		ldr	r2, [r3, #4]
 4192 0032 7B68     		ldr	r3, [r7, #4]
 4193 0034 1B68     		ldr	r3, [r3]
 4194 0036 42F40002 		orr	r2, r2, #8388608
 4195 003a 5A60     		str	r2, [r3, #4]
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4196              		.loc 1 2461 0 discriminator 2
 4197 003c 7B68     		ldr	r3, [r7, #4]
 4198 003e 2022     		movs	r2, #32
 4199 0040 5A67     		str	r2, [r3, #116]
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 4200              		.loc 1 2464 0 discriminator 2
 4201 0042 7B68     		ldr	r3, [r7, #4]
 4202 0044 0022     		movs	r2, #0
ARM GAS  /tmp/ccfCzef7.s 			page 117


 4203 0046 83F87020 		strb	r2, [r3, #112]
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 4204              		.loc 1 2466 0 discriminator 2
 4205 004a 0023     		movs	r3, #0
 4206 004c 00E0     		b	.L217
 4207              	.L215:
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4208              		.loc 1 2470 0
 4209 004e 0223     		movs	r3, #2
 4210              	.L217:
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4211              		.loc 1 2472 0
 4212 0050 1846     		mov	r0, r3
 4213 0052 0C37     		adds	r7, r7, #12
 4214              	.LCFI178:
 4215              		.cfi_def_cfa_offset 4
 4216 0054 BD46     		mov	sp, r7
 4217              	.LCFI179:
 4218              		.cfi_def_cfa_register 13
 4219              		@ sp needed
 4220 0056 5DF8047B 		ldr	r7, [sp], #4
 4221              	.LCFI180:
 4222              		.cfi_restore 7
 4223              		.cfi_def_cfa_offset 0
 4224 005a 7047     		bx	lr
 4225              		.cfi_endproc
 4226              	.LFE155:
 4228              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 4229              		.align	1
 4230              		.global	HAL_UART_DisableReceiverTimeout
 4231              		.syntax unified
 4232              		.thumb
 4233              		.thumb_func
 4234              		.fpu fpv4-sp-d16
 4236              	HAL_UART_DisableReceiverTimeout:
 4237              	.LFB156:
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4238              		.loc 1 2481 0
 4239              		.cfi_startproc
 4240              		@ args = 0, pretend = 0, frame = 8
 4241              		@ frame_needed = 1, uses_anonymous_args = 0
 4242              		@ link register save eliminated.
 4243 0000 80B4     		push	{r7}
 4244              	.LCFI181:
ARM GAS  /tmp/ccfCzef7.s 			page 118


 4245              		.cfi_def_cfa_offset 4
 4246              		.cfi_offset 7, -4
 4247 0002 83B0     		sub	sp, sp, #12
 4248              	.LCFI182:
 4249              		.cfi_def_cfa_offset 16
 4250 0004 00AF     		add	r7, sp, #0
 4251              	.LCFI183:
 4252              		.cfi_def_cfa_register 7
 4253 0006 7860     		str	r0, [r7, #4]
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 4254              		.loc 1 2482 0
 4255 0008 7B68     		ldr	r3, [r7, #4]
 4256 000a 5B6F     		ldr	r3, [r3, #116]
 4257 000c 202B     		cmp	r3, #32
 4258 000e 1ED1     		bne	.L219
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 4259              		.loc 1 2485 0
 4260 0010 7B68     		ldr	r3, [r7, #4]
 4261 0012 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4262 0016 012B     		cmp	r3, #1
 4263 0018 01D1     		bne	.L220
 4264              		.loc 1 2485 0 is_stmt 0 discriminator 1
 4265 001a 0223     		movs	r3, #2
 4266 001c 18E0     		b	.L221
 4267              	.L220:
 4268              		.loc 1 2485 0 discriminator 2
 4269 001e 7B68     		ldr	r3, [r7, #4]
 4270 0020 0122     		movs	r2, #1
 4271 0022 83F87020 		strb	r2, [r3, #112]
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 4272              		.loc 1 2487 0 is_stmt 1 discriminator 2
 4273 0026 7B68     		ldr	r3, [r7, #4]
 4274 0028 2422     		movs	r2, #36
 4275 002a 5A67     		str	r2, [r3, #116]
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4276              		.loc 1 2490 0 discriminator 2
 4277 002c 7B68     		ldr	r3, [r7, #4]
 4278 002e 1B68     		ldr	r3, [r3]
 4279 0030 5A68     		ldr	r2, [r3, #4]
 4280 0032 7B68     		ldr	r3, [r7, #4]
 4281 0034 1B68     		ldr	r3, [r3]
 4282 0036 22F40002 		bic	r2, r2, #8388608
 4283 003a 5A60     		str	r2, [r3, #4]
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4284              		.loc 1 2492 0 discriminator 2
 4285 003c 7B68     		ldr	r3, [r7, #4]
 4286 003e 2022     		movs	r2, #32
 4287 0040 5A67     		str	r2, [r3, #116]
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccfCzef7.s 			page 119


 4288              		.loc 1 2495 0 discriminator 2
 4289 0042 7B68     		ldr	r3, [r7, #4]
 4290 0044 0022     		movs	r2, #0
 4291 0046 83F87020 		strb	r2, [r3, #112]
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 4292              		.loc 1 2497 0 discriminator 2
 4293 004a 0023     		movs	r3, #0
 4294 004c 00E0     		b	.L221
 4295              	.L219:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4296              		.loc 1 2501 0
 4297 004e 0223     		movs	r3, #2
 4298              	.L221:
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4299              		.loc 1 2503 0
 4300 0050 1846     		mov	r0, r3
 4301 0052 0C37     		adds	r7, r7, #12
 4302              	.LCFI184:
 4303              		.cfi_def_cfa_offset 4
 4304 0054 BD46     		mov	sp, r7
 4305              	.LCFI185:
 4306              		.cfi_def_cfa_register 13
 4307              		@ sp needed
 4308 0056 5DF8047B 		ldr	r7, [sp], #4
 4309              	.LCFI186:
 4310              		.cfi_restore 7
 4311              		.cfi_def_cfa_offset 0
 4312 005a 7047     		bx	lr
 4313              		.cfi_endproc
 4314              	.LFE156:
 4316              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4317              		.align	1
 4318              		.global	HAL_MultiProcessor_EnableMuteMode
 4319              		.syntax unified
 4320              		.thumb
 4321              		.thumb_func
 4322              		.fpu fpv4-sp-d16
 4324              	HAL_MultiProcessor_EnableMuteMode:
 4325              	.LFB157:
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4326              		.loc 1 2512 0
 4327              		.cfi_startproc
 4328              		@ args = 0, pretend = 0, frame = 8
 4329              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccfCzef7.s 			page 120


 4330 0000 80B5     		push	{r7, lr}
 4331              	.LCFI187:
 4332              		.cfi_def_cfa_offset 8
 4333              		.cfi_offset 7, -8
 4334              		.cfi_offset 14, -4
 4335 0002 82B0     		sub	sp, sp, #8
 4336              	.LCFI188:
 4337              		.cfi_def_cfa_offset 16
 4338 0004 00AF     		add	r7, sp, #0
 4339              	.LCFI189:
 4340              		.cfi_def_cfa_register 7
 4341 0006 7860     		str	r0, [r7, #4]
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4342              		.loc 1 2513 0
 4343 0008 7B68     		ldr	r3, [r7, #4]
 4344 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4345 000e 012B     		cmp	r3, #1
 4346 0010 01D1     		bne	.L223
 4347              		.loc 1 2513 0 is_stmt 0 discriminator 1
 4348 0012 0223     		movs	r3, #2
 4349 0014 15E0     		b	.L224
 4350              	.L223:
 4351              		.loc 1 2513 0 discriminator 2
 4352 0016 7B68     		ldr	r3, [r7, #4]
 4353 0018 0122     		movs	r2, #1
 4354 001a 83F87020 		strb	r2, [r3, #112]
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4355              		.loc 1 2515 0 is_stmt 1 discriminator 2
 4356 001e 7B68     		ldr	r3, [r7, #4]
 4357 0020 2422     		movs	r2, #36
 4358 0022 5A67     		str	r2, [r3, #116]
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4359              		.loc 1 2518 0 discriminator 2
 4360 0024 7B68     		ldr	r3, [r7, #4]
 4361 0026 1B68     		ldr	r3, [r3]
 4362 0028 1A68     		ldr	r2, [r3]
 4363 002a 7B68     		ldr	r3, [r7, #4]
 4364 002c 1B68     		ldr	r3, [r3]
 4365 002e 42F40052 		orr	r2, r2, #8192
 4366 0032 1A60     		str	r2, [r3]
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4367              		.loc 1 2520 0 discriminator 2
 4368 0034 7B68     		ldr	r3, [r7, #4]
 4369 0036 2022     		movs	r2, #32
 4370 0038 5A67     		str	r2, [r3, #116]
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4371              		.loc 1 2522 0 discriminator 2
 4372 003a 7868     		ldr	r0, [r7, #4]
 4373 003c FFF7FEFF 		bl	UART_CheckIdleState
 4374 0040 0346     		mov	r3, r0
 4375              	.L224:
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccfCzef7.s 			page 121


 4376              		.loc 1 2523 0
 4377 0042 1846     		mov	r0, r3
 4378 0044 0837     		adds	r7, r7, #8
 4379              	.LCFI190:
 4380              		.cfi_def_cfa_offset 8
 4381 0046 BD46     		mov	sp, r7
 4382              	.LCFI191:
 4383              		.cfi_def_cfa_register 13
 4384              		@ sp needed
 4385 0048 80BD     		pop	{r7, pc}
 4386              		.cfi_endproc
 4387              	.LFE157:
 4389              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4390              		.align	1
 4391              		.global	HAL_MultiProcessor_DisableMuteMode
 4392              		.syntax unified
 4393              		.thumb
 4394              		.thumb_func
 4395              		.fpu fpv4-sp-d16
 4397              	HAL_MultiProcessor_DisableMuteMode:
 4398              	.LFB158:
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4399              		.loc 1 2532 0
 4400              		.cfi_startproc
 4401              		@ args = 0, pretend = 0, frame = 8
 4402              		@ frame_needed = 1, uses_anonymous_args = 0
 4403 0000 80B5     		push	{r7, lr}
 4404              	.LCFI192:
 4405              		.cfi_def_cfa_offset 8
 4406              		.cfi_offset 7, -8
 4407              		.cfi_offset 14, -4
 4408 0002 82B0     		sub	sp, sp, #8
 4409              	.LCFI193:
 4410              		.cfi_def_cfa_offset 16
 4411 0004 00AF     		add	r7, sp, #0
 4412              	.LCFI194:
 4413              		.cfi_def_cfa_register 7
 4414 0006 7860     		str	r0, [r7, #4]
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4415              		.loc 1 2533 0
 4416 0008 7B68     		ldr	r3, [r7, #4]
 4417 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4418 000e 012B     		cmp	r3, #1
 4419 0010 01D1     		bne	.L226
 4420              		.loc 1 2533 0 is_stmt 0 discriminator 1
 4421 0012 0223     		movs	r3, #2
 4422 0014 15E0     		b	.L227
 4423              	.L226:
 4424              		.loc 1 2533 0 discriminator 2
ARM GAS  /tmp/ccfCzef7.s 			page 122


 4425 0016 7B68     		ldr	r3, [r7, #4]
 4426 0018 0122     		movs	r2, #1
 4427 001a 83F87020 		strb	r2, [r3, #112]
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4428              		.loc 1 2535 0 is_stmt 1 discriminator 2
 4429 001e 7B68     		ldr	r3, [r7, #4]
 4430 0020 2422     		movs	r2, #36
 4431 0022 5A67     		str	r2, [r3, #116]
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4432              		.loc 1 2538 0 discriminator 2
 4433 0024 7B68     		ldr	r3, [r7, #4]
 4434 0026 1B68     		ldr	r3, [r3]
 4435 0028 1A68     		ldr	r2, [r3]
 4436 002a 7B68     		ldr	r3, [r7, #4]
 4437 002c 1B68     		ldr	r3, [r3]
 4438 002e 22F40052 		bic	r2, r2, #8192
 4439 0032 1A60     		str	r2, [r3]
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4440              		.loc 1 2540 0 discriminator 2
 4441 0034 7B68     		ldr	r3, [r7, #4]
 4442 0036 2022     		movs	r2, #32
 4443 0038 5A67     		str	r2, [r3, #116]
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4444              		.loc 1 2542 0 discriminator 2
 4445 003a 7868     		ldr	r0, [r7, #4]
 4446 003c FFF7FEFF 		bl	UART_CheckIdleState
 4447 0040 0346     		mov	r3, r0
 4448              	.L227:
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4449              		.loc 1 2543 0
 4450 0042 1846     		mov	r0, r3
 4451 0044 0837     		adds	r7, r7, #8
 4452              	.LCFI195:
 4453              		.cfi_def_cfa_offset 8
 4454 0046 BD46     		mov	sp, r7
 4455              	.LCFI196:
 4456              		.cfi_def_cfa_register 13
 4457              		@ sp needed
 4458 0048 80BD     		pop	{r7, pc}
 4459              		.cfi_endproc
 4460              	.LFE158:
 4462              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4463              		.align	1
 4464              		.global	HAL_MultiProcessor_EnterMuteMode
 4465              		.syntax unified
 4466              		.thumb
 4467              		.thumb_func
 4468              		.fpu fpv4-sp-d16
 4470              	HAL_MultiProcessor_EnterMuteMode:
 4471              	.LFB159:
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccfCzef7.s 			page 123


2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4472              		.loc 1 2552 0
 4473              		.cfi_startproc
 4474              		@ args = 0, pretend = 0, frame = 8
 4475              		@ frame_needed = 1, uses_anonymous_args = 0
 4476              		@ link register save eliminated.
 4477 0000 80B4     		push	{r7}
 4478              	.LCFI197:
 4479              		.cfi_def_cfa_offset 4
 4480              		.cfi_offset 7, -4
 4481 0002 83B0     		sub	sp, sp, #12
 4482              	.LCFI198:
 4483              		.cfi_def_cfa_offset 16
 4484 0004 00AF     		add	r7, sp, #0
 4485              	.LCFI199:
 4486              		.cfi_def_cfa_register 7
 4487 0006 7860     		str	r0, [r7, #4]
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4488              		.loc 1 2553 0
 4489 0008 7B68     		ldr	r3, [r7, #4]
 4490 000a 1B68     		ldr	r3, [r3]
 4491 000c 9A69     		ldr	r2, [r3, #24]
 4492 000e 7B68     		ldr	r3, [r7, #4]
 4493 0010 1B68     		ldr	r3, [r3]
 4494 0012 42F00402 		orr	r2, r2, #4
 4495 0016 9A61     		str	r2, [r3, #24]
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4496              		.loc 1 2554 0
 4497 0018 00BF     		nop
 4498 001a 0C37     		adds	r7, r7, #12
 4499              	.LCFI200:
 4500              		.cfi_def_cfa_offset 4
 4501 001c BD46     		mov	sp, r7
 4502              	.LCFI201:
 4503              		.cfi_def_cfa_register 13
 4504              		@ sp needed
 4505 001e 5DF8047B 		ldr	r7, [sp], #4
 4506              	.LCFI202:
 4507              		.cfi_restore 7
 4508              		.cfi_def_cfa_offset 0
 4509 0022 7047     		bx	lr
 4510              		.cfi_endproc
 4511              	.LFE159:
 4513              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4514              		.align	1
 4515              		.global	HAL_HalfDuplex_EnableTransmitter
 4516              		.syntax unified
 4517              		.thumb
 4518              		.thumb_func
 4519              		.fpu fpv4-sp-d16
 4521              	HAL_HalfDuplex_EnableTransmitter:
ARM GAS  /tmp/ccfCzef7.s 			page 124


 4522              	.LFB160:
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4523              		.loc 1 2562 0
 4524              		.cfi_startproc
 4525              		@ args = 0, pretend = 0, frame = 8
 4526              		@ frame_needed = 1, uses_anonymous_args = 0
 4527              		@ link register save eliminated.
 4528 0000 80B4     		push	{r7}
 4529              	.LCFI203:
 4530              		.cfi_def_cfa_offset 4
 4531              		.cfi_offset 7, -4
 4532 0002 83B0     		sub	sp, sp, #12
 4533              	.LCFI204:
 4534              		.cfi_def_cfa_offset 16
 4535 0004 00AF     		add	r7, sp, #0
 4536              	.LCFI205:
 4537              		.cfi_def_cfa_register 7
 4538 0006 7860     		str	r0, [r7, #4]
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4539              		.loc 1 2563 0
 4540 0008 7B68     		ldr	r3, [r7, #4]
 4541 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4542 000e 012B     		cmp	r3, #1
 4543 0010 01D1     		bne	.L230
 4544              		.loc 1 2563 0 is_stmt 0 discriminator 1
 4545 0012 0223     		movs	r3, #2
 4546 0014 1EE0     		b	.L231
 4547              	.L230:
 4548              		.loc 1 2563 0 discriminator 2
 4549 0016 7B68     		ldr	r3, [r7, #4]
 4550 0018 0122     		movs	r2, #1
 4551 001a 83F87020 		strb	r2, [r3, #112]
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4552              		.loc 1 2564 0 is_stmt 1 discriminator 2
 4553 001e 7B68     		ldr	r3, [r7, #4]
 4554 0020 2422     		movs	r2, #36
 4555 0022 5A67     		str	r2, [r3, #116]
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4556              		.loc 1 2567 0 discriminator 2
 4557 0024 7B68     		ldr	r3, [r7, #4]
 4558 0026 1B68     		ldr	r3, [r3]
 4559 0028 1A68     		ldr	r2, [r3]
 4560 002a 7B68     		ldr	r3, [r7, #4]
 4561 002c 1B68     		ldr	r3, [r3]
 4562 002e 22F00C02 		bic	r2, r2, #12
 4563 0032 1A60     		str	r2, [r3]
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
ARM GAS  /tmp/ccfCzef7.s 			page 125


2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4564              		.loc 1 2570 0 discriminator 2
 4565 0034 7B68     		ldr	r3, [r7, #4]
 4566 0036 1B68     		ldr	r3, [r3]
 4567 0038 1A68     		ldr	r2, [r3]
 4568 003a 7B68     		ldr	r3, [r7, #4]
 4569 003c 1B68     		ldr	r3, [r3]
 4570 003e 42F00802 		orr	r2, r2, #8
 4571 0042 1A60     		str	r2, [r3]
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4572              		.loc 1 2572 0 discriminator 2
 4573 0044 7B68     		ldr	r3, [r7, #4]
 4574 0046 2022     		movs	r2, #32
 4575 0048 5A67     		str	r2, [r3, #116]
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4576              		.loc 1 2574 0 discriminator 2
 4577 004a 7B68     		ldr	r3, [r7, #4]
 4578 004c 0022     		movs	r2, #0
 4579 004e 83F87020 		strb	r2, [r3, #112]
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4580              		.loc 1 2576 0 discriminator 2
 4581 0052 0023     		movs	r3, #0
 4582              	.L231:
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4583              		.loc 1 2577 0
 4584 0054 1846     		mov	r0, r3
 4585 0056 0C37     		adds	r7, r7, #12
 4586              	.LCFI206:
 4587              		.cfi_def_cfa_offset 4
 4588 0058 BD46     		mov	sp, r7
 4589              	.LCFI207:
 4590              		.cfi_def_cfa_register 13
 4591              		@ sp needed
 4592 005a 5DF8047B 		ldr	r7, [sp], #4
 4593              	.LCFI208:
 4594              		.cfi_restore 7
 4595              		.cfi_def_cfa_offset 0
 4596 005e 7047     		bx	lr
 4597              		.cfi_endproc
 4598              	.LFE160:
 4600              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4601              		.align	1
 4602              		.global	HAL_HalfDuplex_EnableReceiver
 4603              		.syntax unified
 4604              		.thumb
 4605              		.thumb_func
 4606              		.fpu fpv4-sp-d16
 4608              	HAL_HalfDuplex_EnableReceiver:
 4609              	.LFB161:
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
ARM GAS  /tmp/ccfCzef7.s 			page 126


2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4610              		.loc 1 2585 0
 4611              		.cfi_startproc
 4612              		@ args = 0, pretend = 0, frame = 8
 4613              		@ frame_needed = 1, uses_anonymous_args = 0
 4614              		@ link register save eliminated.
 4615 0000 80B4     		push	{r7}
 4616              	.LCFI209:
 4617              		.cfi_def_cfa_offset 4
 4618              		.cfi_offset 7, -4
 4619 0002 83B0     		sub	sp, sp, #12
 4620              	.LCFI210:
 4621              		.cfi_def_cfa_offset 16
 4622 0004 00AF     		add	r7, sp, #0
 4623              	.LCFI211:
 4624              		.cfi_def_cfa_register 7
 4625 0006 7860     		str	r0, [r7, #4]
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4626              		.loc 1 2586 0
 4627 0008 7B68     		ldr	r3, [r7, #4]
 4628 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4629 000e 012B     		cmp	r3, #1
 4630 0010 01D1     		bne	.L233
 4631              		.loc 1 2586 0 is_stmt 0 discriminator 1
 4632 0012 0223     		movs	r3, #2
 4633 0014 1EE0     		b	.L234
 4634              	.L233:
 4635              		.loc 1 2586 0 discriminator 2
 4636 0016 7B68     		ldr	r3, [r7, #4]
 4637 0018 0122     		movs	r2, #1
 4638 001a 83F87020 		strb	r2, [r3, #112]
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4639              		.loc 1 2587 0 is_stmt 1 discriminator 2
 4640 001e 7B68     		ldr	r3, [r7, #4]
 4641 0020 2422     		movs	r2, #36
 4642 0022 5A67     		str	r2, [r3, #116]
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4643              		.loc 1 2590 0 discriminator 2
 4644 0024 7B68     		ldr	r3, [r7, #4]
 4645 0026 1B68     		ldr	r3, [r3]
 4646 0028 1A68     		ldr	r2, [r3]
 4647 002a 7B68     		ldr	r3, [r7, #4]
 4648 002c 1B68     		ldr	r3, [r3]
 4649 002e 22F00C02 		bic	r2, r2, #12
 4650 0032 1A60     		str	r2, [r3]
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4651              		.loc 1 2593 0 discriminator 2
 4652 0034 7B68     		ldr	r3, [r7, #4]
 4653 0036 1B68     		ldr	r3, [r3]
 4654 0038 1A68     		ldr	r2, [r3]
 4655 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 127


 4656 003c 1B68     		ldr	r3, [r3]
 4657 003e 42F00402 		orr	r2, r2, #4
 4658 0042 1A60     		str	r2, [r3]
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4659              		.loc 1 2595 0 discriminator 2
 4660 0044 7B68     		ldr	r3, [r7, #4]
 4661 0046 2022     		movs	r2, #32
 4662 0048 5A67     		str	r2, [r3, #116]
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4663              		.loc 1 2597 0 discriminator 2
 4664 004a 7B68     		ldr	r3, [r7, #4]
 4665 004c 0022     		movs	r2, #0
 4666 004e 83F87020 		strb	r2, [r3, #112]
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4667              		.loc 1 2599 0 discriminator 2
 4668 0052 0023     		movs	r3, #0
 4669              	.L234:
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4670              		.loc 1 2600 0
 4671 0054 1846     		mov	r0, r3
 4672 0056 0C37     		adds	r7, r7, #12
 4673              	.LCFI212:
 4674              		.cfi_def_cfa_offset 4
 4675 0058 BD46     		mov	sp, r7
 4676              	.LCFI213:
 4677              		.cfi_def_cfa_register 13
 4678              		@ sp needed
 4679 005a 5DF8047B 		ldr	r7, [sp], #4
 4680              	.LCFI214:
 4681              		.cfi_restore 7
 4682              		.cfi_def_cfa_offset 0
 4683 005e 7047     		bx	lr
 4684              		.cfi_endproc
 4685              	.LFE161:
 4687              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4688              		.align	1
 4689              		.global	HAL_LIN_SendBreak
 4690              		.syntax unified
 4691              		.thumb
 4692              		.thumb_func
 4693              		.fpu fpv4-sp-d16
 4695              	HAL_LIN_SendBreak:
 4696              	.LFB162:
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4697              		.loc 1 2609 0
 4698              		.cfi_startproc
ARM GAS  /tmp/ccfCzef7.s 			page 128


 4699              		@ args = 0, pretend = 0, frame = 8
 4700              		@ frame_needed = 1, uses_anonymous_args = 0
 4701              		@ link register save eliminated.
 4702 0000 80B4     		push	{r7}
 4703              	.LCFI215:
 4704              		.cfi_def_cfa_offset 4
 4705              		.cfi_offset 7, -4
 4706 0002 83B0     		sub	sp, sp, #12
 4707              	.LCFI216:
 4708              		.cfi_def_cfa_offset 16
 4709 0004 00AF     		add	r7, sp, #0
 4710              	.LCFI217:
 4711              		.cfi_def_cfa_register 7
 4712 0006 7860     		str	r0, [r7, #4]
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4713              		.loc 1 2613 0
 4714 0008 7B68     		ldr	r3, [r7, #4]
 4715 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4716 000e 012B     		cmp	r3, #1
 4717 0010 01D1     		bne	.L236
 4718              		.loc 1 2613 0 is_stmt 0 discriminator 1
 4719 0012 0223     		movs	r3, #2
 4720 0014 16E0     		b	.L237
 4721              	.L236:
 4722              		.loc 1 2613 0 discriminator 2
 4723 0016 7B68     		ldr	r3, [r7, #4]
 4724 0018 0122     		movs	r2, #1
 4725 001a 83F87020 		strb	r2, [r3, #112]
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4726              		.loc 1 2615 0 is_stmt 1 discriminator 2
 4727 001e 7B68     		ldr	r3, [r7, #4]
 4728 0020 2422     		movs	r2, #36
 4729 0022 5A67     		str	r2, [r3, #116]
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 4730              		.loc 1 2618 0 discriminator 2
 4731 0024 7B68     		ldr	r3, [r7, #4]
 4732 0026 1B68     		ldr	r3, [r3]
 4733 0028 9A69     		ldr	r2, [r3, #24]
 4734 002a 7B68     		ldr	r3, [r7, #4]
 4735 002c 1B68     		ldr	r3, [r3]
 4736 002e 42F00202 		orr	r2, r2, #2
 4737 0032 9A61     		str	r2, [r3, #24]
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4738              		.loc 1 2620 0 discriminator 2
 4739 0034 7B68     		ldr	r3, [r7, #4]
 4740 0036 2022     		movs	r2, #32
 4741 0038 5A67     		str	r2, [r3, #116]
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4742              		.loc 1 2622 0 discriminator 2
ARM GAS  /tmp/ccfCzef7.s 			page 129


 4743 003a 7B68     		ldr	r3, [r7, #4]
 4744 003c 0022     		movs	r2, #0
 4745 003e 83F87020 		strb	r2, [r3, #112]
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4746              		.loc 1 2624 0 discriminator 2
 4747 0042 0023     		movs	r3, #0
 4748              	.L237:
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4749              		.loc 1 2625 0
 4750 0044 1846     		mov	r0, r3
 4751 0046 0C37     		adds	r7, r7, #12
 4752              	.LCFI218:
 4753              		.cfi_def_cfa_offset 4
 4754 0048 BD46     		mov	sp, r7
 4755              	.LCFI219:
 4756              		.cfi_def_cfa_register 13
 4757              		@ sp needed
 4758 004a 5DF8047B 		ldr	r7, [sp], #4
 4759              	.LCFI220:
 4760              		.cfi_restore 7
 4761              		.cfi_def_cfa_offset 0
 4762 004e 7047     		bx	lr
 4763              		.cfi_endproc
 4764              	.LFE162:
 4766              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4767              		.align	1
 4768              		.global	HAL_UART_GetState
 4769              		.syntax unified
 4770              		.thumb
 4771              		.thumb_func
 4772              		.fpu fpv4-sp-d16
 4774              	HAL_UART_GetState:
 4775              	.LFB163:
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Return the UART handle state.
ARM GAS  /tmp/ccfCzef7.s 			page 130


2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4776              		.loc 1 2654 0
 4777              		.cfi_startproc
 4778              		@ args = 0, pretend = 0, frame = 16
 4779              		@ frame_needed = 1, uses_anonymous_args = 0
 4780              		@ link register save eliminated.
 4781 0000 80B4     		push	{r7}
 4782              	.LCFI221:
 4783              		.cfi_def_cfa_offset 4
 4784              		.cfi_offset 7, -4
 4785 0002 85B0     		sub	sp, sp, #20
 4786              	.LCFI222:
 4787              		.cfi_def_cfa_offset 24
 4788 0004 00AF     		add	r7, sp, #0
 4789              	.LCFI223:
 4790              		.cfi_def_cfa_register 7
 4791 0006 7860     		str	r0, [r7, #4]
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1;
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp2;
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
 4792              		.loc 1 2657 0
 4793 0008 7B68     		ldr	r3, [r7, #4]
 4794 000a 5B6F     		ldr	r3, [r3, #116]
 4795 000c FB60     		str	r3, [r7, #12]
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 4796              		.loc 1 2658 0
 4797 000e 7B68     		ldr	r3, [r7, #4]
 4798 0010 9B6F     		ldr	r3, [r3, #120]
 4799 0012 BB60     		str	r3, [r7, #8]
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4800              		.loc 1 2660 0
 4801 0014 FA68     		ldr	r2, [r7, #12]
 4802 0016 BB68     		ldr	r3, [r7, #8]
 4803 0018 1343     		orrs	r3, r3, r2
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4804              		.loc 1 2661 0
 4805 001a 1846     		mov	r0, r3
 4806 001c 1437     		adds	r7, r7, #20
 4807              	.LCFI224:
 4808              		.cfi_def_cfa_offset 4
 4809 001e BD46     		mov	sp, r7
 4810              	.LCFI225:
 4811              		.cfi_def_cfa_register 13
 4812              		@ sp needed
 4813 0020 5DF8047B 		ldr	r7, [sp], #4
 4814              	.LCFI226:
 4815              		.cfi_restore 7
 4816              		.cfi_def_cfa_offset 0
 4817 0024 7047     		bx	lr
 4818              		.cfi_endproc
 4819              	.LFE163:
ARM GAS  /tmp/ccfCzef7.s 			page 131


 4821              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4822              		.align	1
 4823              		.global	HAL_UART_GetError
 4824              		.syntax unified
 4825              		.thumb
 4826              		.thumb_func
 4827              		.fpu fpv4-sp-d16
 4829              	HAL_UART_GetError:
 4830              	.LFB164:
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4831              		.loc 1 2670 0
 4832              		.cfi_startproc
 4833              		@ args = 0, pretend = 0, frame = 8
 4834              		@ frame_needed = 1, uses_anonymous_args = 0
 4835              		@ link register save eliminated.
 4836 0000 80B4     		push	{r7}
 4837              	.LCFI227:
 4838              		.cfi_def_cfa_offset 4
 4839              		.cfi_offset 7, -4
 4840 0002 83B0     		sub	sp, sp, #12
 4841              	.LCFI228:
 4842              		.cfi_def_cfa_offset 16
 4843 0004 00AF     		add	r7, sp, #0
 4844              	.LCFI229:
 4845              		.cfi_def_cfa_register 7
 4846 0006 7860     		str	r0, [r7, #4]
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 4847              		.loc 1 2671 0
 4848 0008 7B68     		ldr	r3, [r7, #4]
 4849 000a DB6F     		ldr	r3, [r3, #124]
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4850              		.loc 1 2672 0
 4851 000c 1846     		mov	r0, r3
 4852 000e 0C37     		adds	r7, r7, #12
 4853              	.LCFI230:
 4854              		.cfi_def_cfa_offset 4
 4855 0010 BD46     		mov	sp, r7
 4856              	.LCFI231:
 4857              		.cfi_def_cfa_register 13
 4858              		@ sp needed
 4859 0012 5DF8047B 		ldr	r7, [sp], #4
 4860              	.LCFI232:
 4861              		.cfi_restore 7
 4862              		.cfi_def_cfa_offset 0
 4863 0016 7047     		bx	lr
 4864              		.cfi_endproc
 4865              	.LFE164:
 4867              		.section	.text.UART_SetConfig,"ax",%progbits
 4868              		.align	1
ARM GAS  /tmp/ccfCzef7.s 			page 132


 4869              		.global	UART_SetConfig
 4870              		.syntax unified
 4871              		.thumb
 4872              		.thumb_func
 4873              		.fpu fpv4-sp-d16
 4875              	UART_SetConfig:
 4876              	.LFB165:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval none
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init the UART Callback settings */
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4877              		.loc 1 2713 0
 4878              		.cfi_startproc
 4879              		@ args = 0, pretend = 0, frame = 32
 4880              		@ frame_needed = 1, uses_anonymous_args = 0
 4881 0000 80B5     		push	{r7, lr}
 4882              	.LCFI233:
 4883              		.cfi_def_cfa_offset 8
 4884              		.cfi_offset 7, -8
 4885              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfCzef7.s 			page 133


 4886 0002 88B0     		sub	sp, sp, #32
 4887              	.LCFI234:
 4888              		.cfi_def_cfa_offset 40
 4889 0004 00AF     		add	r7, sp, #0
 4890              	.LCFI235:
 4891              		.cfi_def_cfa_register 7
 4892 0006 7860     		str	r0, [r7, #4]
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg;
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp;
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
 4893              		.loc 1 2717 0
 4894 0008 0023     		movs	r3, #0
 4895 000a BB61     		str	r3, [r7, #24]
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4896              		.loc 1 2718 0
 4897 000c 0023     		movs	r3, #0
 4898 000e FB75     		strb	r3, [r7, #23]
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4899              		.loc 1 2739 0
 4900 0010 7B68     		ldr	r3, [r7, #4]
 4901 0012 9A68     		ldr	r2, [r3, #8]
 4902 0014 7B68     		ldr	r3, [r7, #4]
 4903 0016 1B69     		ldr	r3, [r3, #16]
 4904 0018 1A43     		orrs	r2, r2, r3
 4905 001a 7B68     		ldr	r3, [r7, #4]
 4906 001c 5B69     		ldr	r3, [r3, #20]
 4907 001e 1A43     		orrs	r2, r2, r3
 4908 0020 7B68     		ldr	r3, [r7, #4]
 4909 0022 DB69     		ldr	r3, [r3, #28]
 4910 0024 1343     		orrs	r3, r3, r2
 4911 0026 3B61     		str	r3, [r7, #16]
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4912              		.loc 1 2740 0
 4913 0028 7B68     		ldr	r3, [r7, #4]
 4914 002a 1B68     		ldr	r3, [r3]
 4915 002c 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 134


 4916 002e A24B     		ldr	r3, .L276
 4917 0030 1340     		ands	r3, r3, r2
 4918 0032 7A68     		ldr	r2, [r7, #4]
 4919 0034 1268     		ldr	r2, [r2]
 4920 0036 3969     		ldr	r1, [r7, #16]
 4921 0038 0B43     		orrs	r3, r3, r1
 4922 003a 1360     		str	r3, [r2]
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to huart->Init.StopBits value */
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4923              		.loc 1 2745 0
 4924 003c 7B68     		ldr	r3, [r7, #4]
 4925 003e 1B68     		ldr	r3, [r3]
 4926 0040 5B68     		ldr	r3, [r3, #4]
 4927 0042 23F44051 		bic	r1, r3, #12288
 4928 0046 7B68     		ldr	r3, [r7, #4]
 4929 0048 DA68     		ldr	r2, [r3, #12]
 4930 004a 7B68     		ldr	r3, [r7, #4]
 4931 004c 1B68     		ldr	r3, [r3]
 4932 004e 0A43     		orrs	r2, r2, r1
 4933 0050 5A60     		str	r2, [r3, #4]
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 4934              		.loc 1 2753 0
 4935 0052 7B68     		ldr	r3, [r7, #4]
 4936 0054 9B69     		ldr	r3, [r3, #24]
 4937 0056 3B61     		str	r3, [r7, #16]
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
 4938              		.loc 1 2755 0
 4939 0058 7B68     		ldr	r3, [r7, #4]
 4940 005a 1B6A     		ldr	r3, [r3, #32]
 4941 005c 3A69     		ldr	r2, [r7, #16]
 4942 005e 1343     		orrs	r3, r3, r2
 4943 0060 3B61     		str	r3, [r7, #16]
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 4944              		.loc 1 2756 0
 4945 0062 7B68     		ldr	r3, [r7, #4]
 4946 0064 1B68     		ldr	r3, [r3]
 4947 0066 9B68     		ldr	r3, [r3, #8]
 4948 0068 23F43061 		bic	r1, r3, #2816
 4949 006c 7B68     		ldr	r3, [r7, #4]
 4950 006e 1B68     		ldr	r3, [r3]
 4951 0070 3A69     		ldr	r2, [r7, #16]
 4952 0072 0A43     		orrs	r2, r2, r1
 4953 0074 9A60     		str	r2, [r3, #8]
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
ARM GAS  /tmp/ccfCzef7.s 			page 135


2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4954              		.loc 1 2760 0
 4955 0076 7B68     		ldr	r3, [r7, #4]
 4956 0078 1B68     		ldr	r3, [r3]
 4957 007a 904A     		ldr	r2, .L276+4
 4958 007c 9342     		cmp	r3, r2
 4959 007e 21D1     		bne	.L243
 4960              		.loc 1 2760 0 is_stmt 0 discriminator 1
 4961 0080 8F4B     		ldr	r3, .L276+8
 4962 0082 1B6B     		ldr	r3, [r3, #48]
 4963 0084 03F00303 		and	r3, r3, #3
 4964 0088 032B     		cmp	r3, #3
 4965 008a 17D8     		bhi	.L244
 4966 008c 01A2     		adr	r2, .L246
 4967 008e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4968 0092 00BF     		.p2align 2
 4969              	.L246:
 4970 0094 A5000000 		.word	.L245+1
 4971 0098 B1000000 		.word	.L247+1
 4972 009c B7000000 		.word	.L248+1
 4973 00a0 AB000000 		.word	.L249+1
 4974              		.p2align 1
 4975              	.L245:
 4976              		.loc 1 2760 0 discriminator 4
 4977 00a4 0023     		movs	r3, #0
 4978 00a6 FB77     		strb	r3, [r7, #31]
 4979 00a8 1EE0     		b	.L251
 4980              	.L249:
 4981              		.loc 1 2760 0 discriminator 7
 4982 00aa 0223     		movs	r3, #2
 4983 00ac FB77     		strb	r3, [r7, #31]
 4984 00ae 1BE0     		b	.L251
 4985              	.L247:
 4986              		.loc 1 2760 0 discriminator 5
 4987 00b0 0423     		movs	r3, #4
 4988 00b2 FB77     		strb	r3, [r7, #31]
 4989 00b4 18E0     		b	.L251
 4990              	.L248:
 4991              		.loc 1 2760 0 discriminator 6
 4992 00b6 0823     		movs	r3, #8
 4993 00b8 FB77     		strb	r3, [r7, #31]
 4994 00ba 15E0     		b	.L251
 4995              	.L244:
 4996              		.loc 1 2760 0 discriminator 3
 4997 00bc 1023     		movs	r3, #16
 4998 00be FB77     		strb	r3, [r7, #31]
 4999 00c0 00BF     		nop
 5000 00c2 11E0     		b	.L251
 5001              	.L243:
 5002              		.loc 1 2760 0 discriminator 2
 5003 00c4 7B68     		ldr	r3, [r7, #4]
 5004 00c6 1B68     		ldr	r3, [r3]
 5005 00c8 7E4A     		ldr	r2, .L276+12
 5006 00ca 9342     		cmp	r3, r2
 5007 00cc 02D1     		bne	.L252
 5008              		.loc 1 2760 0 discriminator 13
 5009 00ce 0023     		movs	r3, #0
ARM GAS  /tmp/ccfCzef7.s 			page 136


 5010 00d0 FB77     		strb	r3, [r7, #31]
 5011 00d2 09E0     		b	.L251
 5012              	.L252:
 5013              		.loc 1 2760 0 discriminator 14
 5014 00d4 7B68     		ldr	r3, [r7, #4]
 5015 00d6 1B68     		ldr	r3, [r3]
 5016 00d8 7B4A     		ldr	r2, .L276+16
 5017 00da 9342     		cmp	r3, r2
 5018 00dc 02D1     		bne	.L253
 5019              		.loc 1 2760 0 discriminator 15
 5020 00de 0023     		movs	r3, #0
 5021 00e0 FB77     		strb	r3, [r7, #31]
 5022 00e2 01E0     		b	.L251
 5023              	.L253:
 5024              		.loc 1 2760 0 discriminator 16
 5025 00e4 1023     		movs	r3, #16
 5026 00e6 FB77     		strb	r3, [r7, #31]
 5027              	.L251:
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5028              		.loc 1 2762 0 is_stmt 1
 5029 00e8 7B68     		ldr	r3, [r7, #4]
 5030 00ea DB69     		ldr	r3, [r3, #28]
 5031 00ec B3F5004F 		cmp	r3, #32768
 5032 00f0 40F08280 		bne	.L254
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
 5033              		.loc 1 2764 0
 5034 00f4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5035 00f6 082B     		cmp	r3, #8
 5036 00f8 5ED8     		bhi	.L255
 5037 00fa 01A2     		adr	r2, .L257
 5038 00fc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5039              		.p2align 2
 5040              	.L257:
 5041 0100 25010000 		.word	.L256+1
 5042 0104 45010000 		.word	.L258+1
 5043 0108 65010000 		.word	.L259+1
 5044 010c B9010000 		.word	.L255+1
 5045 0110 81010000 		.word	.L260+1
 5046 0114 B9010000 		.word	.L255+1
 5047 0118 B9010000 		.word	.L255+1
 5048 011c B9010000 		.word	.L255+1
 5049 0120 A1010000 		.word	.L261+1
 5050              		.p2align 1
 5051              	.L256:
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 5052              		.loc 1 2767 0
 5053 0124 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5054 0128 F860     		str	r0, [r7, #12]
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 5055              		.loc 1 2768 0
 5056 012a FB68     		ldr	r3, [r7, #12]
 5057 012c 5A00     		lsls	r2, r3, #1
 5058 012e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 137


 5059 0130 5B68     		ldr	r3, [r3, #4]
 5060 0132 5B08     		lsrs	r3, r3, #1
 5061 0134 1A44     		add	r2, r2, r3
 5062 0136 7B68     		ldr	r3, [r7, #4]
 5063 0138 5B68     		ldr	r3, [r3, #4]
 5064 013a B2FBF3F3 		udiv	r3, r2, r3
 5065 013e 9BB2     		uxth	r3, r3
 5066 0140 BB61     		str	r3, [r7, #24]
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5067              		.loc 1 2769 0
 5068 0142 3CE0     		b	.L262
 5069              	.L258:
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 5070              		.loc 1 2771 0
 5071 0144 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5072 0148 F860     		str	r0, [r7, #12]
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 5073              		.loc 1 2772 0
 5074 014a FB68     		ldr	r3, [r7, #12]
 5075 014c 5A00     		lsls	r2, r3, #1
 5076 014e 7B68     		ldr	r3, [r7, #4]
 5077 0150 5B68     		ldr	r3, [r3, #4]
 5078 0152 5B08     		lsrs	r3, r3, #1
 5079 0154 1A44     		add	r2, r2, r3
 5080 0156 7B68     		ldr	r3, [r7, #4]
 5081 0158 5B68     		ldr	r3, [r3, #4]
 5082 015a B2FBF3F3 		udiv	r3, r2, r3
 5083 015e 9BB2     		uxth	r3, r3
 5084 0160 BB61     		str	r3, [r7, #24]
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5085              		.loc 1 2773 0
 5086 0162 2CE0     		b	.L262
 5087              	.L259:
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 5088              		.loc 1 2775 0
 5089 0164 7B68     		ldr	r3, [r7, #4]
 5090 0166 5B68     		ldr	r3, [r3, #4]
 5091 0168 5B08     		lsrs	r3, r3, #1
 5092 016a 03F57403 		add	r3, r3, #15990784
 5093 016e 03F51053 		add	r3, r3, #9216
 5094 0172 7A68     		ldr	r2, [r7, #4]
 5095 0174 5268     		ldr	r2, [r2, #4]
 5096 0176 B3FBF2F3 		udiv	r3, r3, r2
 5097 017a 9BB2     		uxth	r3, r3
 5098 017c BB61     		str	r3, [r7, #24]
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5099              		.loc 1 2776 0
 5100 017e 1EE0     		b	.L262
 5101              	.L260:
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5102              		.loc 1 2778 0
 5103 0180 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5104 0184 F860     		str	r0, [r7, #12]
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
ARM GAS  /tmp/ccfCzef7.s 			page 138


 5105              		.loc 1 2779 0
 5106 0186 FB68     		ldr	r3, [r7, #12]
 5107 0188 5A00     		lsls	r2, r3, #1
 5108 018a 7B68     		ldr	r3, [r7, #4]
 5109 018c 5B68     		ldr	r3, [r3, #4]
 5110 018e 5B08     		lsrs	r3, r3, #1
 5111 0190 1A44     		add	r2, r2, r3
 5112 0192 7B68     		ldr	r3, [r7, #4]
 5113 0194 5B68     		ldr	r3, [r3, #4]
 5114 0196 B2FBF3F3 		udiv	r3, r2, r3
 5115 019a 9BB2     		uxth	r3, r3
 5116 019c BB61     		str	r3, [r7, #24]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5117              		.loc 1 2780 0
 5118 019e 0EE0     		b	.L262
 5119              	.L261:
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 5120              		.loc 1 2782 0
 5121 01a0 7B68     		ldr	r3, [r7, #4]
 5122 01a2 5B68     		ldr	r3, [r3, #4]
 5123 01a4 5B08     		lsrs	r3, r3, #1
 5124 01a6 03F58032 		add	r2, r3, #65536
 5125 01aa 7B68     		ldr	r3, [r7, #4]
 5126 01ac 5B68     		ldr	r3, [r3, #4]
 5127 01ae B2FBF3F3 		udiv	r3, r2, r3
 5128 01b2 9BB2     		uxth	r3, r3
 5129 01b4 BB61     		str	r3, [r7, #24]
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5130              		.loc 1 2783 0
 5131 01b6 02E0     		b	.L262
 5132              	.L255:
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
 5133              		.loc 1 2785 0
 5134 01b8 0123     		movs	r3, #1
 5135 01ba FB75     		strb	r3, [r7, #23]
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5136              		.loc 1 2786 0
 5137 01bc 00BF     		nop
 5138              	.L262:
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5139              		.loc 1 2790 0
 5140 01be BB69     		ldr	r3, [r7, #24]
 5141 01c0 0F2B     		cmp	r3, #15
 5142 01c2 16D9     		bls	.L263
 5143              		.loc 1 2790 0 is_stmt 0 discriminator 1
 5144 01c4 BB69     		ldr	r3, [r7, #24]
 5145 01c6 B3F5803F 		cmp	r3, #65536
 5146 01ca 12D2     		bcs	.L263
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 5147              		.loc 1 2792 0 is_stmt 1
 5148 01cc BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccfCzef7.s 			page 139


 5149 01ce 9BB2     		uxth	r3, r3
 5150 01d0 23F00F03 		bic	r3, r3, #15
 5151 01d4 7B81     		strh	r3, [r7, #10]	@ movhi
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 5152              		.loc 1 2793 0
 5153 01d6 BB69     		ldr	r3, [r7, #24]
 5154 01d8 5B08     		lsrs	r3, r3, #1
 5155 01da 9BB2     		uxth	r3, r3
 5156 01dc 03F00703 		and	r3, r3, #7
 5157 01e0 9AB2     		uxth	r2, r3
 5158 01e2 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5159 01e4 1343     		orrs	r3, r3, r2
 5160 01e6 7B81     		strh	r3, [r7, #10]	@ movhi
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 5161              		.loc 1 2794 0
 5162 01e8 7B68     		ldr	r3, [r7, #4]
 5163 01ea 1B68     		ldr	r3, [r3]
 5164 01ec 7A89     		ldrh	r2, [r7, #10]
 5165 01ee DA60     		str	r2, [r3, #12]
 5166 01f0 7DE0     		b	.L265
 5167              	.L263:
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       ret = HAL_ERROR;
 5168              		.loc 1 2798 0
 5169 01f2 0123     		movs	r3, #1
 5170 01f4 FB75     		strb	r3, [r7, #23]
 5171 01f6 7AE0     		b	.L265
 5172              	.L254:
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
 5173              		.loc 1 2803 0
 5174 01f8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5175 01fa 082B     		cmp	r3, #8
 5176 01fc 66D8     		bhi	.L266
 5177 01fe 01A2     		adr	r2, .L268
 5178 0200 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5179              		.p2align 2
 5180              	.L268:
 5181 0204 29020000 		.word	.L267+1
 5182 0208 47020000 		.word	.L269+1
 5183 020c 65020000 		.word	.L270+1
 5184 0210 CD020000 		.word	.L266+1
 5185 0214 81020000 		.word	.L271+1
 5186 0218 CD020000 		.word	.L266+1
 5187 021c CD020000 		.word	.L266+1
 5188 0220 CD020000 		.word	.L266+1
 5189 0224 9F020000 		.word	.L272+1
 5190              		.p2align 1
 5191              	.L267:
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
ARM GAS  /tmp/ccfCzef7.s 			page 140


 5192              		.loc 1 2806 0
 5193 0228 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5194 022c F860     		str	r0, [r7, #12]
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 5195              		.loc 1 2807 0
 5196 022e 7B68     		ldr	r3, [r7, #4]
 5197 0230 5B68     		ldr	r3, [r3, #4]
 5198 0232 5A08     		lsrs	r2, r3, #1
 5199 0234 FB68     		ldr	r3, [r7, #12]
 5200 0236 1A44     		add	r2, r2, r3
 5201 0238 7B68     		ldr	r3, [r7, #4]
 5202 023a 5B68     		ldr	r3, [r3, #4]
 5203 023c B2FBF3F3 		udiv	r3, r2, r3
 5204 0240 9BB2     		uxth	r3, r3
 5205 0242 BB61     		str	r3, [r7, #24]
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5206              		.loc 1 2808 0
 5207 0244 45E0     		b	.L273
 5208              	.L269:
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 5209              		.loc 1 2810 0
 5210 0246 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5211 024a F860     		str	r0, [r7, #12]
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 5212              		.loc 1 2811 0
 5213 024c 7B68     		ldr	r3, [r7, #4]
 5214 024e 5B68     		ldr	r3, [r3, #4]
 5215 0250 5A08     		lsrs	r2, r3, #1
 5216 0252 FB68     		ldr	r3, [r7, #12]
 5217 0254 1A44     		add	r2, r2, r3
 5218 0256 7B68     		ldr	r3, [r7, #4]
 5219 0258 5B68     		ldr	r3, [r3, #4]
 5220 025a B2FBF3F3 		udiv	r3, r2, r3
 5221 025e 9BB2     		uxth	r3, r3
 5222 0260 BB61     		str	r3, [r7, #24]
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5223              		.loc 1 2812 0
 5224 0262 36E0     		b	.L273
 5225              	.L270:
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 5226              		.loc 1 2814 0
 5227 0264 7B68     		ldr	r3, [r7, #4]
 5228 0266 5B68     		ldr	r3, [r3, #4]
 5229 0268 5B08     		lsrs	r3, r3, #1
 5230 026a 03F5F403 		add	r3, r3, #7995392
 5231 026e 03F59053 		add	r3, r3, #4608
 5232 0272 7A68     		ldr	r2, [r7, #4]
 5233 0274 5268     		ldr	r2, [r2, #4]
 5234 0276 B3FBF2F3 		udiv	r3, r3, r2
 5235 027a 9BB2     		uxth	r3, r3
 5236 027c BB61     		str	r3, [r7, #24]
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5237              		.loc 1 2815 0
 5238 027e 28E0     		b	.L273
 5239              	.L271:
ARM GAS  /tmp/ccfCzef7.s 			page 141


2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 5240              		.loc 1 2817 0
 5241 0280 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5242 0284 F860     		str	r0, [r7, #12]
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 5243              		.loc 1 2818 0
 5244 0286 7B68     		ldr	r3, [r7, #4]
 5245 0288 5B68     		ldr	r3, [r3, #4]
 5246 028a 5A08     		lsrs	r2, r3, #1
 5247 028c FB68     		ldr	r3, [r7, #12]
 5248 028e 1A44     		add	r2, r2, r3
 5249 0290 7B68     		ldr	r3, [r7, #4]
 5250 0292 5B68     		ldr	r3, [r3, #4]
 5251 0294 B2FBF3F3 		udiv	r3, r2, r3
 5252 0298 9BB2     		uxth	r3, r3
 5253 029a BB61     		str	r3, [r7, #24]
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5254              		.loc 1 2819 0
 5255 029c 19E0     		b	.L273
 5256              	.L272:
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 5257              		.loc 1 2821 0
 5258 029e 7B68     		ldr	r3, [r7, #4]
 5259 02a0 5B68     		ldr	r3, [r3, #4]
 5260 02a2 5B08     		lsrs	r3, r3, #1
 5261 02a4 03F50042 		add	r2, r3, #32768
 5262 02a8 7B68     		ldr	r3, [r7, #4]
 5263 02aa 5B68     		ldr	r3, [r3, #4]
 5264 02ac B2FBF3F3 		udiv	r3, r2, r3
 5265 02b0 9BB2     		uxth	r3, r3
 5266 02b2 BB61     		str	r3, [r7, #24]
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5267              		.loc 1 2822 0
 5268 02b4 0DE0     		b	.L273
 5269              	.L277:
 5270 02b6 00BF     		.align	2
 5271              	.L276:
 5272 02b8 F369FFEF 		.word	-268473869
 5273 02bc 00380140 		.word	1073821696
 5274 02c0 00100240 		.word	1073876992
 5275 02c4 00440040 		.word	1073759232
 5276 02c8 00480040 		.word	1073760256
 5277              	.L266:
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
 5278              		.loc 1 2824 0
 5279 02cc 0123     		movs	r3, #1
 5280 02ce FB75     		strb	r3, [r7, #23]
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 5281              		.loc 1 2825 0
 5282 02d0 00BF     		nop
 5283              	.L273:
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
ARM GAS  /tmp/ccfCzef7.s 			page 142


2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5284              		.loc 1 2829 0
 5285 02d2 BB69     		ldr	r3, [r7, #24]
 5286 02d4 0F2B     		cmp	r3, #15
 5287 02d6 08D9     		bls	.L274
 5288              		.loc 1 2829 0 is_stmt 0 discriminator 1
 5289 02d8 BB69     		ldr	r3, [r7, #24]
 5290 02da B3F5803F 		cmp	r3, #65536
 5291 02de 04D2     		bcs	.L274
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
 5292              		.loc 1 2831 0 is_stmt 1
 5293 02e0 7B68     		ldr	r3, [r7, #4]
 5294 02e2 1B68     		ldr	r3, [r3]
 5295 02e4 BA69     		ldr	r2, [r7, #24]
 5296 02e6 DA60     		str	r2, [r3, #12]
 5297 02e8 01E0     		b	.L265
 5298              	.L274:
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       ret = HAL_ERROR;
 5299              		.loc 1 2835 0
 5300 02ea 0123     		movs	r3, #1
 5301 02ec FB75     		strb	r3, [r7, #23]
 5302              	.L265:
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear ISR function pointers */
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxISR = NULL;
 5303              		.loc 1 2841 0
 5304 02ee 7B68     		ldr	r3, [r7, #4]
 5305 02f0 0022     		movs	r2, #0
 5306 02f2 1A66     		str	r2, [r3, #96]
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
 5307              		.loc 1 2842 0
 5308 02f4 7B68     		ldr	r3, [r7, #4]
 5309 02f6 0022     		movs	r2, #0
 5310 02f8 5A66     		str	r2, [r3, #100]
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
 5311              		.loc 1 2844 0
 5312 02fa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5313              		.loc 1 2845 0
 5314 02fc 1846     		mov	r0, r3
 5315 02fe 2037     		adds	r7, r7, #32
 5316              	.LCFI236:
 5317              		.cfi_def_cfa_offset 8
 5318 0300 BD46     		mov	sp, r7
 5319              	.LCFI237:
 5320              		.cfi_def_cfa_register 13
 5321              		@ sp needed
 5322 0302 80BD     		pop	{r7, pc}
 5323              		.cfi_endproc
ARM GAS  /tmp/ccfCzef7.s 			page 143


 5324              	.LFE165:
 5326              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5327              		.align	1
 5328              		.global	UART_AdvFeatureConfig
 5329              		.syntax unified
 5330              		.thumb
 5331              		.thumb_func
 5332              		.fpu fpv4-sp-d16
 5334              	UART_AdvFeatureConfig:
 5335              	.LFB166:
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5336              		.loc 1 2853 0
 5337              		.cfi_startproc
 5338              		@ args = 0, pretend = 0, frame = 8
 5339              		@ frame_needed = 1, uses_anonymous_args = 0
 5340              		@ link register save eliminated.
 5341 0000 80B4     		push	{r7}
 5342              	.LCFI238:
 5343              		.cfi_def_cfa_offset 4
 5344              		.cfi_offset 7, -4
 5345 0002 83B0     		sub	sp, sp, #12
 5346              	.LCFI239:
 5347              		.cfi_def_cfa_offset 16
 5348 0004 00AF     		add	r7, sp, #0
 5349              	.LCFI240:
 5350              		.cfi_def_cfa_register 7
 5351 0006 7860     		str	r0, [r7, #4]
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 5352              		.loc 1 2858 0
 5353 0008 7B68     		ldr	r3, [r7, #4]
 5354 000a 5B6A     		ldr	r3, [r3, #36]
 5355 000c 03F00103 		and	r3, r3, #1
 5356 0010 002B     		cmp	r3, #0
 5357 0012 0AD0     		beq	.L279
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5358              		.loc 1 2861 0
 5359 0014 7B68     		ldr	r3, [r7, #4]
 5360 0016 1B68     		ldr	r3, [r3]
 5361 0018 5B68     		ldr	r3, [r3, #4]
 5362 001a 23F40031 		bic	r1, r3, #131072
 5363 001e 7B68     		ldr	r3, [r7, #4]
 5364 0020 9A6A     		ldr	r2, [r3, #40]
 5365 0022 7B68     		ldr	r3, [r7, #4]
 5366 0024 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 144


 5367 0026 0A43     		orrs	r2, r2, r1
 5368 0028 5A60     		str	r2, [r3, #4]
 5369              	.L279:
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 5370              		.loc 1 2865 0
 5371 002a 7B68     		ldr	r3, [r7, #4]
 5372 002c 5B6A     		ldr	r3, [r3, #36]
 5373 002e 03F00203 		and	r3, r3, #2
 5374 0032 002B     		cmp	r3, #0
 5375 0034 0AD0     		beq	.L280
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5376              		.loc 1 2868 0
 5377 0036 7B68     		ldr	r3, [r7, #4]
 5378 0038 1B68     		ldr	r3, [r3]
 5379 003a 5B68     		ldr	r3, [r3, #4]
 5380 003c 23F48031 		bic	r1, r3, #65536
 5381 0040 7B68     		ldr	r3, [r7, #4]
 5382 0042 DA6A     		ldr	r2, [r3, #44]
 5383 0044 7B68     		ldr	r3, [r7, #4]
 5384 0046 1B68     		ldr	r3, [r3]
 5385 0048 0A43     		orrs	r2, r2, r1
 5386 004a 5A60     		str	r2, [r3, #4]
 5387              	.L280:
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 5388              		.loc 1 2872 0
 5389 004c 7B68     		ldr	r3, [r7, #4]
 5390 004e 5B6A     		ldr	r3, [r3, #36]
 5391 0050 03F00403 		and	r3, r3, #4
 5392 0054 002B     		cmp	r3, #0
 5393 0056 0AD0     		beq	.L281
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5394              		.loc 1 2875 0
 5395 0058 7B68     		ldr	r3, [r7, #4]
 5396 005a 1B68     		ldr	r3, [r3]
 5397 005c 5B68     		ldr	r3, [r3, #4]
 5398 005e 23F48021 		bic	r1, r3, #262144
 5399 0062 7B68     		ldr	r3, [r7, #4]
 5400 0064 1A6B     		ldr	r2, [r3, #48]
 5401 0066 7B68     		ldr	r3, [r7, #4]
 5402 0068 1B68     		ldr	r3, [r3]
 5403 006a 0A43     		orrs	r2, r2, r1
 5404 006c 5A60     		str	r2, [r3, #4]
 5405              	.L281:
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
ARM GAS  /tmp/ccfCzef7.s 			page 145


 5406              		.loc 1 2879 0
 5407 006e 7B68     		ldr	r3, [r7, #4]
 5408 0070 5B6A     		ldr	r3, [r3, #36]
 5409 0072 03F00803 		and	r3, r3, #8
 5410 0076 002B     		cmp	r3, #0
 5411 0078 0AD0     		beq	.L282
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5412              		.loc 1 2882 0
 5413 007a 7B68     		ldr	r3, [r7, #4]
 5414 007c 1B68     		ldr	r3, [r3]
 5415 007e 5B68     		ldr	r3, [r3, #4]
 5416 0080 23F40041 		bic	r1, r3, #32768
 5417 0084 7B68     		ldr	r3, [r7, #4]
 5418 0086 5A6B     		ldr	r2, [r3, #52]
 5419 0088 7B68     		ldr	r3, [r7, #4]
 5420 008a 1B68     		ldr	r3, [r3]
 5421 008c 0A43     		orrs	r2, r2, r1
 5422 008e 5A60     		str	r2, [r3, #4]
 5423              	.L282:
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 5424              		.loc 1 2886 0
 5425 0090 7B68     		ldr	r3, [r7, #4]
 5426 0092 5B6A     		ldr	r3, [r3, #36]
 5427 0094 03F01003 		and	r3, r3, #16
 5428 0098 002B     		cmp	r3, #0
 5429 009a 0AD0     		beq	.L283
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5430              		.loc 1 2889 0
 5431 009c 7B68     		ldr	r3, [r7, #4]
 5432 009e 1B68     		ldr	r3, [r3]
 5433 00a0 9B68     		ldr	r3, [r3, #8]
 5434 00a2 23F48051 		bic	r1, r3, #4096
 5435 00a6 7B68     		ldr	r3, [r7, #4]
 5436 00a8 9A6B     		ldr	r2, [r3, #56]
 5437 00aa 7B68     		ldr	r3, [r7, #4]
 5438 00ac 1B68     		ldr	r3, [r3]
 5439 00ae 0A43     		orrs	r2, r2, r1
 5440 00b0 9A60     		str	r2, [r3, #8]
 5441              	.L283:
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 5442              		.loc 1 2893 0
 5443 00b2 7B68     		ldr	r3, [r7, #4]
 5444 00b4 5B6A     		ldr	r3, [r3, #36]
 5445 00b6 03F02003 		and	r3, r3, #32
 5446 00ba 002B     		cmp	r3, #0
 5447 00bc 0AD0     		beq	.L284
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccfCzef7.s 			page 146


2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5448              		.loc 1 2896 0
 5449 00be 7B68     		ldr	r3, [r7, #4]
 5450 00c0 1B68     		ldr	r3, [r3]
 5451 00c2 9B68     		ldr	r3, [r3, #8]
 5452 00c4 23F40051 		bic	r1, r3, #8192
 5453 00c8 7B68     		ldr	r3, [r7, #4]
 5454 00ca DA6B     		ldr	r2, [r3, #60]
 5455 00cc 7B68     		ldr	r3, [r7, #4]
 5456 00ce 1B68     		ldr	r3, [r3]
 5457 00d0 0A43     		orrs	r2, r2, r1
 5458 00d2 9A60     		str	r2, [r3, #8]
 5459              	.L284:
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5460              		.loc 1 2900 0
 5461 00d4 7B68     		ldr	r3, [r7, #4]
 5462 00d6 5B6A     		ldr	r3, [r3, #36]
 5463 00d8 03F04003 		and	r3, r3, #64
 5464 00dc 002B     		cmp	r3, #0
 5465 00de 1AD0     		beq	.L285
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5466              		.loc 1 2904 0
 5467 00e0 7B68     		ldr	r3, [r7, #4]
 5468 00e2 1B68     		ldr	r3, [r3]
 5469 00e4 5B68     		ldr	r3, [r3, #4]
 5470 00e6 23F48011 		bic	r1, r3, #1048576
 5471 00ea 7B68     		ldr	r3, [r7, #4]
 5472 00ec 1A6C     		ldr	r2, [r3, #64]
 5473 00ee 7B68     		ldr	r3, [r7, #4]
 5474 00f0 1B68     		ldr	r3, [r3]
 5475 00f2 0A43     		orrs	r2, r2, r1
 5476 00f4 5A60     		str	r2, [r3, #4]
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5477              		.loc 1 2906 0
 5478 00f6 7B68     		ldr	r3, [r7, #4]
 5479 00f8 1B6C     		ldr	r3, [r3, #64]
 5480 00fa B3F5801F 		cmp	r3, #1048576
 5481 00fe 0AD1     		bne	.L285
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5482              		.loc 1 2909 0
 5483 0100 7B68     		ldr	r3, [r7, #4]
 5484 0102 1B68     		ldr	r3, [r3]
 5485 0104 5B68     		ldr	r3, [r3, #4]
 5486 0106 23F4C001 		bic	r1, r3, #6291456
 5487 010a 7B68     		ldr	r3, [r7, #4]
 5488 010c 5A6C     		ldr	r2, [r3, #68]
 5489 010e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 147


 5490 0110 1B68     		ldr	r3, [r3]
 5491 0112 0A43     		orrs	r2, r2, r1
 5492 0114 5A60     		str	r2, [r3, #4]
 5493              	.L285:
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5494              		.loc 1 2914 0
 5495 0116 7B68     		ldr	r3, [r7, #4]
 5496 0118 5B6A     		ldr	r3, [r3, #36]
 5497 011a 03F08003 		and	r3, r3, #128
 5498 011e 002B     		cmp	r3, #0
 5499 0120 0AD0     		beq	.L287
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5500              		.loc 1 2917 0
 5501 0122 7B68     		ldr	r3, [r7, #4]
 5502 0124 1B68     		ldr	r3, [r3]
 5503 0126 5B68     		ldr	r3, [r3, #4]
 5504 0128 23F40021 		bic	r1, r3, #524288
 5505 012c 7B68     		ldr	r3, [r7, #4]
 5506 012e 9A6C     		ldr	r2, [r3, #72]
 5507 0130 7B68     		ldr	r3, [r7, #4]
 5508 0132 1B68     		ldr	r3, [r3]
 5509 0134 0A43     		orrs	r2, r2, r1
 5510 0136 5A60     		str	r2, [r3, #4]
 5511              	.L287:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5512              		.loc 1 2919 0
 5513 0138 00BF     		nop
 5514 013a 0C37     		adds	r7, r7, #12
 5515              	.LCFI241:
 5516              		.cfi_def_cfa_offset 4
 5517 013c BD46     		mov	sp, r7
 5518              	.LCFI242:
 5519              		.cfi_def_cfa_register 13
 5520              		@ sp needed
 5521 013e 5DF8047B 		ldr	r7, [sp], #4
 5522              	.LCFI243:
 5523              		.cfi_restore 7
 5524              		.cfi_def_cfa_offset 0
 5525 0142 7047     		bx	lr
 5526              		.cfi_endproc
 5527              	.LFE166:
 5529              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5530              		.align	1
 5531              		.global	UART_CheckIdleState
 5532              		.syntax unified
 5533              		.thumb
 5534              		.thumb_func
 5535              		.fpu fpv4-sp-d16
 5537              	UART_CheckIdleState:
 5538              	.LFB167:
ARM GAS  /tmp/ccfCzef7.s 			page 148


2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5539              		.loc 1 2927 0
 5540              		.cfi_startproc
 5541              		@ args = 0, pretend = 0, frame = 16
 5542              		@ frame_needed = 1, uses_anonymous_args = 0
 5543 0000 80B5     		push	{r7, lr}
 5544              	.LCFI244:
 5545              		.cfi_def_cfa_offset 8
 5546              		.cfi_offset 7, -8
 5547              		.cfi_offset 14, -4
 5548 0002 86B0     		sub	sp, sp, #24
 5549              	.LCFI245:
 5550              		.cfi_def_cfa_offset 32
 5551 0004 02AF     		add	r7, sp, #8
 5552              	.LCFI246:
 5553              		.cfi_def_cfa 7, 24
 5554 0006 7860     		str	r0, [r7, #4]
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5555              		.loc 1 2931 0
 5556 0008 7B68     		ldr	r3, [r7, #4]
 5557 000a 0022     		movs	r2, #0
 5558 000c DA67     		str	r2, [r3, #124]
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5559              		.loc 1 2934 0
 5560 000e FFF7FEFF 		bl	HAL_GetTick
 5561 0012 F860     		str	r0, [r7, #12]
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 5562              		.loc 1 2937 0
 5563 0014 7B68     		ldr	r3, [r7, #4]
 5564 0016 1B68     		ldr	r3, [r3]
 5565 0018 1B68     		ldr	r3, [r3]
 5566 001a 03F00803 		and	r3, r3, #8
 5567 001e 082B     		cmp	r3, #8
 5568 0020 0ED1     		bne	.L289
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 5569              		.loc 1 2940 0
 5570 0022 6FF07E43 		mvn	r3, #-33554432
 5571 0026 0093     		str	r3, [sp]
 5572 0028 FB68     		ldr	r3, [r7, #12]
 5573 002a 0022     		movs	r2, #0
 5574 002c 4FF40011 		mov	r1, #2097152
ARM GAS  /tmp/ccfCzef7.s 			page 149


 5575 0030 7868     		ldr	r0, [r7, #4]
 5576 0032 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5577 0036 0346     		mov	r3, r0
 5578 0038 002B     		cmp	r3, #0
 5579 003a 01D0     		beq	.L289
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout occurred */
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 5580              		.loc 1 2943 0
 5581 003c 0323     		movs	r3, #3
 5582 003e 20E0     		b	.L290
 5583              	.L289:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 5584              		.loc 1 2948 0
 5585 0040 7B68     		ldr	r3, [r7, #4]
 5586 0042 1B68     		ldr	r3, [r3]
 5587 0044 1B68     		ldr	r3, [r3]
 5588 0046 03F00403 		and	r3, r3, #4
 5589 004a 042B     		cmp	r3, #4
 5590 004c 0ED1     		bne	.L291
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 5591              		.loc 1 2951 0
 5592 004e 6FF07E43 		mvn	r3, #-33554432
 5593 0052 0093     		str	r3, [sp]
 5594 0054 FB68     		ldr	r3, [r7, #12]
 5595 0056 0022     		movs	r2, #0
 5596 0058 4FF48001 		mov	r1, #4194304
 5597 005c 7868     		ldr	r0, [r7, #4]
 5598 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5599 0062 0346     		mov	r3, r0
 5600 0064 002B     		cmp	r3, #0
 5601 0066 01D0     		beq	.L291
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout occurred */
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 5602              		.loc 1 2954 0
 5603 0068 0323     		movs	r3, #3
 5604 006a 0AE0     		b	.L290
 5605              	.L291:
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5606              		.loc 1 2959 0
 5607 006c 7B68     		ldr	r3, [r7, #4]
 5608 006e 2022     		movs	r2, #32
 5609 0070 5A67     		str	r2, [r3, #116]
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5610              		.loc 1 2960 0
 5611 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 150


 5612 0074 2022     		movs	r2, #32
 5613 0076 9A67     		str	r2, [r3, #120]
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5614              		.loc 1 2962 0
 5615 0078 7B68     		ldr	r3, [r7, #4]
 5616 007a 0022     		movs	r2, #0
 5617 007c 83F87020 		strb	r2, [r3, #112]
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 5618              		.loc 1 2964 0
 5619 0080 0023     		movs	r3, #0
 5620              	.L290:
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5621              		.loc 1 2965 0
 5622 0082 1846     		mov	r0, r3
 5623 0084 1037     		adds	r7, r7, #16
 5624              	.LCFI247:
 5625              		.cfi_def_cfa_offset 8
 5626 0086 BD46     		mov	sp, r7
 5627              	.LCFI248:
 5628              		.cfi_def_cfa_register 13
 5629              		@ sp needed
 5630 0088 80BD     		pop	{r7, pc}
 5631              		.cfi_endproc
 5632              	.LFE167:
 5634              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5635              		.align	1
 5636              		.global	UART_WaitOnFlagUntilTimeout
 5637              		.syntax unified
 5638              		.thumb
 5639              		.thumb_func
 5640              		.fpu fpv4-sp-d16
 5642              	UART_WaitOnFlagUntilTimeout:
 5643              	.LFB168:
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart     UART handle.
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Tickstart Tick start value
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout   Timeout duration
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5644              		.loc 1 2978 0
 5645              		.cfi_startproc
 5646              		@ args = 4, pretend = 0, frame = 16
 5647              		@ frame_needed = 1, uses_anonymous_args = 0
 5648 0000 80B5     		push	{r7, lr}
 5649              	.LCFI249:
 5650              		.cfi_def_cfa_offset 8
 5651              		.cfi_offset 7, -8
 5652              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfCzef7.s 			page 151


 5653 0002 84B0     		sub	sp, sp, #16
 5654              	.LCFI250:
 5655              		.cfi_def_cfa_offset 24
 5656 0004 00AF     		add	r7, sp, #0
 5657              	.LCFI251:
 5658              		.cfi_def_cfa_register 7
 5659 0006 F860     		str	r0, [r7, #12]
 5660 0008 B960     		str	r1, [r7, #8]
 5661 000a 3B60     		str	r3, [r7]
 5662 000c 1346     		mov	r3, r2
 5663 000e FB71     		strb	r3, [r7, #7]
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 5664              		.loc 1 2980 0
 5665 0010 5DE0     		b	.L293
 5666              	.L297:
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 5667              		.loc 1 2983 0
 5668 0012 BB69     		ldr	r3, [r7, #24]
 5669 0014 B3F1FF3F 		cmp	r3, #-1
 5670 0018 59D0     		beq	.L293
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 5671              		.loc 1 2985 0
 5672 001a FFF7FEFF 		bl	HAL_GetTick
 5673 001e 0246     		mov	r2, r0
 5674 0020 3B68     		ldr	r3, [r7]
 5675 0022 D31A     		subs	r3, r2, r3
 5676 0024 BA69     		ldr	r2, [r7, #24]
 5677 0026 9A42     		cmp	r2, r3
 5678 0028 02D3     		bcc	.L294
 5679              		.loc 1 2985 0 is_stmt 0 discriminator 1
 5680 002a BB69     		ldr	r3, [r7, #24]
 5681 002c 002B     		cmp	r3, #0
 5682 002e 1BD1     		bne	.L295
 5683              	.L294:
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5684              		.loc 1 2988 0 is_stmt 1
 5685 0030 FB68     		ldr	r3, [r7, #12]
 5686 0032 1B68     		ldr	r3, [r3]
 5687 0034 1A68     		ldr	r2, [r3]
 5688 0036 FB68     		ldr	r3, [r7, #12]
 5689 0038 1B68     		ldr	r3, [r3]
 5690 003a 22F4D072 		bic	r2, r2, #416
 5691 003e 1A60     		str	r2, [r3]
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5692              		.loc 1 2989 0
 5693 0040 FB68     		ldr	r3, [r7, #12]
 5694 0042 1B68     		ldr	r3, [r3]
 5695 0044 9A68     		ldr	r2, [r3, #8]
 5696 0046 FB68     		ldr	r3, [r7, #12]
 5697 0048 1B68     		ldr	r3, [r3]
 5698 004a 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/ccfCzef7.s 			page 152


 5699 004e 9A60     		str	r2, [r3, #8]
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 5700              		.loc 1 2991 0
 5701 0050 FB68     		ldr	r3, [r7, #12]
 5702 0052 2022     		movs	r2, #32
 5703 0054 5A67     		str	r2, [r3, #116]
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5704              		.loc 1 2992 0
 5705 0056 FB68     		ldr	r3, [r7, #12]
 5706 0058 2022     		movs	r2, #32
 5707 005a 9A67     		str	r2, [r3, #120]
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 5708              		.loc 1 2994 0
 5709 005c FB68     		ldr	r3, [r7, #12]
 5710 005e 0022     		movs	r2, #0
 5711 0060 83F87020 		strb	r2, [r3, #112]
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 5712              		.loc 1 2996 0
 5713 0064 0323     		movs	r3, #3
 5714 0066 42E0     		b	.L296
 5715              	.L295:
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 5716              		.loc 1 2999 0
 5717 0068 FB68     		ldr	r3, [r7, #12]
 5718 006a 1B68     		ldr	r3, [r3]
 5719 006c 1B68     		ldr	r3, [r3]
 5720 006e 03F00403 		and	r3, r3, #4
 5721 0072 002B     		cmp	r3, #0
 5722 0074 2BD0     		beq	.L293
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 5723              		.loc 1 3001 0
 5724 0076 FB68     		ldr	r3, [r7, #12]
 5725 0078 1B68     		ldr	r3, [r3]
 5726 007a DB69     		ldr	r3, [r3, #28]
 5727 007c 03F40063 		and	r3, r3, #2048
 5728 0080 B3F5006F 		cmp	r3, #2048
 5729 0084 23D1     		bne	.L293
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 5730              		.loc 1 3004 0
 5731 0086 FB68     		ldr	r3, [r7, #12]
 5732 0088 1B68     		ldr	r3, [r3]
 5733 008a 4FF40062 		mov	r2, #2048
 5734 008e 1A62     		str	r2, [r3, #32]
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5735              		.loc 1 3007 0
 5736 0090 FB68     		ldr	r3, [r7, #12]
 5737 0092 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 153


 5738 0094 1A68     		ldr	r2, [r3]
 5739 0096 FB68     		ldr	r3, [r7, #12]
 5740 0098 1B68     		ldr	r3, [r3]
 5741 009a 22F4D072 		bic	r2, r2, #416
 5742 009e 1A60     		str	r2, [r3]
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5743              		.loc 1 3008 0
 5744 00a0 FB68     		ldr	r3, [r7, #12]
 5745 00a2 1B68     		ldr	r3, [r3]
 5746 00a4 9A68     		ldr	r2, [r3, #8]
 5747 00a6 FB68     		ldr	r3, [r7, #12]
 5748 00a8 1B68     		ldr	r3, [r3]
 5749 00aa 22F00102 		bic	r2, r2, #1
 5750 00ae 9A60     		str	r2, [r3, #8]
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
 5751              		.loc 1 3010 0
 5752 00b0 FB68     		ldr	r3, [r7, #12]
 5753 00b2 2022     		movs	r2, #32
 5754 00b4 5A67     		str	r2, [r3, #116]
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5755              		.loc 1 3011 0
 5756 00b6 FB68     		ldr	r3, [r7, #12]
 5757 00b8 2022     		movs	r2, #32
 5758 00ba 9A67     		str	r2, [r3, #120]
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 5759              		.loc 1 3012 0
 5760 00bc FB68     		ldr	r3, [r7, #12]
 5761 00be 2022     		movs	r2, #32
 5762 00c0 DA67     		str	r2, [r3, #124]
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Process Unlocked */
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 5763              		.loc 1 3015 0
 5764 00c2 FB68     		ldr	r3, [r7, #12]
 5765 00c4 0022     		movs	r2, #0
 5766 00c6 83F87020 		strb	r2, [r3, #112]
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 5767              		.loc 1 3017 0
 5768 00ca 0323     		movs	r3, #3
 5769 00cc 0FE0     		b	.L296
 5770              	.L293:
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5771              		.loc 1 2980 0
 5772 00ce FB68     		ldr	r3, [r7, #12]
 5773 00d0 1B68     		ldr	r3, [r3]
 5774 00d2 DA69     		ldr	r2, [r3, #28]
 5775 00d4 BB68     		ldr	r3, [r7, #8]
 5776 00d6 1340     		ands	r3, r3, r2
 5777 00d8 BA68     		ldr	r2, [r7, #8]
 5778 00da 9A42     		cmp	r2, r3
 5779 00dc 0CBF     		ite	eq
 5780 00de 0123     		moveq	r3, #1
 5781 00e0 0023     		movne	r3, #0
 5782 00e2 DBB2     		uxtb	r3, r3
 5783 00e4 1A46     		mov	r2, r3
ARM GAS  /tmp/ccfCzef7.s 			page 154


 5784 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5785 00e8 9A42     		cmp	r2, r3
 5786 00ea 92D0     		beq	.L297
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 5787              		.loc 1 3022 0
 5788 00ec 0023     		movs	r3, #0
 5789              	.L296:
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5790              		.loc 1 3023 0
 5791 00ee 1846     		mov	r0, r3
 5792 00f0 1037     		adds	r7, r7, #16
 5793              	.LCFI252:
 5794              		.cfi_def_cfa_offset 8
 5795 00f2 BD46     		mov	sp, r7
 5796              	.LCFI253:
 5797              		.cfi_def_cfa_register 13
 5798              		@ sp needed
 5799 00f4 80BD     		pop	{r7, pc}
 5800              		.cfi_endproc
 5801              	.LFE168:
 5803              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 5804              		.align	1
 5805              		.syntax unified
 5806              		.thumb
 5807              		.thumb_func
 5808              		.fpu fpv4-sp-d16
 5810              	UART_EndTxTransfer:
 5811              	.LFB169:
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5812              		.loc 1 3032 0
 5813              		.cfi_startproc
 5814              		@ args = 0, pretend = 0, frame = 8
 5815              		@ frame_needed = 1, uses_anonymous_args = 0
 5816              		@ link register save eliminated.
 5817 0000 80B4     		push	{r7}
 5818              	.LCFI254:
 5819              		.cfi_def_cfa_offset 4
 5820              		.cfi_offset 7, -4
 5821 0002 83B0     		sub	sp, sp, #12
 5822              	.LCFI255:
 5823              		.cfi_def_cfa_offset 16
 5824 0004 00AF     		add	r7, sp, #0
 5825              	.LCFI256:
 5826              		.cfi_def_cfa_register 7
 5827 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 155


3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 5828              		.loc 1 3034 0
 5829 0008 7B68     		ldr	r3, [r7, #4]
 5830 000a 1B68     		ldr	r3, [r3]
 5831 000c 1A68     		ldr	r2, [r3]
 5832 000e 7B68     		ldr	r3, [r7, #4]
 5833 0010 1B68     		ldr	r3, [r3]
 5834 0012 22F0C002 		bic	r2, r2, #192
 5835 0016 1A60     		str	r2, [r3]
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5836              		.loc 1 3037 0
 5837 0018 7B68     		ldr	r3, [r7, #4]
 5838 001a 2022     		movs	r2, #32
 5839 001c 5A67     		str	r2, [r3, #116]
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5840              		.loc 1 3038 0
 5841 001e 00BF     		nop
 5842 0020 0C37     		adds	r7, r7, #12
 5843              	.LCFI257:
 5844              		.cfi_def_cfa_offset 4
 5845 0022 BD46     		mov	sp, r7
 5846              	.LCFI258:
 5847              		.cfi_def_cfa_register 13
 5848              		@ sp needed
 5849 0024 5DF8047B 		ldr	r7, [sp], #4
 5850              	.LCFI259:
 5851              		.cfi_restore 7
 5852              		.cfi_def_cfa_offset 0
 5853 0028 7047     		bx	lr
 5854              		.cfi_endproc
 5855              	.LFE169:
 5857              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 5858              		.align	1
 5859              		.syntax unified
 5860              		.thumb
 5861              		.thumb_func
 5862              		.fpu fpv4-sp-d16
 5864              	UART_EndRxTransfer:
 5865              	.LFB170:
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5866              		.loc 1 3047 0
 5867              		.cfi_startproc
 5868              		@ args = 0, pretend = 0, frame = 8
 5869              		@ frame_needed = 1, uses_anonymous_args = 0
 5870              		@ link register save eliminated.
 5871 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccfCzef7.s 			page 156


 5872              	.LCFI260:
 5873              		.cfi_def_cfa_offset 4
 5874              		.cfi_offset 7, -4
 5875 0002 83B0     		sub	sp, sp, #12
 5876              	.LCFI261:
 5877              		.cfi_def_cfa_offset 16
 5878 0004 00AF     		add	r7, sp, #0
 5879              	.LCFI262:
 5880              		.cfi_def_cfa_register 7
 5881 0006 7860     		str	r0, [r7, #4]
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5882              		.loc 1 3049 0
 5883 0008 7B68     		ldr	r3, [r7, #4]
 5884 000a 1B68     		ldr	r3, [r3]
 5885 000c 1A68     		ldr	r2, [r3]
 5886 000e 7B68     		ldr	r3, [r7, #4]
 5887 0010 1B68     		ldr	r3, [r3]
 5888 0012 22F49072 		bic	r2, r2, #288
 5889 0016 1A60     		str	r2, [r3]
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5890              		.loc 1 3050 0
 5891 0018 7B68     		ldr	r3, [r7, #4]
 5892 001a 1B68     		ldr	r3, [r3]
 5893 001c 9A68     		ldr	r2, [r3, #8]
 5894 001e 7B68     		ldr	r3, [r7, #4]
 5895 0020 1B68     		ldr	r3, [r3]
 5896 0022 22F00102 		bic	r2, r2, #1
 5897 0026 9A60     		str	r2, [r3, #8]
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5898              		.loc 1 3053 0
 5899 0028 7B68     		ldr	r3, [r7, #4]
 5900 002a 2022     		movs	r2, #32
 5901 002c 9A67     		str	r2, [r3, #120]
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxISR = NULL;
 5902              		.loc 1 3056 0
 5903 002e 7B68     		ldr	r3, [r7, #4]
 5904 0030 0022     		movs	r2, #0
 5905 0032 1A66     		str	r2, [r3, #96]
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5906              		.loc 1 3057 0
 5907 0034 00BF     		nop
 5908 0036 0C37     		adds	r7, r7, #12
 5909              	.LCFI263:
 5910              		.cfi_def_cfa_offset 4
 5911 0038 BD46     		mov	sp, r7
 5912              	.LCFI264:
 5913              		.cfi_def_cfa_register 13
 5914              		@ sp needed
 5915 003a 5DF8047B 		ldr	r7, [sp], #4
 5916              	.LCFI265:
 5917              		.cfi_restore 7
 5918              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccfCzef7.s 			page 157


 5919 003e 7047     		bx	lr
 5920              		.cfi_endproc
 5921              	.LFE170:
 5923              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 5924              		.align	1
 5925              		.syntax unified
 5926              		.thumb
 5927              		.thumb_func
 5928              		.fpu fpv4-sp-d16
 5930              	UART_DMATransmitCplt:
 5931              	.LFB171:
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5932              		.loc 1 3066 0
 5933              		.cfi_startproc
 5934              		@ args = 0, pretend = 0, frame = 16
 5935              		@ frame_needed = 1, uses_anonymous_args = 0
 5936 0000 80B5     		push	{r7, lr}
 5937              	.LCFI266:
 5938              		.cfi_def_cfa_offset 8
 5939              		.cfi_offset 7, -8
 5940              		.cfi_offset 14, -4
 5941 0002 84B0     		sub	sp, sp, #16
 5942              	.LCFI267:
 5943              		.cfi_def_cfa_offset 24
 5944 0004 00AF     		add	r7, sp, #0
 5945              	.LCFI268:
 5946              		.cfi_def_cfa_register 7
 5947 0006 7860     		str	r0, [r7, #4]
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 5948              		.loc 1 3067 0
 5949 0008 7B68     		ldr	r3, [r7, #4]
 5950 000a 5B6A     		ldr	r3, [r3, #36]
 5951 000c FB60     		str	r3, [r7, #12]
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 5952              		.loc 1 3070 0
 5953 000e 7B68     		ldr	r3, [r7, #4]
 5954 0010 9B69     		ldr	r3, [r3, #24]
 5955 0012 202B     		cmp	r3, #32
 5956 0014 14D0     		beq	.L301
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 5957              		.loc 1 3072 0
 5958 0016 FB68     		ldr	r3, [r7, #12]
 5959 0018 0022     		movs	r2, #0
 5960 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
ARM GAS  /tmp/ccfCzef7.s 			page 158


3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 5961              		.loc 1 3076 0
 5962 001e FB68     		ldr	r3, [r7, #12]
 5963 0020 1B68     		ldr	r3, [r3]
 5964 0022 9A68     		ldr	r2, [r3, #8]
 5965 0024 FB68     		ldr	r3, [r7, #12]
 5966 0026 1B68     		ldr	r3, [r3]
 5967 0028 22F08002 		bic	r2, r2, #128
 5968 002c 9A60     		str	r2, [r3, #8]
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5969              		.loc 1 3079 0
 5970 002e FB68     		ldr	r3, [r7, #12]
 5971 0030 1B68     		ldr	r3, [r3]
 5972 0032 1A68     		ldr	r2, [r3]
 5973 0034 FB68     		ldr	r3, [r7, #12]
 5974 0036 1B68     		ldr	r3, [r3]
 5975 0038 42F04002 		orr	r2, r2, #64
 5976 003c 1A60     		str	r2, [r3]
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5977              		.loc 1 3092 0
 5978 003e 02E0     		b	.L303
 5979              	.L301:
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5980              		.loc 1 3089 0
 5981 0040 F868     		ldr	r0, [r7, #12]
 5982 0042 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 5983              	.L303:
 5984              		.loc 1 3092 0
 5985 0046 00BF     		nop
 5986 0048 1037     		adds	r7, r7, #16
 5987              	.LCFI269:
 5988              		.cfi_def_cfa_offset 8
 5989 004a BD46     		mov	sp, r7
 5990              	.LCFI270:
 5991              		.cfi_def_cfa_register 13
 5992              		@ sp needed
 5993 004c 80BD     		pop	{r7, pc}
 5994              		.cfi_endproc
 5995              	.LFE171:
 5997              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 5998              		.align	1
 5999              		.syntax unified
ARM GAS  /tmp/ccfCzef7.s 			page 159


 6000              		.thumb
 6001              		.thumb_func
 6002              		.fpu fpv4-sp-d16
 6004              	UART_DMATxHalfCplt:
 6005              	.LFB172:
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6006              		.loc 1 3100 0
 6007              		.cfi_startproc
 6008              		@ args = 0, pretend = 0, frame = 16
 6009              		@ frame_needed = 1, uses_anonymous_args = 0
 6010 0000 80B5     		push	{r7, lr}
 6011              	.LCFI271:
 6012              		.cfi_def_cfa_offset 8
 6013              		.cfi_offset 7, -8
 6014              		.cfi_offset 14, -4
 6015 0002 84B0     		sub	sp, sp, #16
 6016              	.LCFI272:
 6017              		.cfi_def_cfa_offset 24
 6018 0004 00AF     		add	r7, sp, #0
 6019              	.LCFI273:
 6020              		.cfi_def_cfa_register 7
 6021 0006 7860     		str	r0, [r7, #4]
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6022              		.loc 1 3101 0
 6023 0008 7B68     		ldr	r3, [r7, #4]
 6024 000a 5B6A     		ldr	r3, [r3, #36]
 6025 000c FB60     		str	r3, [r7, #12]
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 6026              		.loc 1 3108 0
 6027 000e F868     		ldr	r0, [r7, #12]
 6028 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6029              		.loc 1 3110 0
 6030 0014 00BF     		nop
 6031 0016 1037     		adds	r7, r7, #16
 6032              	.LCFI274:
 6033              		.cfi_def_cfa_offset 8
 6034 0018 BD46     		mov	sp, r7
 6035              	.LCFI275:
 6036              		.cfi_def_cfa_register 13
 6037              		@ sp needed
 6038 001a 80BD     		pop	{r7, pc}
 6039              		.cfi_endproc
ARM GAS  /tmp/ccfCzef7.s 			page 160


 6040              	.LFE172:
 6042              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6043              		.align	1
 6044              		.syntax unified
 6045              		.thumb
 6046              		.thumb_func
 6047              		.fpu fpv4-sp-d16
 6049              	UART_DMAReceiveCplt:
 6050              	.LFB173:
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6051              		.loc 1 3118 0
 6052              		.cfi_startproc
 6053              		@ args = 0, pretend = 0, frame = 16
 6054              		@ frame_needed = 1, uses_anonymous_args = 0
 6055 0000 80B5     		push	{r7, lr}
 6056              	.LCFI276:
 6057              		.cfi_def_cfa_offset 8
 6058              		.cfi_offset 7, -8
 6059              		.cfi_offset 14, -4
 6060 0002 84B0     		sub	sp, sp, #16
 6061              	.LCFI277:
 6062              		.cfi_def_cfa_offset 24
 6063 0004 00AF     		add	r7, sp, #0
 6064              	.LCFI278:
 6065              		.cfi_def_cfa_register 7
 6066 0006 7860     		str	r0, [r7, #4]
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6067              		.loc 1 3119 0
 6068 0008 7B68     		ldr	r3, [r7, #4]
 6069 000a 5B6A     		ldr	r3, [r3, #36]
 6070 000c FB60     		str	r3, [r7, #12]
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 6071              		.loc 1 3122 0
 6072 000e 7B68     		ldr	r3, [r7, #4]
 6073 0010 9B69     		ldr	r3, [r3, #24]
 6074 0012 202B     		cmp	r3, #32
 6075 0014 1ED0     		beq	.L306
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6076              		.loc 1 3124 0
 6077 0016 FB68     		ldr	r3, [r7, #12]
 6078 0018 0022     		movs	r2, #0
 6079 001a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6080              		.loc 1 3127 0
 6081 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccfCzef7.s 			page 161


 6082 0020 1B68     		ldr	r3, [r3]
 6083 0022 1A68     		ldr	r2, [r3]
 6084 0024 FB68     		ldr	r3, [r7, #12]
 6085 0026 1B68     		ldr	r3, [r3]
 6086 0028 22F48072 		bic	r2, r2, #256
 6087 002c 1A60     		str	r2, [r3]
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6088              		.loc 1 3128 0
 6089 002e FB68     		ldr	r3, [r7, #12]
 6090 0030 1B68     		ldr	r3, [r3]
 6091 0032 9A68     		ldr	r2, [r3, #8]
 6092 0034 FB68     		ldr	r3, [r7, #12]
 6093 0036 1B68     		ldr	r3, [r3]
 6094 0038 22F00102 		bic	r2, r2, #1
 6095 003c 9A60     		str	r2, [r3, #8]
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6096              		.loc 1 3132 0
 6097 003e FB68     		ldr	r3, [r7, #12]
 6098 0040 1B68     		ldr	r3, [r3]
 6099 0042 9A68     		ldr	r2, [r3, #8]
 6100 0044 FB68     		ldr	r3, [r7, #12]
 6101 0046 1B68     		ldr	r3, [r3]
 6102 0048 22F04002 		bic	r2, r2, #64
 6103 004c 9A60     		str	r2, [r3, #8]
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 6104              		.loc 1 3135 0
 6105 004e FB68     		ldr	r3, [r7, #12]
 6106 0050 2022     		movs	r2, #32
 6107 0052 9A67     		str	r2, [r3, #120]
 6108              	.L306:
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 6109              		.loc 1 3143 0
 6110 0054 F868     		ldr	r0, [r7, #12]
 6111 0056 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6112              		.loc 1 3145 0
 6113 005a 00BF     		nop
 6114 005c 1037     		adds	r7, r7, #16
 6115              	.LCFI279:
 6116              		.cfi_def_cfa_offset 8
 6117 005e BD46     		mov	sp, r7
 6118              	.LCFI280:
 6119              		.cfi_def_cfa_register 13
 6120              		@ sp needed
ARM GAS  /tmp/ccfCzef7.s 			page 162


 6121 0060 80BD     		pop	{r7, pc}
 6122              		.cfi_endproc
 6123              	.LFE173:
 6125              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 6126              		.align	1
 6127              		.syntax unified
 6128              		.thumb
 6129              		.thumb_func
 6130              		.fpu fpv4-sp-d16
 6132              	UART_DMARxHalfCplt:
 6133              	.LFB174:
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6134              		.loc 1 3153 0
 6135              		.cfi_startproc
 6136              		@ args = 0, pretend = 0, frame = 16
 6137              		@ frame_needed = 1, uses_anonymous_args = 0
 6138 0000 80B5     		push	{r7, lr}
 6139              	.LCFI281:
 6140              		.cfi_def_cfa_offset 8
 6141              		.cfi_offset 7, -8
 6142              		.cfi_offset 14, -4
 6143 0002 84B0     		sub	sp, sp, #16
 6144              	.LCFI282:
 6145              		.cfi_def_cfa_offset 24
 6146 0004 00AF     		add	r7, sp, #0
 6147              	.LCFI283:
 6148              		.cfi_def_cfa_register 7
 6149 0006 7860     		str	r0, [r7, #4]
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6150              		.loc 1 3154 0
 6151 0008 7B68     		ldr	r3, [r7, #4]
 6152 000a 5B6A     		ldr	r3, [r3, #36]
 6153 000c FB60     		str	r3, [r7, #12]
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 6154              		.loc 1 3161 0
 6155 000e F868     		ldr	r0, [r7, #12]
 6156 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6157              		.loc 1 3163 0
 6158 0014 00BF     		nop
 6159 0016 1037     		adds	r7, r7, #16
 6160              	.LCFI284:
 6161              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfCzef7.s 			page 163


 6162 0018 BD46     		mov	sp, r7
 6163              	.LCFI285:
 6164              		.cfi_def_cfa_register 13
 6165              		@ sp needed
 6166 001a 80BD     		pop	{r7, pc}
 6167              		.cfi_endproc
 6168              	.LFE174:
 6170              		.section	.text.UART_DMAError,"ax",%progbits
 6171              		.align	1
 6172              		.syntax unified
 6173              		.thumb
 6174              		.thumb_func
 6175              		.fpu fpv4-sp-d16
 6177              	UART_DMAError:
 6178              	.LFB175:
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6179              		.loc 1 3171 0
 6180              		.cfi_startproc
 6181              		@ args = 0, pretend = 0, frame = 24
 6182              		@ frame_needed = 1, uses_anonymous_args = 0
 6183 0000 80B5     		push	{r7, lr}
 6184              	.LCFI286:
 6185              		.cfi_def_cfa_offset 8
 6186              		.cfi_offset 7, -8
 6187              		.cfi_offset 14, -4
 6188 0002 86B0     		sub	sp, sp, #24
 6189              	.LCFI287:
 6190              		.cfi_def_cfa_offset 32
 6191 0004 00AF     		add	r7, sp, #0
 6192              	.LCFI288:
 6193              		.cfi_def_cfa_register 7
 6194 0006 7860     		str	r0, [r7, #4]
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6195              		.loc 1 3172 0
 6196 0008 7B68     		ldr	r3, [r7, #4]
 6197 000a 5B6A     		ldr	r3, [r3, #36]
 6198 000c 7B61     		str	r3, [r7, #20]
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 6199              		.loc 1 3174 0
 6200 000e 7B69     		ldr	r3, [r7, #20]
 6201 0010 5B6F     		ldr	r3, [r3, #116]
 6202 0012 3B61     		str	r3, [r7, #16]
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 6203              		.loc 1 3175 0
 6204 0014 7B69     		ldr	r3, [r7, #20]
 6205 0016 9B6F     		ldr	r3, [r3, #120]
 6206 0018 FB60     		str	r3, [r7, #12]
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
ARM GAS  /tmp/ccfCzef7.s 			page 164


3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 6207              		.loc 1 3178 0
 6208 001a 7B69     		ldr	r3, [r7, #20]
 6209 001c 1B68     		ldr	r3, [r3]
 6210 001e 9B68     		ldr	r3, [r3, #8]
 6211 0020 03F08003 		and	r3, r3, #128
 6212 0024 802B     		cmp	r3, #128
 6213 0026 09D1     		bne	.L309
 6214              		.loc 1 3178 0 is_stmt 0 discriminator 1
 6215 0028 3B69     		ldr	r3, [r7, #16]
 6216 002a 212B     		cmp	r3, #33
 6217 002c 06D1     		bne	.L309
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6218              		.loc 1 3181 0 is_stmt 1
 6219 002e 7B69     		ldr	r3, [r7, #20]
 6220 0030 0022     		movs	r2, #0
 6221 0032 A3F85220 		strh	r2, [r3, #82]	@ movhi
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6222              		.loc 1 3182 0
 6223 0036 7869     		ldr	r0, [r7, #20]
 6224 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 6225              	.L309:
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 6226              		.loc 1 3186 0
 6227 003c 7B69     		ldr	r3, [r7, #20]
 6228 003e 1B68     		ldr	r3, [r3]
 6229 0040 9B68     		ldr	r3, [r3, #8]
 6230 0042 03F04003 		and	r3, r3, #64
 6231 0046 402B     		cmp	r3, #64
 6232 0048 09D1     		bne	.L310
 6233              		.loc 1 3186 0 is_stmt 0 discriminator 1
 6234 004a FB68     		ldr	r3, [r7, #12]
 6235 004c 222B     		cmp	r3, #34
 6236 004e 06D1     		bne	.L310
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6237              		.loc 1 3189 0 is_stmt 1
 6238 0050 7B69     		ldr	r3, [r7, #20]
 6239 0052 0022     		movs	r2, #0
 6240 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6241              		.loc 1 3190 0
 6242 0058 7869     		ldr	r0, [r7, #20]
 6243 005a FFF7FEFF 		bl	UART_EndRxTransfer
 6244              	.L310:
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6245              		.loc 1 3193 0
 6246 005e 7B69     		ldr	r3, [r7, #20]
 6247 0060 DB6F     		ldr	r3, [r3, #124]
ARM GAS  /tmp/ccfCzef7.s 			page 165


 6248 0062 43F01002 		orr	r2, r3, #16
 6249 0066 7B69     		ldr	r3, [r7, #20]
 6250 0068 DA67     		str	r2, [r3, #124]
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered error callback*/
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback(huart);
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak error callback*/
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6251              		.loc 1 3200 0
 6252 006a 7869     		ldr	r0, [r7, #20]
 6253 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6254              		.loc 1 3202 0
 6255 0070 00BF     		nop
 6256 0072 1837     		adds	r7, r7, #24
 6257              	.LCFI289:
 6258              		.cfi_def_cfa_offset 8
 6259 0074 BD46     		mov	sp, r7
 6260              	.LCFI290:
 6261              		.cfi_def_cfa_register 13
 6262              		@ sp needed
 6263 0076 80BD     		pop	{r7, pc}
 6264              		.cfi_endproc
 6265              	.LFE175:
 6267              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6268              		.align	1
 6269              		.syntax unified
 6270              		.thumb
 6271              		.thumb_func
 6272              		.fpu fpv4-sp-d16
 6274              	UART_DMAAbortOnError:
 6275              	.LFB176:
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6276              		.loc 1 3211 0
 6277              		.cfi_startproc
 6278              		@ args = 0, pretend = 0, frame = 16
 6279              		@ frame_needed = 1, uses_anonymous_args = 0
 6280 0000 80B5     		push	{r7, lr}
 6281              	.LCFI291:
 6282              		.cfi_def_cfa_offset 8
 6283              		.cfi_offset 7, -8
 6284              		.cfi_offset 14, -4
 6285 0002 84B0     		sub	sp, sp, #16
 6286              	.LCFI292:
 6287              		.cfi_def_cfa_offset 24
 6288 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccfCzef7.s 			page 166


 6289              	.LCFI293:
 6290              		.cfi_def_cfa_register 7
 6291 0006 7860     		str	r0, [r7, #4]
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6292              		.loc 1 3212 0
 6293 0008 7B68     		ldr	r3, [r7, #4]
 6294 000a 5B6A     		ldr	r3, [r3, #36]
 6295 000c FB60     		str	r3, [r7, #12]
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6296              		.loc 1 3213 0
 6297 000e FB68     		ldr	r3, [r7, #12]
 6298 0010 0022     		movs	r2, #0
 6299 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6300              		.loc 1 3214 0
 6301 0016 FB68     		ldr	r3, [r7, #12]
 6302 0018 0022     		movs	r2, #0
 6303 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered error callback*/
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback(huart);
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak error callback*/
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6304              		.loc 1 3221 0
 6305 001e F868     		ldr	r0, [r7, #12]
 6306 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6307              		.loc 1 3223 0
 6308 0024 00BF     		nop
 6309 0026 1037     		adds	r7, r7, #16
 6310              	.LCFI294:
 6311              		.cfi_def_cfa_offset 8
 6312 0028 BD46     		mov	sp, r7
 6313              	.LCFI295:
 6314              		.cfi_def_cfa_register 13
 6315              		@ sp needed
 6316 002a 80BD     		pop	{r7, pc}
 6317              		.cfi_endproc
 6318              	.LFE176:
 6320              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 6321              		.align	1
 6322              		.syntax unified
 6323              		.thumb
 6324              		.thumb_func
 6325              		.fpu fpv4-sp-d16
 6327              	UART_DMATxAbortCallback:
 6328              	.LFB177:
3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  /tmp/ccfCzef7.s 			page 167


3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6329              		.loc 1 3234 0
 6330              		.cfi_startproc
 6331              		@ args = 0, pretend = 0, frame = 16
 6332              		@ frame_needed = 1, uses_anonymous_args = 0
 6333 0000 80B5     		push	{r7, lr}
 6334              	.LCFI296:
 6335              		.cfi_def_cfa_offset 8
 6336              		.cfi_offset 7, -8
 6337              		.cfi_offset 14, -4
 6338 0002 84B0     		sub	sp, sp, #16
 6339              	.LCFI297:
 6340              		.cfi_def_cfa_offset 24
 6341 0004 00AF     		add	r7, sp, #0
 6342              	.LCFI298:
 6343              		.cfi_def_cfa_register 7
 6344 0006 7860     		str	r0, [r7, #4]
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6345              		.loc 1 3235 0
 6346 0008 7B68     		ldr	r3, [r7, #4]
 6347 000a 5B6A     		ldr	r3, [r3, #36]
 6348 000c FB60     		str	r3, [r7, #12]
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 6349              		.loc 1 3237 0
 6350 000e FB68     		ldr	r3, [r7, #12]
 6351 0010 9B6E     		ldr	r3, [r3, #104]
 6352 0012 0022     		movs	r2, #0
 6353 0014 5A63     		str	r2, [r3, #52]
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 6354              		.loc 1 3240 0
 6355 0016 FB68     		ldr	r3, [r7, #12]
 6356 0018 DB6E     		ldr	r3, [r3, #108]
 6357 001a 002B     		cmp	r3, #0
 6358 001c 04D0     		beq	.L313
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 6359              		.loc 1 3242 0
 6360 001e FB68     		ldr	r3, [r7, #12]
 6361 0020 DB6E     		ldr	r3, [r3, #108]
 6362 0022 5B6B     		ldr	r3, [r3, #52]
 6363 0024 002B     		cmp	r3, #0
 6364 0026 18D1     		bne	.L315
 6365              	.L313:
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6366              		.loc 1 3249 0
ARM GAS  /tmp/ccfCzef7.s 			page 168


 6367 0028 FB68     		ldr	r3, [r7, #12]
 6368 002a 0022     		movs	r2, #0
 6369 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6370              		.loc 1 3250 0
 6371 0030 FB68     		ldr	r3, [r7, #12]
 6372 0032 0022     		movs	r2, #0
 6373 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6374              		.loc 1 3253 0
 6375 0038 FB68     		ldr	r3, [r7, #12]
 6376 003a 0022     		movs	r2, #0
 6377 003c DA67     		str	r2, [r3, #124]
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6378              		.loc 1 3256 0
 6379 003e FB68     		ldr	r3, [r7, #12]
 6380 0040 1B68     		ldr	r3, [r3]
 6381 0042 0F22     		movs	r2, #15
 6382 0044 1A62     		str	r2, [r3, #32]
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6383              		.loc 1 3260 0
 6384 0046 FB68     		ldr	r3, [r7, #12]
 6385 0048 2022     		movs	r2, #32
 6386 004a 5A67     		str	r2, [r3, #116]
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6387              		.loc 1 3261 0
 6388 004c FB68     		ldr	r3, [r7, #12]
 6389 004e 2022     		movs	r2, #32
 6390 0050 9A67     		str	r2, [r3, #120]
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort complete callback */
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6391              		.loc 1 3269 0
 6392 0052 F868     		ldr	r0, [r7, #12]
 6393 0054 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6394 0058 00E0     		b	.L312
 6395              	.L315:
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 6396              		.loc 1 3244 0
 6397 005a 00BF     		nop
 6398              	.L312:
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6399              		.loc 1 3271 0
 6400 005c 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccfCzef7.s 			page 169


 6401              	.LCFI299:
 6402              		.cfi_def_cfa_offset 8
 6403 005e BD46     		mov	sp, r7
 6404              	.LCFI300:
 6405              		.cfi_def_cfa_register 13
 6406              		@ sp needed
 6407 0060 80BD     		pop	{r7, pc}
 6408              		.cfi_endproc
 6409              	.LFE177:
 6411              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 6412              		.align	1
 6413              		.syntax unified
 6414              		.thumb
 6415              		.thumb_func
 6416              		.fpu fpv4-sp-d16
 6418              	UART_DMARxAbortCallback:
 6419              	.LFB178:
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6420              		.loc 1 3283 0
 6421              		.cfi_startproc
 6422              		@ args = 0, pretend = 0, frame = 16
 6423              		@ frame_needed = 1, uses_anonymous_args = 0
 6424 0000 80B5     		push	{r7, lr}
 6425              	.LCFI301:
 6426              		.cfi_def_cfa_offset 8
 6427              		.cfi_offset 7, -8
 6428              		.cfi_offset 14, -4
 6429 0002 84B0     		sub	sp, sp, #16
 6430              	.LCFI302:
 6431              		.cfi_def_cfa_offset 24
 6432 0004 00AF     		add	r7, sp, #0
 6433              	.LCFI303:
 6434              		.cfi_def_cfa_register 7
 6435 0006 7860     		str	r0, [r7, #4]
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6436              		.loc 1 3284 0
 6437 0008 7B68     		ldr	r3, [r7, #4]
 6438 000a 5B6A     		ldr	r3, [r3, #36]
 6439 000c FB60     		str	r3, [r7, #12]
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6440              		.loc 1 3286 0
 6441 000e FB68     		ldr	r3, [r7, #12]
 6442 0010 DB6E     		ldr	r3, [r3, #108]
 6443 0012 0022     		movs	r2, #0
 6444 0014 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccfCzef7.s 			page 170


3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 6445              		.loc 1 3289 0
 6446 0016 FB68     		ldr	r3, [r7, #12]
 6447 0018 9B6E     		ldr	r3, [r3, #104]
 6448 001a 002B     		cmp	r3, #0
 6449 001c 04D0     		beq	.L317
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 6450              		.loc 1 3291 0
 6451 001e FB68     		ldr	r3, [r7, #12]
 6452 0020 9B6E     		ldr	r3, [r3, #104]
 6453 0022 5B6B     		ldr	r3, [r3, #52]
 6454 0024 002B     		cmp	r3, #0
 6455 0026 20D1     		bne	.L319
 6456              	.L317:
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6457              		.loc 1 3298 0
 6458 0028 FB68     		ldr	r3, [r7, #12]
 6459 002a 0022     		movs	r2, #0
 6460 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6461              		.loc 1 3299 0
 6462 0030 FB68     		ldr	r3, [r7, #12]
 6463 0032 0022     		movs	r2, #0
 6464 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6465              		.loc 1 3302 0
 6466 0038 FB68     		ldr	r3, [r7, #12]
 6467 003a 0022     		movs	r2, #0
 6468 003c DA67     		str	r2, [r3, #124]
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6469              		.loc 1 3305 0
 6470 003e FB68     		ldr	r3, [r7, #12]
 6471 0040 1B68     		ldr	r3, [r3]
 6472 0042 0F22     		movs	r2, #15
 6473 0044 1A62     		str	r2, [r3, #32]
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6474              		.loc 1 3308 0
 6475 0046 FB68     		ldr	r3, [r7, #12]
 6476 0048 1B68     		ldr	r3, [r3]
 6477 004a 9A69     		ldr	r2, [r3, #24]
 6478 004c FB68     		ldr	r3, [r7, #12]
 6479 004e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfCzef7.s 			page 171


 6480 0050 42F00802 		orr	r2, r2, #8
 6481 0054 9A61     		str	r2, [r3, #24]
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6482              		.loc 1 3311 0
 6483 0056 FB68     		ldr	r3, [r7, #12]
 6484 0058 2022     		movs	r2, #32
 6485 005a 5A67     		str	r2, [r3, #116]
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6486              		.loc 1 3312 0
 6487 005c FB68     		ldr	r3, [r7, #12]
 6488 005e 2022     		movs	r2, #32
 6489 0060 9A67     		str	r2, [r3, #120]
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort complete callback */
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6490              		.loc 1 3320 0
 6491 0062 F868     		ldr	r0, [r7, #12]
 6492 0064 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6493 0068 00E0     		b	.L316
 6494              	.L319:
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 6495              		.loc 1 3293 0
 6496 006a 00BF     		nop
 6497              	.L316:
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6498              		.loc 1 3322 0
 6499 006c 1037     		adds	r7, r7, #16
 6500              	.LCFI304:
 6501              		.cfi_def_cfa_offset 8
 6502 006e BD46     		mov	sp, r7
 6503              	.LCFI305:
 6504              		.cfi_def_cfa_register 13
 6505              		@ sp needed
 6506 0070 80BD     		pop	{r7, pc}
 6507              		.cfi_endproc
 6508              	.LFE178:
 6510              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 6511              		.align	1
 6512              		.syntax unified
 6513              		.thumb
 6514              		.thumb_func
 6515              		.fpu fpv4-sp-d16
 6517              	UART_DMATxOnlyAbortCallback:
 6518              	.LFB179:
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
ARM GAS  /tmp/ccfCzef7.s 			page 172


3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6519              		.loc 1 3334 0
 6520              		.cfi_startproc
 6521              		@ args = 0, pretend = 0, frame = 16
 6522              		@ frame_needed = 1, uses_anonymous_args = 0
 6523 0000 80B5     		push	{r7, lr}
 6524              	.LCFI306:
 6525              		.cfi_def_cfa_offset 8
 6526              		.cfi_offset 7, -8
 6527              		.cfi_offset 14, -4
 6528 0002 84B0     		sub	sp, sp, #16
 6529              	.LCFI307:
 6530              		.cfi_def_cfa_offset 24
 6531 0004 00AF     		add	r7, sp, #0
 6532              	.LCFI308:
 6533              		.cfi_def_cfa_register 7
 6534 0006 7860     		str	r0, [r7, #4]
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6535              		.loc 1 3335 0
 6536 0008 7B68     		ldr	r3, [r7, #4]
 6537 000a 5B6A     		ldr	r3, [r3, #36]
 6538 000c FB60     		str	r3, [r7, #12]
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6539              		.loc 1 3337 0
 6540 000e FB68     		ldr	r3, [r7, #12]
 6541 0010 0022     		movs	r2, #0
 6542 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6543              		.loc 1 3341 0
 6544 0016 FB68     		ldr	r3, [r7, #12]
 6545 0018 2022     		movs	r2, #32
 6546 001a 5A67     		str	r2, [r3, #116]
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 6547              		.loc 1 3349 0
 6548 001c F868     		ldr	r0, [r7, #12]
 6549 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6550              		.loc 1 3351 0
 6551 0022 00BF     		nop
ARM GAS  /tmp/ccfCzef7.s 			page 173


 6552 0024 1037     		adds	r7, r7, #16
 6553              	.LCFI309:
 6554              		.cfi_def_cfa_offset 8
 6555 0026 BD46     		mov	sp, r7
 6556              	.LCFI310:
 6557              		.cfi_def_cfa_register 13
 6558              		@ sp needed
 6559 0028 80BD     		pop	{r7, pc}
 6560              		.cfi_endproc
 6561              	.LFE179:
 6563              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 6564              		.align	1
 6565              		.syntax unified
 6566              		.thumb
 6567              		.thumb_func
 6568              		.fpu fpv4-sp-d16
 6570              	UART_DMARxOnlyAbortCallback:
 6571              	.LFB180:
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6572              		.loc 1 3362 0
 6573              		.cfi_startproc
 6574              		@ args = 0, pretend = 0, frame = 16
 6575              		@ frame_needed = 1, uses_anonymous_args = 0
 6576 0000 80B5     		push	{r7, lr}
 6577              	.LCFI311:
 6578              		.cfi_def_cfa_offset 8
 6579              		.cfi_offset 7, -8
 6580              		.cfi_offset 14, -4
 6581 0002 84B0     		sub	sp, sp, #16
 6582              	.LCFI312:
 6583              		.cfi_def_cfa_offset 24
 6584 0004 00AF     		add	r7, sp, #0
 6585              	.LCFI313:
 6586              		.cfi_def_cfa_register 7
 6587 0006 7860     		str	r0, [r7, #4]
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6588              		.loc 1 3363 0
 6589 0008 7B68     		ldr	r3, [r7, #4]
 6590 000a 5B6A     		ldr	r3, [r3, #36]
 6591 000c FB60     		str	r3, [r7, #12]
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6592              		.loc 1 3365 0
 6593 000e FB68     		ldr	r3, [r7, #12]
 6594 0010 0022     		movs	r2, #0
 6595 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfCzef7.s 			page 174


3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6596              		.loc 1 3368 0
 6597 0016 FB68     		ldr	r3, [r7, #12]
 6598 0018 1B68     		ldr	r3, [r3]
 6599 001a 0F22     		movs	r2, #15
 6600 001c 1A62     		str	r2, [r3, #32]
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6601              		.loc 1 3371 0
 6602 001e FB68     		ldr	r3, [r7, #12]
 6603 0020 1B68     		ldr	r3, [r3]
 6604 0022 9A69     		ldr	r2, [r3, #24]
 6605 0024 FB68     		ldr	r3, [r7, #12]
 6606 0026 1B68     		ldr	r3, [r3]
 6607 0028 42F00802 		orr	r2, r2, #8
 6608 002c 9A61     		str	r2, [r3, #24]
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6609              		.loc 1 3374 0
 6610 002e FB68     		ldr	r3, [r7, #12]
 6611 0030 2022     		movs	r2, #32
 6612 0032 9A67     		str	r2, [r3, #120]
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 6613              		.loc 1 3382 0
 6614 0034 F868     		ldr	r0, [r7, #12]
 6615 0036 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6616              		.loc 1 3384 0
 6617 003a 00BF     		nop
 6618 003c 1037     		adds	r7, r7, #16
 6619              	.LCFI314:
 6620              		.cfi_def_cfa_offset 8
 6621 003e BD46     		mov	sp, r7
 6622              	.LCFI315:
 6623              		.cfi_def_cfa_register 13
 6624              		@ sp needed
 6625 0040 80BD     		pop	{r7, pc}
 6626              		.cfi_endproc
 6627              	.LFE180:
 6629              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 6630              		.align	1
 6631              		.syntax unified
 6632              		.thumb
 6633              		.thumb_func
 6634              		.fpu fpv4-sp-d16
 6636              	UART_TxISR_8BIT:
ARM GAS  /tmp/ccfCzef7.s 			page 175


 6637              	.LFB181:
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6638              		.loc 1 3394 0
 6639              		.cfi_startproc
 6640              		@ args = 0, pretend = 0, frame = 8
 6641              		@ frame_needed = 1, uses_anonymous_args = 0
 6642              		@ link register save eliminated.
 6643 0000 80B4     		push	{r7}
 6644              	.LCFI316:
 6645              		.cfi_def_cfa_offset 4
 6646              		.cfi_offset 7, -4
 6647 0002 83B0     		sub	sp, sp, #12
 6648              	.LCFI317:
 6649              		.cfi_def_cfa_offset 16
 6650 0004 00AF     		add	r7, sp, #0
 6651              	.LCFI318:
 6652              		.cfi_def_cfa_register 7
 6653 0006 7860     		str	r0, [r7, #4]
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 6654              		.loc 1 3396 0
 6655 0008 7B68     		ldr	r3, [r7, #4]
 6656 000a 5B6F     		ldr	r3, [r3, #116]
 6657 000c 212B     		cmp	r3, #33
 6658 000e 2BD1     		bne	.L325
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 6659              		.loc 1 3398 0
 6660 0010 7B68     		ldr	r3, [r7, #4]
 6661 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6662 0016 9BB2     		uxth	r3, r3
 6663 0018 002B     		cmp	r3, #0
 6664 001a 10D1     		bne	.L324
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 6665              		.loc 1 3401 0
 6666 001c 7B68     		ldr	r3, [r7, #4]
 6667 001e 1B68     		ldr	r3, [r3]
 6668 0020 1A68     		ldr	r2, [r3]
 6669 0022 7B68     		ldr	r3, [r7, #4]
 6670 0024 1B68     		ldr	r3, [r3]
 6671 0026 22F08002 		bic	r2, r2, #128
 6672 002a 1A60     		str	r2, [r3]
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6673              		.loc 1 3404 0
ARM GAS  /tmp/ccfCzef7.s 			page 176


 6674 002c 7B68     		ldr	r3, [r7, #4]
 6675 002e 1B68     		ldr	r3, [r3]
 6676 0030 1A68     		ldr	r2, [r3]
 6677 0032 7B68     		ldr	r3, [r7, #4]
 6678 0034 1B68     		ldr	r3, [r3]
 6679 0036 42F04002 		orr	r2, r2, #64
 6680 003a 1A60     		str	r2, [r3]
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr++;
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6681              		.loc 1 3413 0
 6682 003c 14E0     		b	.L325
 6683              	.L324:
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr++;
 6684              		.loc 1 3408 0
 6685 003e 7B68     		ldr	r3, [r7, #4]
 6686 0040 DB6C     		ldr	r3, [r3, #76]
 6687 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6688 0044 7B68     		ldr	r3, [r7, #4]
 6689 0046 1B68     		ldr	r3, [r3]
 6690 0048 92B2     		uxth	r2, r2
 6691 004a 1A85     		strh	r2, [r3, #40]	@ movhi
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 6692              		.loc 1 3409 0
 6693 004c 7B68     		ldr	r3, [r7, #4]
 6694 004e DB6C     		ldr	r3, [r3, #76]
 6695 0050 5A1C     		adds	r2, r3, #1
 6696 0052 7B68     		ldr	r3, [r7, #4]
 6697 0054 DA64     		str	r2, [r3, #76]
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 6698              		.loc 1 3410 0
 6699 0056 7B68     		ldr	r3, [r7, #4]
 6700 0058 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6701 005c 9BB2     		uxth	r3, r3
 6702 005e 013B     		subs	r3, r3, #1
 6703 0060 9AB2     		uxth	r2, r3
 6704 0062 7B68     		ldr	r3, [r7, #4]
 6705 0064 A3F85220 		strh	r2, [r3, #82]	@ movhi
 6706              	.L325:
 6707              		.loc 1 3413 0
 6708 0068 00BF     		nop
 6709 006a 0C37     		adds	r7, r7, #12
 6710              	.LCFI319:
 6711              		.cfi_def_cfa_offset 4
 6712 006c BD46     		mov	sp, r7
 6713              	.LCFI320:
 6714              		.cfi_def_cfa_register 13
 6715              		@ sp needed
 6716 006e 5DF8047B 		ldr	r7, [sp], #4
 6717              	.LCFI321:
 6718              		.cfi_restore 7
ARM GAS  /tmp/ccfCzef7.s 			page 177


 6719              		.cfi_def_cfa_offset 0
 6720 0072 7047     		bx	lr
 6721              		.cfi_endproc
 6722              	.LFE181:
 6724              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 6725              		.align	1
 6726              		.syntax unified
 6727              		.thumb
 6728              		.thumb_func
 6729              		.fpu fpv4-sp-d16
 6731              	UART_TxISR_16BIT:
 6732              	.LFB182:
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6733              		.loc 1 3423 0
 6734              		.cfi_startproc
 6735              		@ args = 0, pretend = 0, frame = 16
 6736              		@ frame_needed = 1, uses_anonymous_args = 0
 6737              		@ link register save eliminated.
 6738 0000 80B4     		push	{r7}
 6739              	.LCFI322:
 6740              		.cfi_def_cfa_offset 4
 6741              		.cfi_offset 7, -4
 6742 0002 85B0     		sub	sp, sp, #20
 6743              	.LCFI323:
 6744              		.cfi_def_cfa_offset 24
 6745 0004 00AF     		add	r7, sp, #0
 6746              	.LCFI324:
 6747              		.cfi_def_cfa_register 7
 6748 0006 7860     		str	r0, [r7, #4]
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *tmp;
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 6749              		.loc 1 3427 0
 6750 0008 7B68     		ldr	r3, [r7, #4]
 6751 000a 5B6F     		ldr	r3, [r3, #116]
 6752 000c 212B     		cmp	r3, #33
 6753 000e 2FD1     		bne	.L329
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 6754              		.loc 1 3429 0
 6755 0010 7B68     		ldr	r3, [r7, #4]
 6756 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6757 0016 9BB2     		uxth	r3, r3
 6758 0018 002B     		cmp	r3, #0
 6759 001a 10D1     		bne	.L328
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
ARM GAS  /tmp/ccfCzef7.s 			page 178


3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 6760              		.loc 1 3432 0
 6761 001c 7B68     		ldr	r3, [r7, #4]
 6762 001e 1B68     		ldr	r3, [r3]
 6763 0020 1A68     		ldr	r2, [r3]
 6764 0022 7B68     		ldr	r3, [r7, #4]
 6765 0024 1B68     		ldr	r3, [r3]
 6766 0026 22F08002 		bic	r2, r2, #128
 6767 002a 1A60     		str	r2, [r3]
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6768              		.loc 1 3435 0
 6769 002c 7B68     		ldr	r3, [r7, #4]
 6770 002e 1B68     		ldr	r3, [r3]
 6771 0030 1A68     		ldr	r2, [r3]
 6772 0032 7B68     		ldr	r3, [r7, #4]
 6773 0034 1B68     		ldr	r3, [r3]
 6774 0036 42F04002 		orr	r2, r2, #64
 6775 003a 1A60     		str	r2, [r3]
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6776              		.loc 1 3445 0
 6777 003c 18E0     		b	.L329
 6778              	.L328:
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 6779              		.loc 1 3439 0
 6780 003e 7B68     		ldr	r3, [r7, #4]
 6781 0040 DB6C     		ldr	r3, [r3, #76]
 6782 0042 FB60     		str	r3, [r7, #12]
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 6783              		.loc 1 3440 0
 6784 0044 FB68     		ldr	r3, [r7, #12]
 6785 0046 1A88     		ldrh	r2, [r3]
 6786 0048 7B68     		ldr	r3, [r7, #4]
 6787 004a 1B68     		ldr	r3, [r3]
 6788 004c C2F30802 		ubfx	r2, r2, #0, #9
 6789 0050 92B2     		uxth	r2, r2
 6790 0052 1A85     		strh	r2, [r3, #40]	@ movhi
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 6791              		.loc 1 3441 0
 6792 0054 7B68     		ldr	r3, [r7, #4]
 6793 0056 DB6C     		ldr	r3, [r3, #76]
 6794 0058 9A1C     		adds	r2, r3, #2
 6795 005a 7B68     		ldr	r3, [r7, #4]
 6796 005c DA64     		str	r2, [r3, #76]
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 6797              		.loc 1 3442 0
 6798 005e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 179


 6799 0060 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6800 0064 9BB2     		uxth	r3, r3
 6801 0066 013B     		subs	r3, r3, #1
 6802 0068 9AB2     		uxth	r2, r3
 6803 006a 7B68     		ldr	r3, [r7, #4]
 6804 006c A3F85220 		strh	r2, [r3, #82]	@ movhi
 6805              	.L329:
 6806              		.loc 1 3445 0
 6807 0070 00BF     		nop
 6808 0072 1437     		adds	r7, r7, #20
 6809              	.LCFI325:
 6810              		.cfi_def_cfa_offset 4
 6811 0074 BD46     		mov	sp, r7
 6812              	.LCFI326:
 6813              		.cfi_def_cfa_register 13
 6814              		@ sp needed
 6815 0076 5DF8047B 		ldr	r7, [sp], #4
 6816              	.LCFI327:
 6817              		.cfi_restore 7
 6818              		.cfi_def_cfa_offset 0
 6819 007a 7047     		bx	lr
 6820              		.cfi_endproc
 6821              	.LFE182:
 6823              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 6824              		.align	1
 6825              		.syntax unified
 6826              		.thumb
 6827              		.thumb_func
 6828              		.fpu fpv4-sp-d16
 6830              	UART_EndTransmit_IT:
 6831              	.LFB183:
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6832              		.loc 1 3455 0
 6833              		.cfi_startproc
 6834              		@ args = 0, pretend = 0, frame = 8
 6835              		@ frame_needed = 1, uses_anonymous_args = 0
 6836 0000 80B5     		push	{r7, lr}
 6837              	.LCFI328:
 6838              		.cfi_def_cfa_offset 8
 6839              		.cfi_offset 7, -8
 6840              		.cfi_offset 14, -4
 6841 0002 82B0     		sub	sp, sp, #8
 6842              	.LCFI329:
 6843              		.cfi_def_cfa_offset 16
 6844 0004 00AF     		add	r7, sp, #0
 6845              	.LCFI330:
 6846              		.cfi_def_cfa_register 7
 6847 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccfCzef7.s 			page 180


3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6848              		.loc 1 3457 0
 6849 0008 7B68     		ldr	r3, [r7, #4]
 6850 000a 1B68     		ldr	r3, [r3]
 6851 000c 1A68     		ldr	r2, [r3]
 6852 000e 7B68     		ldr	r3, [r7, #4]
 6853 0010 1B68     		ldr	r3, [r3]
 6854 0012 22F04002 		bic	r2, r2, #64
 6855 0016 1A60     		str	r2, [r3]
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6856              		.loc 1 3460 0
 6857 0018 7B68     		ldr	r3, [r7, #4]
 6858 001a 2022     		movs	r2, #32
 6859 001c 5A67     		str	r2, [r3, #116]
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
 6860              		.loc 1 3463 0
 6861 001e 7B68     		ldr	r3, [r7, #4]
 6862 0020 0022     		movs	r2, #0
 6863 0022 5A66     		str	r2, [r3, #100]
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 6864              		.loc 1 3470 0
 6865 0024 7868     		ldr	r0, [r7, #4]
 6866 0026 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6867              		.loc 1 3472 0
 6868 002a 00BF     		nop
 6869 002c 0837     		adds	r7, r7, #8
 6870              	.LCFI331:
 6871              		.cfi_def_cfa_offset 8
 6872 002e BD46     		mov	sp, r7
 6873              	.LCFI332:
 6874              		.cfi_def_cfa_register 13
 6875              		@ sp needed
 6876 0030 80BD     		pop	{r7, pc}
 6877              		.cfi_endproc
 6878              	.LFE183:
 6880              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 6881              		.align	1
 6882              		.syntax unified
 6883              		.thumb
 6884              		.thumb_func
 6885              		.fpu fpv4-sp-d16
 6887              	UART_RxISR_8BIT:
 6888              	.LFB184:
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfCzef7.s 			page 181


3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 6889              		.loc 1 3480 0
 6890              		.cfi_startproc
 6891              		@ args = 0, pretend = 0, frame = 16
 6892              		@ frame_needed = 1, uses_anonymous_args = 0
 6893 0000 80B5     		push	{r7, lr}
 6894              	.LCFI333:
 6895              		.cfi_def_cfa_offset 8
 6896              		.cfi_offset 7, -8
 6897              		.cfi_offset 14, -4
 6898 0002 84B0     		sub	sp, sp, #16
 6899              	.LCFI334:
 6900              		.cfi_def_cfa_offset 24
 6901 0004 00AF     		add	r7, sp, #0
 6902              	.LCFI335:
 6903              		.cfi_def_cfa_register 7
 6904 0006 7860     		str	r0, [r7, #4]
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 6905              		.loc 1 3481 0
 6906 0008 7B68     		ldr	r3, [r7, #4]
 6907 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 6908 000e FB81     		strh	r3, [r7, #14]	@ movhi
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6909              		.loc 1 3485 0
 6910 0010 7B68     		ldr	r3, [r7, #4]
 6911 0012 9B6F     		ldr	r3, [r3, #120]
 6912 0014 222B     		cmp	r3, #34
 6913 0016 3AD1     		bne	.L332
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 6914              		.loc 1 3487 0
 6915 0018 7B68     		ldr	r3, [r7, #4]
 6916 001a 1B68     		ldr	r3, [r3]
 6917 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 6918 001e BB81     		strh	r3, [r7, #12]	@ movhi
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 6919              		.loc 1 3488 0
 6920 0020 BB89     		ldrh	r3, [r7, #12]	@ movhi
 6921 0022 D9B2     		uxtb	r1, r3
 6922 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 6923 0026 DAB2     		uxtb	r2, r3
 6924 0028 7B68     		ldr	r3, [r7, #4]
 6925 002a 5B6D     		ldr	r3, [r3, #84]
 6926 002c 0A40     		ands	r2, r2, r1
 6927 002e D2B2     		uxtb	r2, r2
 6928 0030 1A70     		strb	r2, [r3]
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr++;
 6929              		.loc 1 3489 0
ARM GAS  /tmp/ccfCzef7.s 			page 182


 6930 0032 7B68     		ldr	r3, [r7, #4]
 6931 0034 5B6D     		ldr	r3, [r3, #84]
 6932 0036 5A1C     		adds	r2, r3, #1
 6933 0038 7B68     		ldr	r3, [r7, #4]
 6934 003a 5A65     		str	r2, [r3, #84]
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
 6935              		.loc 1 3490 0
 6936 003c 7B68     		ldr	r3, [r7, #4]
 6937 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 6938 0042 9BB2     		uxth	r3, r3
 6939 0044 013B     		subs	r3, r3, #1
 6940 0046 9AB2     		uxth	r2, r3
 6941 0048 7B68     		ldr	r3, [r7, #4]
 6942 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 6943              		.loc 1 3492 0
 6944 004e 7B68     		ldr	r3, [r7, #4]
 6945 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 6946 0054 9BB2     		uxth	r3, r3
 6947 0056 002B     		cmp	r3, #0
 6948 0058 21D1     		bne	.L335
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6949              		.loc 1 3495 0
 6950 005a 7B68     		ldr	r3, [r7, #4]
 6951 005c 1B68     		ldr	r3, [r3]
 6952 005e 1A68     		ldr	r2, [r3]
 6953 0060 7B68     		ldr	r3, [r7, #4]
 6954 0062 1B68     		ldr	r3, [r3]
 6955 0064 22F49072 		bic	r2, r2, #288
 6956 0068 1A60     		str	r2, [r3]
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6957              		.loc 1 3498 0
 6958 006a 7B68     		ldr	r3, [r7, #4]
 6959 006c 1B68     		ldr	r3, [r3]
 6960 006e 9A68     		ldr	r2, [r3, #8]
 6961 0070 7B68     		ldr	r3, [r7, #4]
 6962 0072 1B68     		ldr	r3, [r3]
 6963 0074 22F00102 		bic	r2, r2, #1
 6964 0078 9A60     		str	r2, [r3, #8]
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 6965              		.loc 1 3501 0
 6966 007a 7B68     		ldr	r3, [r7, #4]
 6967 007c 2022     		movs	r2, #32
 6968 007e 9A67     		str	r2, [r3, #120]
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = NULL;
 6969              		.loc 1 3504 0
 6970 0080 7B68     		ldr	r3, [r7, #4]
 6971 0082 0022     		movs	r2, #0
ARM GAS  /tmp/ccfCzef7.s 			page 183


 6972 0084 1A66     		str	r2, [r3, #96]
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 6973              		.loc 1 3511 0
 6974 0086 7868     		ldr	r0, [r7, #4]
 6975 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 6976              		.loc 1 3520 0
 6977 008c 07E0     		b	.L335
 6978              	.L332:
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 6979              		.loc 1 3518 0
 6980 008e 7B68     		ldr	r3, [r7, #4]
 6981 0090 1B68     		ldr	r3, [r3]
 6982 0092 9A69     		ldr	r2, [r3, #24]
 6983 0094 7B68     		ldr	r3, [r7, #4]
 6984 0096 1B68     		ldr	r3, [r3]
 6985 0098 42F00802 		orr	r2, r2, #8
 6986 009c 9A61     		str	r2, [r3, #24]
 6987              	.L335:
 6988              		.loc 1 3520 0
 6989 009e 00BF     		nop
 6990 00a0 1037     		adds	r7, r7, #16
 6991              	.LCFI336:
 6992              		.cfi_def_cfa_offset 8
 6993 00a2 BD46     		mov	sp, r7
 6994              	.LCFI337:
 6995              		.cfi_def_cfa_register 13
 6996              		@ sp needed
 6997 00a4 80BD     		pop	{r7, pc}
 6998              		.cfi_endproc
 6999              	.LFE184:
 7001              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 7002              		.align	1
 7003              		.syntax unified
 7004              		.thumb
 7005              		.thumb_func
 7006              		.fpu fpv4-sp-d16
 7008              	UART_RxISR_16BIT:
 7009              	.LFB185:
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
ARM GAS  /tmp/ccfCzef7.s 			page 184


3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 7010              		.loc 1 3530 0
 7011              		.cfi_startproc
 7012              		@ args = 0, pretend = 0, frame = 16
 7013              		@ frame_needed = 1, uses_anonymous_args = 0
 7014 0000 80B5     		push	{r7, lr}
 7015              	.LCFI338:
 7016              		.cfi_def_cfa_offset 8
 7017              		.cfi_offset 7, -8
 7018              		.cfi_offset 14, -4
 7019 0002 84B0     		sub	sp, sp, #16
 7020              	.LCFI339:
 7021              		.cfi_def_cfa_offset 24
 7022 0004 00AF     		add	r7, sp, #0
 7023              	.LCFI340:
 7024              		.cfi_def_cfa_register 7
 7025 0006 7860     		str	r0, [r7, #4]
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *tmp;
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7026              		.loc 1 3532 0
 7027 0008 7B68     		ldr	r3, [r7, #4]
 7028 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7029 000e FB81     		strh	r3, [r7, #14]	@ movhi
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7030              		.loc 1 3536 0
 7031 0010 7B68     		ldr	r3, [r7, #4]
 7032 0012 9B6F     		ldr	r3, [r3, #120]
 7033 0014 222B     		cmp	r3, #34
 7034 0016 3AD1     		bne	.L337
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7035              		.loc 1 3538 0
 7036 0018 7B68     		ldr	r3, [r7, #4]
 7037 001a 1B68     		ldr	r3, [r3]
 7038 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7039 001e BB81     		strh	r3, [r7, #12]	@ movhi
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 7040              		.loc 1 3539 0
 7041 0020 7B68     		ldr	r3, [r7, #4]
 7042 0022 5B6D     		ldr	r3, [r3, #84]
 7043 0024 BB60     		str	r3, [r7, #8]
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 7044              		.loc 1 3540 0
 7045 0026 BA89     		ldrh	r2, [r7, #12]	@ movhi
 7046 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7047 002a 1340     		ands	r3, r3, r2
 7048 002c 9AB2     		uxth	r2, r3
 7049 002e BB68     		ldr	r3, [r7, #8]
 7050 0030 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccfCzef7.s 			page 185


3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 7051              		.loc 1 3541 0
 7052 0032 7B68     		ldr	r3, [r7, #4]
 7053 0034 5B6D     		ldr	r3, [r3, #84]
 7054 0036 9A1C     		adds	r2, r3, #2
 7055 0038 7B68     		ldr	r3, [r7, #4]
 7056 003a 5A65     		str	r2, [r3, #84]
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
 7057              		.loc 1 3542 0
 7058 003c 7B68     		ldr	r3, [r7, #4]
 7059 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7060 0042 9BB2     		uxth	r3, r3
 7061 0044 013B     		subs	r3, r3, #1
 7062 0046 9AB2     		uxth	r2, r3
 7063 0048 7B68     		ldr	r3, [r7, #4]
 7064 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7065              		.loc 1 3544 0
 7066 004e 7B68     		ldr	r3, [r7, #4]
 7067 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7068 0054 9BB2     		uxth	r3, r3
 7069 0056 002B     		cmp	r3, #0
 7070 0058 21D1     		bne	.L340
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7071              		.loc 1 3547 0
 7072 005a 7B68     		ldr	r3, [r7, #4]
 7073 005c 1B68     		ldr	r3, [r3]
 7074 005e 1A68     		ldr	r2, [r3]
 7075 0060 7B68     		ldr	r3, [r7, #4]
 7076 0062 1B68     		ldr	r3, [r3]
 7077 0064 22F49072 		bic	r2, r2, #288
 7078 0068 1A60     		str	r2, [r3]
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7079              		.loc 1 3550 0
 7080 006a 7B68     		ldr	r3, [r7, #4]
 7081 006c 1B68     		ldr	r3, [r3]
 7082 006e 9A68     		ldr	r2, [r3, #8]
 7083 0070 7B68     		ldr	r3, [r7, #4]
 7084 0072 1B68     		ldr	r3, [r3]
 7085 0074 22F00102 		bic	r2, r2, #1
 7086 0078 9A60     		str	r2, [r3, #8]
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7087              		.loc 1 3553 0
 7088 007a 7B68     		ldr	r3, [r7, #4]
 7089 007c 2022     		movs	r2, #32
 7090 007e 9A67     		str	r2, [r3, #120]
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = NULL;
 7091              		.loc 1 3556 0
ARM GAS  /tmp/ccfCzef7.s 			page 186


 7092 0080 7B68     		ldr	r3, [r7, #4]
 7093 0082 0022     		movs	r2, #0
 7094 0084 1A66     		str	r2, [r3, #96]
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7095              		.loc 1 3563 0
 7096 0086 7868     		ldr	r0, [r7, #4]
 7097 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 7098              		.loc 1 3572 0
 7099 008c 07E0     		b	.L340
 7100              	.L337:
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 7101              		.loc 1 3570 0
 7102 008e 7B68     		ldr	r3, [r7, #4]
 7103 0090 1B68     		ldr	r3, [r3]
 7104 0092 9A69     		ldr	r2, [r3, #24]
 7105 0094 7B68     		ldr	r3, [r7, #4]
 7106 0096 1B68     		ldr	r3, [r3]
 7107 0098 42F00802 		orr	r2, r2, #8
 7108 009c 9A61     		str	r2, [r3, #24]
 7109              	.L340:
 7110              		.loc 1 3572 0
 7111 009e 00BF     		nop
 7112 00a0 1037     		adds	r7, r7, #16
 7113              	.LCFI341:
 7114              		.cfi_def_cfa_offset 8
 7115 00a2 BD46     		mov	sp, r7
 7116              	.LCFI342:
 7117              		.cfi_def_cfa_register 13
 7118              		@ sp needed
 7119 00a4 80BD     		pop	{r7, pc}
 7120              		.cfi_endproc
 7121              	.LFE185:
 7123              		.text
 7124              	.Letext0:
 7125              		.file 2 "/opt/st/stm32cubeide_1.3.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-s
 7126              		.file 3 "/opt/st/stm32cubeide_1.3.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-s
 7127              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 7128              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 7129              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 7130              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 7131              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 7132              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
ARM GAS  /tmp/ccfCzef7.s 			page 187


 7133              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 7134              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccfCzef7.s 			page 188


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/ccfCzef7.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccfCzef7.s:25     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccfCzef7.s:676    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccfCzef7.s:4875   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccfCzef7.s:5334   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccfCzef7.s:5537   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccfCzef7.s:139    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccfCzef7.s:146    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccfCzef7.s:267    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccfCzef7.s:274    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccfCzef7.s:424    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccfCzef7.s:431    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccfCzef7.s:573    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccfCzef7.s:580    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccfCzef7.s:719    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccfCzef7.s:669    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccfCzef7.s:712    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccfCzef7.s:755    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccfCzef7.s:762    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccfCzef7.s:5642   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccfCzef7.s:966    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccfCzef7.s:973    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccfCzef7.s:1244   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccfCzef7.s:1251   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccfCzef7.s:1384   .text.HAL_UART_Transmit_IT:00000000000000b0 $d
     /tmp/ccfCzef7.s:6731   .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccfCzef7.s:6636   .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccfCzef7.s:1390   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccfCzef7.s:1397   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccfCzef7.s:1609   .text.HAL_UART_Receive_IT:000000000000013c $d
     /tmp/ccfCzef7.s:7008   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccfCzef7.s:6887   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccfCzef7.s:1615   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccfCzef7.s:1622   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccfCzef7.s:1787   .text.HAL_UART_Transmit_DMA:00000000000000ec $d
     /tmp/ccfCzef7.s:5930   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccfCzef7.s:6004   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccfCzef7.s:6177   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccfCzef7.s:1794   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccfCzef7.s:1801   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccfCzef7.s:1973   .text.HAL_UART_Receive_DMA:00000000000000fc $d
     /tmp/ccfCzef7.s:6049   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccfCzef7.s:6132   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccfCzef7.s:1980   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccfCzef7.s:1987   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccfCzef7.s:2107   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccfCzef7.s:2114   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccfCzef7.s:2219   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccfCzef7.s:2226   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccfCzef7.s:5810   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccfCzef7.s:5864   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccfCzef7.s:2373   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccfCzef7.s:2380   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccfCzef7.s:2562   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccfCzef7.s:2569   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
ARM GAS  /tmp/ccfCzef7.s 			page 189


     /tmp/ccfCzef7.s:2669   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccfCzef7.s:2676   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccfCzef7.s:2797   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccfCzef7.s:2804   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccfCzef7.s:3965   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccfCzef7.s:3036   .text.HAL_UART_Abort_IT:0000000000000164 $d
     /tmp/ccfCzef7.s:6327   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccfCzef7.s:6418   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccfCzef7.s:3042   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccfCzef7.s:3049   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccfCzef7.s:4008   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccfCzef7.s:3167   .text.HAL_UART_AbortTransmit_IT:00000000000000a8 $d
     /tmp/ccfCzef7.s:6517   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccfCzef7.s:3172   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccfCzef7.s:3179   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccfCzef7.s:4051   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccfCzef7.s:3323   .text.HAL_UART_AbortReceive_IT:00000000000000d8 $d
     /tmp/ccfCzef7.s:6570   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccfCzef7.s:3328   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccfCzef7.s:3335   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccfCzef7.s:3922   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccfCzef7.s:6830   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccfCzef7.s:3738   .text.HAL_UART_IRQHandler:0000000000000288 $d
     /tmp/ccfCzef7.s:6274   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccfCzef7.s:3743   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:3750   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccfCzef7.s:3786   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:3793   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccfCzef7.s:3829   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:3836   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccfCzef7.s:3872   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:3879   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccfCzef7.s:3915   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:3958   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:4001   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:4044   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:4087   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/ccfCzef7.s:4094   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccfCzef7.s:4141   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/ccfCzef7.s:4148   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccfCzef7.s:4229   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/ccfCzef7.s:4236   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccfCzef7.s:4317   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccfCzef7.s:4324   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccfCzef7.s:4390   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccfCzef7.s:4397   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccfCzef7.s:4463   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccfCzef7.s:4470   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccfCzef7.s:4514   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccfCzef7.s:4521   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccfCzef7.s:4601   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccfCzef7.s:4608   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccfCzef7.s:4688   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccfCzef7.s:4695   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccfCzef7.s:4767   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccfCzef7.s:4774   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccfCzef7.s:4822   .text.HAL_UART_GetError:0000000000000000 $t
ARM GAS  /tmp/ccfCzef7.s 			page 190


     /tmp/ccfCzef7.s:4829   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccfCzef7.s:4868   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccfCzef7.s:4970   .text.UART_SetConfig:0000000000000094 $d
     /tmp/ccfCzef7.s:4974   .text.UART_SetConfig:00000000000000a4 $t
     /tmp/ccfCzef7.s:5041   .text.UART_SetConfig:0000000000000100 $d
     /tmp/ccfCzef7.s:5050   .text.UART_SetConfig:0000000000000124 $t
     /tmp/ccfCzef7.s:5181   .text.UART_SetConfig:0000000000000204 $d
     /tmp/ccfCzef7.s:5190   .text.UART_SetConfig:0000000000000228 $t
     /tmp/ccfCzef7.s:5272   .text.UART_SetConfig:00000000000002b8 $d
     /tmp/ccfCzef7.s:5279   .text.UART_SetConfig:00000000000002cc $t
     /tmp/ccfCzef7.s:5327   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccfCzef7.s:5530   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccfCzef7.s:5635   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccfCzef7.s:5804   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccfCzef7.s:5858   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccfCzef7.s:5924   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccfCzef7.s:5998   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccfCzef7.s:6043   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccfCzef7.s:6126   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccfCzef7.s:6171   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccfCzef7.s:6268   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccfCzef7.s:6321   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:6412   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:6511   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:6564   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccfCzef7.s:6630   .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccfCzef7.s:6725   .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccfCzef7.s:6824   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccfCzef7.s:6881   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccfCzef7.s:7002   .text.UART_RxISR_16BIT:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
