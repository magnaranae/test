ARM GAS  /tmp/ccVFGzQE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB123:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f3xx_it.c **** 
  28:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f3xx_it.c **** 
  31:Src/stm32f3xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccVFGzQE.s 			page 2


  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f3xx_it.c ****  
  36:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f3xx_it.c **** 
  41:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f3xx_it.c **** 
  56:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f3xx_it.c **** 
  60:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32f3xx_it.c **** 
  62:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /******************************************************************************/
  65:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  66:Src/stm32f3xx_it.c **** /******************************************************************************/
  67:Src/stm32f3xx_it.c **** /**
  68:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Src/stm32f3xx_it.c ****   */
  70:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  71:Src/stm32f3xx_it.c **** {
  28              		.loc 1 71 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  72:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Src/stm32f3xx_it.c **** 
  74:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Src/stm32f3xx_it.c **** 
ARM GAS  /tmp/ccVFGzQE.s 			page 3


  77:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Src/stm32f3xx_it.c **** }
  40              		.loc 1 78 0
  41 0004 00BF     		nop
  42 0006 BD46     		mov	sp, r7
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 13
  45              		@ sp needed
  46 0008 5DF8047B 		ldr	r7, [sp], #4
  47              	.LCFI3:
  48              		.cfi_restore 7
  49              		.cfi_def_cfa_offset 0
  50 000c 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE123:
  54              		.section	.text.HardFault_Handler,"ax",%progbits
  55              		.align	1
  56              		.global	HardFault_Handler
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	HardFault_Handler:
  63              	.LFB124:
  79:Src/stm32f3xx_it.c **** 
  80:Src/stm32f3xx_it.c **** /**
  81:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Src/stm32f3xx_it.c ****   */
  83:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  84:Src/stm32f3xx_it.c **** {
  64              		.loc 1 84 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              	.LCFI4:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 00AF     		add	r7, sp, #0
  74              	.LCFI5:
  75              		.cfi_def_cfa_register 7
  76              	.L3:
  85:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Src/stm32f3xx_it.c **** 
  87:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Src/stm32f3xx_it.c ****   while (1)
  77              		.loc 1 88 0 discriminator 1
  78 0004 FEE7     		b	.L3
  79              		.cfi_endproc
  80              	.LFE124:
  82              		.section	.text.MemManage_Handler,"ax",%progbits
  83              		.align	1
  84              		.global	MemManage_Handler
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
ARM GAS  /tmp/ccVFGzQE.s 			page 4


  88              		.fpu fpv4-sp-d16
  90              	MemManage_Handler:
  91              	.LFB125:
  89:Src/stm32f3xx_it.c ****   {
  90:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Src/stm32f3xx_it.c ****   }
  93:Src/stm32f3xx_it.c **** }
  94:Src/stm32f3xx_it.c **** 
  95:Src/stm32f3xx_it.c **** /**
  96:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
  97:Src/stm32f3xx_it.c ****   */
  98:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
  99:Src/stm32f3xx_it.c **** {
  92              		.loc 1 99 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              	.LCFI6:
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 7, -4
 101 0002 00AF     		add	r7, sp, #0
 102              	.LCFI7:
 103              		.cfi_def_cfa_register 7
 104              	.L5:
 100:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 101:Src/stm32f3xx_it.c **** 
 102:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 103:Src/stm32f3xx_it.c ****   while (1)
 105              		.loc 1 103 0 discriminator 1
 106 0004 FEE7     		b	.L5
 107              		.cfi_endproc
 108              	.LFE125:
 110              		.section	.text.BusFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	BusFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	BusFault_Handler:
 119              	.LFB126:
 104:Src/stm32f3xx_it.c ****   {
 105:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 106:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 107:Src/stm32f3xx_it.c ****   }
 108:Src/stm32f3xx_it.c **** }
 109:Src/stm32f3xx_it.c **** 
 110:Src/stm32f3xx_it.c **** /**
 111:Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 112:Src/stm32f3xx_it.c ****   */
 113:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 114:Src/stm32f3xx_it.c **** {
 120              		.loc 1 114 0
 121              		.cfi_startproc
ARM GAS  /tmp/ccVFGzQE.s 			page 5


 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              	.LCFI8:
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 7, -4
 129 0002 00AF     		add	r7, sp, #0
 130              	.LCFI9:
 131              		.cfi_def_cfa_register 7
 132              	.L7:
 115:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 116:Src/stm32f3xx_it.c **** 
 117:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 118:Src/stm32f3xx_it.c ****   while (1)
 133              		.loc 1 118 0 discriminator 1
 134 0004 FEE7     		b	.L7
 135              		.cfi_endproc
 136              	.LFE126:
 138              		.section	.text.UsageFault_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	UsageFault_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	UsageFault_Handler:
 147              	.LFB127:
 119:Src/stm32f3xx_it.c ****   {
 120:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 121:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 122:Src/stm32f3xx_it.c ****   }
 123:Src/stm32f3xx_it.c **** }
 124:Src/stm32f3xx_it.c **** 
 125:Src/stm32f3xx_it.c **** /**
 126:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 127:Src/stm32f3xx_it.c ****   */
 128:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 129:Src/stm32f3xx_it.c **** {
 148              		.loc 1 129 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 80B4     		push	{r7}
 154              	.LCFI10:
 155              		.cfi_def_cfa_offset 4
 156              		.cfi_offset 7, -4
 157 0002 00AF     		add	r7, sp, #0
 158              	.LCFI11:
 159              		.cfi_def_cfa_register 7
 160              	.L9:
 130:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 131:Src/stm32f3xx_it.c **** 
 132:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 133:Src/stm32f3xx_it.c ****   while (1)
 161              		.loc 1 133 0 discriminator 1
ARM GAS  /tmp/ccVFGzQE.s 			page 6


 162 0004 FEE7     		b	.L9
 163              		.cfi_endproc
 164              	.LFE127:
 166              		.section	.text.SVC_Handler,"ax",%progbits
 167              		.align	1
 168              		.global	SVC_Handler
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	SVC_Handler:
 175              	.LFB128:
 134:Src/stm32f3xx_it.c ****   {
 135:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 136:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 137:Src/stm32f3xx_it.c ****   }
 138:Src/stm32f3xx_it.c **** }
 139:Src/stm32f3xx_it.c **** 
 140:Src/stm32f3xx_it.c **** /**
 141:Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 142:Src/stm32f3xx_it.c ****   */
 143:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 144:Src/stm32f3xx_it.c **** {
 176              		.loc 1 144 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
 182              	.LCFI12:
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 00AF     		add	r7, sp, #0
 186              	.LCFI13:
 187              		.cfi_def_cfa_register 7
 145:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 146:Src/stm32f3xx_it.c **** 
 147:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 148:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 151:Src/stm32f3xx_it.c **** }
 188              		.loc 1 151 0
 189 0004 00BF     		nop
 190 0006 BD46     		mov	sp, r7
 191              	.LCFI14:
 192              		.cfi_def_cfa_register 13
 193              		@ sp needed
 194 0008 5DF8047B 		ldr	r7, [sp], #4
 195              	.LCFI15:
 196              		.cfi_restore 7
 197              		.cfi_def_cfa_offset 0
 198 000c 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE128:
 202              		.section	.text.DebugMon_Handler,"ax",%progbits
 203              		.align	1
ARM GAS  /tmp/ccVFGzQE.s 			page 7


 204              		.global	DebugMon_Handler
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	DebugMon_Handler:
 211              	.LFB129:
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c **** /**
 154:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 155:Src/stm32f3xx_it.c ****   */
 156:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 157:Src/stm32f3xx_it.c **** {
 212              		.loc 1 157 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217 0000 80B4     		push	{r7}
 218              	.LCFI16:
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 0002 00AF     		add	r7, sp, #0
 222              	.LCFI17:
 223              		.cfi_def_cfa_register 7
 158:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 161:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 162:Src/stm32f3xx_it.c **** 
 163:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 164:Src/stm32f3xx_it.c **** }
 224              		.loc 1 164 0
 225 0004 00BF     		nop
 226 0006 BD46     		mov	sp, r7
 227              	.LCFI18:
 228              		.cfi_def_cfa_register 13
 229              		@ sp needed
 230 0008 5DF8047B 		ldr	r7, [sp], #4
 231              	.LCFI19:
 232              		.cfi_restore 7
 233              		.cfi_def_cfa_offset 0
 234 000c 7047     		bx	lr
 235              		.cfi_endproc
 236              	.LFE129:
 238              		.section	.text.PendSV_Handler,"ax",%progbits
 239              		.align	1
 240              		.global	PendSV_Handler
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	PendSV_Handler:
 247              	.LFB130:
 165:Src/stm32f3xx_it.c **** 
 166:Src/stm32f3xx_it.c **** /**
 167:Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  /tmp/ccVFGzQE.s 			page 8


 168:Src/stm32f3xx_it.c ****   */
 169:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 170:Src/stm32f3xx_it.c **** {
 248              		.loc 1 170 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              	.LCFI20:
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 7, -4
 257 0002 00AF     		add	r7, sp, #0
 258              	.LCFI21:
 259              		.cfi_def_cfa_register 7
 171:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 172:Src/stm32f3xx_it.c **** 
 173:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 174:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 175:Src/stm32f3xx_it.c **** 
 176:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 177:Src/stm32f3xx_it.c **** }
 260              		.loc 1 177 0
 261 0004 00BF     		nop
 262 0006 BD46     		mov	sp, r7
 263              	.LCFI22:
 264              		.cfi_def_cfa_register 13
 265              		@ sp needed
 266 0008 5DF8047B 		ldr	r7, [sp], #4
 267              	.LCFI23:
 268              		.cfi_restore 7
 269              		.cfi_def_cfa_offset 0
 270 000c 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE130:
 274              		.section	.text.SysTick_Handler,"ax",%progbits
 275              		.align	1
 276              		.global	SysTick_Handler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	SysTick_Handler:
 283              	.LFB131:
 178:Src/stm32f3xx_it.c **** 
 179:Src/stm32f3xx_it.c **** /**
 180:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 181:Src/stm32f3xx_it.c ****   */
 182:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 183:Src/stm32f3xx_it.c **** {
 284              		.loc 1 183 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              	.LCFI24:
 290              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccVFGzQE.s 			page 9


 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 00AF     		add	r7, sp, #0
 294              	.LCFI25:
 295              		.cfi_def_cfa_register 7
 184:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 185:Src/stm32f3xx_it.c **** 
 186:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 187:Src/stm32f3xx_it.c ****   HAL_IncTick();
 296              		.loc 1 187 0
 297 0004 FFF7FEFF 		bl	HAL_IncTick
 188:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 189:Src/stm32f3xx_it.c **** 
 190:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 191:Src/stm32f3xx_it.c **** }
 298              		.loc 1 191 0
 299 0008 00BF     		nop
 300 000a 80BD     		pop	{r7, pc}
 301              		.cfi_endproc
 302              	.LFE131:
 304              		.text
 305              	.Letext0:
 306              		.file 2 "/opt/st/stm32cubeide_1.3.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-s
 307              		.file 3 "/opt/st/stm32cubeide_1.3.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-s
 308              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 309              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 310              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccVFGzQE.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/ccVFGzQE.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccVFGzQE.s:55     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:62     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccVFGzQE.s:83     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:90     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccVFGzQE.s:111    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:118    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccVFGzQE.s:139    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:146    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccVFGzQE.s:167    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:174    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccVFGzQE.s:203    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:210    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccVFGzQE.s:239    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:246    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccVFGzQE.s:275    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccVFGzQE.s:282    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
